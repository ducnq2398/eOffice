[{"/Users/macos/Desktop/EOfficeWeb/src/index.js":"1","/Users/macos/Desktop/EOfficeWeb/src/components/App/App.js":"2","/Users/macos/Desktop/EOfficeWeb/src/components/RouterURL/RouterURL.js":"3","/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ForgotPassword.js":"4","/Users/macos/Desktop/EOfficeWeb/src/components/Login/Login.js":"5","/Users/macos/Desktop/EOfficeWeb/src/components/CompanyList/CompanyList.js":"6","/Users/macos/Desktop/EOfficeWeb/src/components/CompanyRegister/CompanyRegister.js":"7","/Users/macos/Desktop/EOfficeWeb/src/components/AdminManager/AdminManager.js":"8","/Users/macos/Desktop/EOfficeWeb/src/components/AdminLogin/AdminLogin.js":"9","/Users/macos/Desktop/EOfficeWeb/src/components/EditCompany/EditCompany.js":"10","/Users/macos/Desktop/EOfficeWeb/src/components/Panigation/Panigation.js":"11","/Users/macos/Desktop/EOfficeWeb/src/api/companyListAPI.js":"12","/Users/macos/Desktop/EOfficeWeb/src/api/axiosClient.js":"13","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePhone.js":"14","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateCompany.js":"15","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateAddress.js":"16","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateName.js":"17","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateDepartment.js":"18","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateEmail.js":"19","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePassword.js":"20","/Users/macos/Desktop/EOfficeWeb/src/utils/Common.js":"21","/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js":"22","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/Sidebar.js":"23","/Users/macos/Desktop/EOfficeWeb/src/components/AdminCompany/UserManagement/UserManagement.js":"24","/Users/macos/Desktop/EOfficeWeb/src/components/SidebarAdmin/SidebarAdmin.js":"25","/Users/macos/Desktop/EOfficeWeb/src/components/Nav/Header.js":"26"},{"size":277,"mtime":1611389616355,"results":"27","hashOfConfig":"28"},{"size":363,"mtime":1611511908234,"results":"29","hashOfConfig":"28"},{"size":1633,"mtime":1611684509290,"results":"30","hashOfConfig":"28"},{"size":2226,"mtime":1611679468751,"results":"31","hashOfConfig":"28"},{"size":782,"mtime":1611674379015,"results":"32","hashOfConfig":"28"},{"size":4528,"mtime":1611733133844,"results":"33","hashOfConfig":"28"},{"size":7377,"mtime":1611729352951,"results":"34","hashOfConfig":"28"},{"size":595,"mtime":1611761989895,"results":"35","hashOfConfig":"28"},{"size":2312,"mtime":1611767168944,"results":"36","hashOfConfig":"28"},{"size":6947,"mtime":1611730169010,"results":"37","hashOfConfig":"28"},{"size":1045,"mtime":1611140302088,"results":"38","hashOfConfig":"28"},{"size":314,"mtime":1611511662317,"results":"39","hashOfConfig":"28"},{"size":495,"mtime":1611511650931,"results":"40","hashOfConfig":"28"},{"size":442,"mtime":1611408840383,"results":"41","hashOfConfig":"28"},{"size":279,"mtime":1611409581562,"results":"42","hashOfConfig":"28"},{"size":280,"mtime":1611409692899,"results":"43","hashOfConfig":"28"},{"size":351,"mtime":1611410436183,"results":"44","hashOfConfig":"28"},{"size":307,"mtime":1611411210500,"results":"45","hashOfConfig":"28"},{"size":470,"mtime":1611413190148,"results":"46","hashOfConfig":"28"},{"size":377,"mtime":1611412693996,"results":"47","hashOfConfig":"28"},{"size":498,"mtime":1611510033096,"results":"48","hashOfConfig":"28"},{"size":2524,"mtime":1611681599024,"results":"49","hashOfConfig":"28"},{"size":1445,"mtime":1611685288742,"results":"50","hashOfConfig":"28"},{"size":333,"mtime":1611737256557,"results":"51","hashOfConfig":"28"},{"size":1987,"mtime":1611733125441,"results":"52","hashOfConfig":"28"},{"size":1988,"mtime":1611739634701,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"x75xkq",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/macos/Desktop/EOfficeWeb/src/index.js",[],["114","115"],"/Users/macos/Desktop/EOfficeWeb/src/components/App/App.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/RouterURL/RouterURL.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ForgotPassword.js",["116","117"],"import {useState } from \"react\";\nimport {Button, Col, Container, Form, FormGroup, Input, Modal, ModalBody, ModalFooter, ModalHeader, Row} from \"reactstrap\";\nimport logo from '../../images/logo.png';\nimport ValidatePhone from \"../Validation/ValidatePhone\";\nimport './ForgotPassword.css';\n\nfunction ForgotPassword(){\n    const [phone, setPhone] = useState('');\n    function handleOnChange(e) {\n        setPhone(e.target.value)\n    }\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n\n    return(\n        <Container>\n            <img src={logo} alt=\"\"/>\n            <Form className=\"forgot\">\n                <FormGroup>\n                    <h3>Forgot Password?</h3>\n                </FormGroup>\n                <FormGroup className=\"style_input\">\n                    <Input type=\"tel\" required=\"required\" placeholder=\"Please enter phone number\" onChange={handleOnChange}/>\n                </FormGroup>\n                <FormGroup className=\"btn_next\">\n                    <Button className=\"btn_next_2\" color=\"primary\" onClick={toggle}>Next</Button>\n                </FormGroup>\n            </Form>\n            <Modal style={{marginTop:'18%'}} isOpen={modal} toggle={toggle}>\n                <ModalHeader className=\"otp_banner\">Verifying OTP</ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <FormGroup>\n                            <span>Please enter the OTP sent to Phone number to retrieve your password</span>\n                        </FormGroup>\n                        <FormGroup>\n                            <Input type=\"text\" name=\"otp\"/>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Row>\n                        <Col sm={5}>\n                            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                        </Col>\n                        <Col sm={5}>\n                            <Button color=\"primary\" onClick={toggle}>Verifying</Button>\n                        </Col>\n                    </Row>\n                </ModalFooter>\n            </Modal>\n        </Container>\n    );\n}\n\nexport default ForgotPassword;","/Users/macos/Desktop/EOfficeWeb/src/components/Login/Login.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/CompanyList/CompanyList.js",["118","119","120","121"],"import { Container, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Table, Form, FormGroup, Input, Row, Col } from \"reactstrap\";\nimport './CompanyList.css';\nimport {useHistory, Link} from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport Panigations from \"../Panigation/Panigation\";\nimport companyListAPI from \"../../api/companyListAPI\";\nimport SidebarAdmin from \"../SidebarAdmin/SidebarAdmin\";\n\n\nfunction CompanyList(){\n    const history = useHistory();\n    const home = () => history.push('/admin-manager');\n    const [filter, setFilter] = useState(false);\n    const toggle = () => setFilter(prevState => ! prevState);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [searchResult, setSearchResult] = useState([]);\n    const [panigation, setPanigation] = useState({\n        page:1,\n        limit: 5,\n        totalRows: 6,\n    });\n\n    const [postList, setPostList] = useState([]);\n    useEffect(()=>{\n        async function fetchPostList(){\n            try {\n                const parmas = {\n                    page : 1,\n                };\n                const response = await companyListAPI.getAll(parmas);\n                console.log('heloo', response.data);\n                setPostList(response.data); \n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchPostList();\n    },[filter])\n\n    const handleChange = event =>{\n        setSearchTerm(event.target.value);\n    }\n\n    function handlePageChange(newPage){\n        console.log(newPage);\n    }\n\n\n    return(\n        <div>\n            <SidebarAdmin/>\n            <div className=\"main-panel\">\n            <Container fluid={true}>\n                <div className=\"banner\">\n                    Company List\n                </div>\n                <div className=\"search_form\">\n                    <Form>\n                        <FormGroup>\n                            <Row>\n                                <Col xs={10}>\n                                    <Input type=\"search\" className=\"form-control rounded\" placeholder=\"Search by name company\" value={searchTerm} onChange={handleChange}/>\n                                </Col>\n                                <Col xs={2}>\n                                    <Dropdown isOpen={filter}toggle={toggle}>\n                                    <DropdownToggle caret>\n                                        Filter\n                                    </DropdownToggle>\n                                    <DropdownMenu>\n                                        <DropdownItem>Active</DropdownItem>\n                                        <DropdownItem>Deactive</DropdownItem>\n                                    </DropdownMenu>\n                                    </Dropdown>\n                                </Col>\n                            </Row>\n                        </FormGroup>\n                        \n                    </Form>\n                </div>\n                <Table className=\"table_css\">\n                    <thead>\n                        <tr>\n                            <th>STT</th>\n                            <th>Company Name</th>\n                            <th>Aplicant Name</th>\n                            <th>Date Created</th>\n                            <th>Status</th>\n                            <th>Phone Number</th>\n                            <th>Email Address</th>\n                            <th>Edits/Details</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {postList.map(data => (\n                            <tr key={data.id}>\n                                    <th>{data.id}</th>\n                                    <td>{data.email}</td>\n                                    <td>{data.first_name}</td>\n                                    <td>{data.last_name}</td>\n                                    <td>{data.avatar}</td>\n                                    <td>{data.first_name}</td>\n                                    <td>{data.email}</td>\n                                    <td>\n                                        <Link to=\"/edit-company\">Edit/Detail</Link>\n                                    </td>\n                            </tr>))}  \n                    </tbody>    \n            </Table>\n            <Panigations\n                panigation={panigation}\n                onPageChange={handlePageChange}\n            />\n            </Container>\n            </div>\n        </div>\n    );\n}\nexport default CompanyList;","/Users/macos/Desktop/EOfficeWeb/src/components/CompanyRegister/CompanyRegister.js",["122","123"],"import React, { useState } from 'react';\nimport './CompanyRegister.css'\nimport {useHistory} from 'react-router-dom';\nimport {Button, Col, Container, Form, FormGroup, Input, Label} from 'reactstrap'\nimport ValidatePhone from '../Validation/ValidatePhone';\nimport ValidateCompany from '../Validation/ValidateCompany';\nimport ValidateAddress from '../Validation/ValidateAddress';\nimport ValidateName from '../Validation/ValidateName';\nimport ValidateEmail from '../Validation/ValidateEmail';\nimport ValidatePassword from '../Validation/ValidatePassword';\nimport SidebarAdmin from '../SidebarAdmin/SidebarAdmin';\n\nfunction CompanyRegister(props){\n    const history = useHistory();\n    const home = () => history.push('/admin-manager');\n    const [companyRegister, setCompanyRegister] = useState({\n        company_name: '',\n        street_address: '',\n        phone_number: '',\n        applicant: '',\n        applicant_email: '',\n        status: 1,\n        applicant_password:'',\n    })\n    const [validPhone, setValidPhone] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validCompany, setValidCompany] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validAddress, setValidAddress] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validName, setValidName] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validEmail, setValidEmail] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validPassword, setValidPassword] = useState({\n        isValid: false,\n        isInValid: false\n    });\n\n    function checkEmail() {\n        const {isValid, isInValid} = ValidateEmail(companyRegister.applicant_email);\n        setValidEmail({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkPhone(){\n        const {isValid, isInValid} = ValidatePhone(companyRegister.phone_number);\n        setValidPhone({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkCompany() {\n        const {isValid, isInValid} = ValidateCompany(companyRegister.company_name);\n        setValidCompany({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkAddress() {\n        const {isValid, isInValid} = ValidateAddress(companyRegister.street_address);\n        setValidAddress({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkName() {\n        const{isValid , isInValid} = ValidateName(companyRegister.applicant);\n        setValidName({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkPassword() {\n        const{isValid , isInValid} = ValidatePassword(companyRegister.applicant_password);\n        setValidPassword({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function handleChange(event){\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setCompanyRegister({\n            ... companyRegister,\n            [name] : value,\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault();\n        console.log(companyRegister)\n    }\n        return (\n            <div>\n                <SidebarAdmin/>\n                <div className=\"main-panel\">\n                <Container fluid={true}>\n                <div className=\"banner\">\n                    Company Register/Editing\n                </div>\n                    <Form style={{marginTop:'20px'}} onSubmit={handleSubmit}>\n                        <FormGroup row>\n                            <Label sm={2}>Company Name</Label>\n                            <Col sm={8}>\n                                <Input valid={validCompany.isValid} invalid={validCompany.isInValid} type=\"text\" name=\"company_name\" required=\"required\" onChange={handleChange} onBlur={checkCompany}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Street Address</Label>\n                            <Col sm={8}>\n                                <Input valid={validAddress.isValid} invalid={validAddress.isInValid} type=\"text\" name=\"street_address\" onChange={handleChange} onBlur={checkAddress}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Phone Number</Label>\n                            <Col sm={8}>\n                                <Input invalid={validPhone.isInValid} valid={validPhone.isValid} type=\"tel\" name=\"phone_number\" required=\"required\" onChange={handleChange} onBlur={checkPhone}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Applicant</Label>\n                            <Col sm={8}>\n                                <Input valid={validName.isValid} invalid={validName.isInValid} onBlur={checkName} type=\"text\" name=\"applicant\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Applicant Email</Label>\n                            <Col sm={8}>\n                                <Input valid={validEmail.isValid} invalid={validEmail.isInValid} onBlur={checkEmail} type=\"email\" name=\"applicant_email\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\" row>\n                            <Label sm={2}>Status</Label>\n                            <FormGroup check>\n                                <Label check sm={4}>\n                                    <Input type=\"radio\" name=\"status\" value=\"1\" defaultChecked onChange={handleChange}/>\n                                    Active\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check sm={4}>\n                                    <Input type=\"radio\" name=\"status\" value=\"2\" onChange={handleChange}/>\n                                    Deactive\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Password</Label>\n                            <Col sm={8}>\n                                <Input valid={validPassword.isValid} invalid={validPassword.isInValid} onBlur={checkPassword} type=\"password\" name=\"applicant_password\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Button type=\"submit\" style={{width:'400px',marginLeft:'auto', marginRight:'auto',marginTop:'20px'}} color=\"primary\" size=\"lg\" block>Verification</Button>\n                        </FormGroup>\n                    </Form>\n                </Container>\n                </div>\n                \n            </div>\n        );\n    }\n\nexport default CompanyRegister;","/Users/macos/Desktop/EOfficeWeb/src/components/AdminManager/AdminManager.js",["124","125","126","127","128"],"import { Button, Form, FormGroup } from 'reactstrap';\nimport React from 'react';\nimport { Link,useHistory} from 'react-router-dom';\nimport './AdminManager.css';\nimport { getUser} from '../../utils/Common';\nimport SidebarAdmin from '../SidebarAdmin/SidebarAdmin';\nfunction AdminManager(){\n        const user = getUser();\n        return (\n            <div>\n                <SidebarAdmin/>\n                <div className=\"main-panel\">\n                  <h1 style={{color:'blue'}}>Hello {user.name}</h1>\n                </div>   \n            </div>    \n        );\n    }\n\nexport default AdminManager;","/Users/macos/Desktop/EOfficeWeb/src/components/AdminLogin/AdminLogin.js",["129","130","131"],"/Users/macos/Desktop/EOfficeWeb/src/components/EditCompany/EditCompany.js",["132","133","134","135","136"],"import React, { useState } from 'react';\nimport logo from './../../images/logo.png';\nimport './EditCompany.css'\nimport {useHistory} from 'react-router-dom';\nimport {Button, Col, Container, Form, FormGroup, Input, Label} from 'reactstrap'\nimport ValidateCompany from '../Validation/ValidateCompany';\nimport ValidatePhone from '../Validation/ValidatePhone';\nimport ValidateEmail from '../Validation/ValidateEmail';\nimport ValidateName from '../Validation/ValidateName';\nimport ValidateDepartment from '../Validation/ValidateDepartment';\nimport ValidateAddress from '../Validation/ValidateAddress';\nimport SidebarAdmin from '../SidebarAdmin/SidebarAdmin';\n\nfunction CompanyRegister(){\n    const history = useHistory();\n    const home = () => history.push('/admin-manager');\n    const [editCompanyRegister, setEditCompanyRegister] = useState({\n        company_name: '',\n        street_address: '',\n        phone_number: '',\n        applicant: '',\n        applicant_department: 1,\n        applicant_email: '',\n        status: 1,\n    })\n    const [validPhone, setValidPhone] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validCompany, setValidCompany] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validAddress, setValidAddress] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validName, setValidName] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validDepartment, setValidDepartment] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validEmail, setValidEmail] = useState({\n        isValid: false,\n        isInValid: false\n    });\n\n    function checkEmail() {\n        const {isValid, isInValid} = ValidateEmail(editCompanyRegister.applicant_email);\n        setValidEmail({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkPhone(){\n        const {isValid, isInValid} = ValidatePhone(editCompanyRegister.phone_number);\n        setValidPhone({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkCompany() {\n        const {isValid, isInValid} = ValidateCompany(editCompanyRegister.company_name);\n        setValidCompany({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkAddress() {\n        const {isValid, isInValid} = ValidateAddress(editCompanyRegister.street_address);\n        setValidAddress({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkName() {\n        const{isValid , isInValid} = ValidateName(editCompanyRegister.applicant);\n        setValidName({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n    function checkDepartment() {\n        const{isValid , isInValid} = ValidateDepartment(editCompanyRegister.applicant_department);\n        setValidDepartment({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n\n    function handleChange(event){\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setEditCompanyRegister({\n            ... editCompanyRegister,\n            [name] : value,\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault();\n        console.log(editCompanyRegister)\n    }\n        return (\n            <div>\n                <SidebarAdmin/>\n                <div className=\"main-panel\">\n                <Container fluid={true}>\n                <div className=\"banner\">\n                    Editing Company\n                </div>\n                    <Form onSubmit={handleSubmit} style={{marginTop:'20px'}}>\n                        <FormGroup row>\n                            <Label sm={2}>Company Name</Label>\n                            <Col sm={8}>\n                                <Input valid={validCompany.isValid} invalid={validCompany.isInValid} onBlur={checkCompany} type=\"text\" name=\"company_name\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Street Address</Label>\n                            <Col sm={8}>\n                                <Input valid={validAddress.isValid} invalid={validAddress.isInValid} onBlur={checkAddress} type=\"text\" name=\"street_address\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Phone Number</Label>\n                            <Col sm={8}>\n                                <Input valid={validPhone.isValid} invalid={validPhone.isInValid} onBlur={checkPhone} type=\"text\" name=\"phone_number\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Applicant</Label>\n                            <Col sm={8}>\n                                <Input valid={validName.isValid} invalid={validName.isInValid} onBlur={checkName} type=\"text\" name=\"applicant\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Applicant Email</Label>\n                            <Col sm={8}>\n                                <Input valid={validEmail.isValid} invalid={validEmail.isInValid} onBlur={checkEmail} type=\"email\" name=\"applicant_email\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\" row>\n                            <Label sm={2}>Status</Label>\n                            <FormGroup check>\n                                <Label check sm={4}>\n                                    <Input type=\"radio\" name=\"status\" value=\"1\" onChange={handleChange} defaultChecked/>\n                                    Active\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check sm={4}>\n                                    <Input type=\"radio\" name=\"status\" value=\"2\" onChange={handleChange}/>\n                                    Deactive\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Button type=\"submit\" color=\"primary\" size=\"lg\">Save</Button>\n                        </FormGroup>\n                    </Form>\n                </Container>\n                </div>\n                \n            </div>\n        );\n    }\n\nexport default CompanyRegister;","/Users/macos/Desktop/EOfficeWeb/src/components/Panigation/Panigation.js",[],"/Users/macos/Desktop/EOfficeWeb/src/api/companyListAPI.js",[],"/Users/macos/Desktop/EOfficeWeb/src/api/axiosClient.js",[],["137","138"],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePhone.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateCompany.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateAddress.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateName.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateDepartment.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateEmail.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePassword.js",[],"/Users/macos/Desktop/EOfficeWeb/src/utils/Common.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js",["139"],"import {useState } from \"react\";\nimport {Button, Container, Form, FormGroup, Input} from \"reactstrap\";\nimport logo from '../../images/logo.png';\nimport './ForgotPassword.css';\nimport ValidatePassword from '../Validation/ValidatePassword';\n\nfunction ResetPassword(){\n    const [password, setPassword] = useState({\n        new_password: '',\n        confirm_password: '',\n    });\n    const [validPassword, setValidPassword] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validConfirmPassword, setValidConfirmPassword] = useState({\n        isValid: false,\n        isInValid: false\n    });\n\n    function handleOnChange(event) {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setPassword({\n            ... password,\n            [name] : value,\n        })\n    }\n\n    function checkPassword() {\n        const{isValid , isInValid} = ValidatePassword(password.new_password);\n        setValidPassword({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkConfirm(){\n        if(password.confirm_password===password.new_password){\n            setValidConfirmPassword({\n                isValid: true,\n                isInValid: false,\n            })\n        }else{\n            setValidConfirmPassword({\n                isValid: false,\n                isInValid: true,\n            })\n        }\n    }\n\n    return(\n        <Container>\n            <img src={logo} alt=\"\"/>\n            <Form className=\"forgot\">\n                <FormGroup>\n                    <h3>Forgot Password?</h3>\n                </FormGroup>\n                <FormGroup className=\"style_input\">\n                    <Input valid={validPassword.isValid} invalid={validPassword.isInValid} type=\"password\" name=\"new_password\" required=\"required\" onChange={handleOnChange} onBlur={checkPassword} placeholder=\"New password\"/>\n                </FormGroup>\n                <FormGroup className=\"style_input2\">\n                    <Input valid={validConfirmPassword.isValid} invalid={validConfirmPassword.isInValid} type=\"password\" name=\"confirm_password\" required=\"required\" onChange={handleOnChange} onBlur={checkConfirm} placeholder=\"Confirm new password\"/>\n                </FormGroup>\n                <FormGroup className=\"btn_next\">\n                    <Button className=\"btn_update\" color=\"primary\">Update</Button>\n                </FormGroup>\n            </Form>\n        </Container>\n    );\n}\n\nexport default ResetPassword;","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/Sidebar.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/AdminCompany/UserManagement/UserManagement.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/SidebarAdmin/SidebarAdmin.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Nav/Header.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":21},{"ruleId":"144","severity":1,"message":"148","line":8,"column":12,"nodeType":"146","messageId":"147","endLine":8,"endColumn":17},{"ruleId":"144","severity":1,"message":"149","line":12,"column":11,"nodeType":"146","messageId":"147","endLine":12,"endColumn":15},{"ruleId":"144","severity":1,"message":"150","line":16,"column":12,"nodeType":"146","messageId":"147","endLine":16,"endColumn":24},{"ruleId":"144","severity":1,"message":"151","line":16,"column":26,"nodeType":"146","messageId":"147","endLine":16,"endColumn":41},{"ruleId":"144","severity":1,"message":"152","line":17,"column":24,"nodeType":"146","messageId":"147","endLine":17,"endColumn":37},{"ruleId":"144","severity":1,"message":"149","line":15,"column":11,"nodeType":"146","messageId":"147","endLine":15,"endColumn":15},{"ruleId":"153","severity":1,"message":"154","line":103,"column":16,"nodeType":"155","messageId":"156","endLine":103,"endColumn":17,"fix":"157"},{"ruleId":"144","severity":1,"message":"158","line":1,"column":10,"nodeType":"146","messageId":"147","endLine":1,"endColumn":16},{"ruleId":"144","severity":1,"message":"159","line":1,"column":18,"nodeType":"146","messageId":"147","endLine":1,"endColumn":22},{"ruleId":"144","severity":1,"message":"160","line":1,"column":24,"nodeType":"146","messageId":"147","endLine":1,"endColumn":33},{"ruleId":"144","severity":1,"message":"161","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"162","line":3,"column":15,"nodeType":"146","messageId":"147","endLine":3,"endColumn":25},{"ruleId":"144","severity":1,"message":"163","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":21,"column":20,"nodeType":"155","messageId":"156","endLine":21,"endColumn":21,"fix":"164"},{"ruleId":"165","severity":1,"message":"166","line":46,"column":17,"nodeType":"167","endLine":46,"endColumn":22},{"ruleId":"144","severity":1,"message":"168","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":12},{"ruleId":"144","severity":1,"message":"149","line":16,"column":11,"nodeType":"146","messageId":"147","endLine":16,"endColumn":15},{"ruleId":"144","severity":1,"message":"169","line":42,"column":12,"nodeType":"146","messageId":"147","endLine":42,"endColumn":27},{"ruleId":"144","severity":1,"message":"170","line":90,"column":14,"nodeType":"146","messageId":"147","endLine":90,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":104,"column":16,"nodeType":"155","messageId":"156","endLine":104,"endColumn":17,"fix":"171"},{"ruleId":"140","replacedBy":"172"},{"ruleId":"142","replacedBy":"173"},{"ruleId":"153","severity":1,"message":"154","line":26,"column":16,"nodeType":"155","messageId":"156","endLine":26,"endColumn":17,"fix":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'ValidatePhone' is defined but never used.","Identifier","unusedVar","'phone' is assigned a value but never used.","'home' is assigned a value but never used.","'searchResult' is assigned a value but never used.","'setSearchResult' is assigned a value but never used.","'setPanigation' is assigned a value but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"177","text":"178"},"'Button' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'queryString' is defined but never used.",{"range":"179","text":"178"},"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'logo' is defined but never used.","'validDepartment' is assigned a value but never used.","'checkDepartment' is defined but never used.",{"range":"180","text":"178"},["175"],["176"],{"range":"181","text":"178"},"no-global-assign","no-unsafe-negation",[3143,3144],"",[670,671],[3232,3233],[801,802]]