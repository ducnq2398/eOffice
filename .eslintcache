[{"/Users/macos/Desktop/EOfficeWeb/src/index.js":"1","/Users/macos/Desktop/EOfficeWeb/src/components/App/App.js":"2","/Users/macos/Desktop/EOfficeWeb/src/components/RouterURL/RouterURL.js":"3","/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ForgotPassword.js":"4","/Users/macos/Desktop/EOfficeWeb/src/components/Login/Login.js":"5","/Users/macos/Desktop/EOfficeWeb/src/components/CompanyList/CompanyList.js":"6","/Users/macos/Desktop/EOfficeWeb/src/components/CompanyRegister/CompanyRegister.js":"7","/Users/macos/Desktop/EOfficeWeb/src/components/AdminManager/AdminManager.js":"8","/Users/macos/Desktop/EOfficeWeb/src/components/AdminLogin/AdminLogin.js":"9","/Users/macos/Desktop/EOfficeWeb/src/components/EditCompany/EditCompany.js":"10","/Users/macos/Desktop/EOfficeWeb/src/api/companyListAPI.js":"11","/Users/macos/Desktop/EOfficeWeb/src/api/axiosClient.js":"12","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePhone.js":"13","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateCompany.js":"14","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateAddress.js":"15","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateName.js":"16","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateDepartment.js":"17","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateEmail.js":"18","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePassword.js":"19","/Users/macos/Desktop/EOfficeWeb/src/utils/Common.js":"20","/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js":"21","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/Sidebar.js":"22","/Users/macos/Desktop/EOfficeWeb/src/components/AdminCompany/UserManagement/UserManagement.js":"23","/Users/macos/Desktop/EOfficeWeb/src/components/SidebarAdmin/SidebarAdmin.js":"24","/Users/macos/Desktop/EOfficeWeb/src/components/Nav/Header.js":"25","/Users/macos/Desktop/EOfficeWeb/src/api/loginAPI.js":"26","/Users/macos/Desktop/EOfficeWeb/src/components/Panigation/Panigation.js":"27","/Users/macos/Desktop/EOfficeWeb/src/api/userListAPI.js":"28"},{"size":277,"mtime":1611389616355,"results":"29","hashOfConfig":"30"},{"size":371,"mtime":1611835599122,"results":"31","hashOfConfig":"30"},{"size":1633,"mtime":1611684509290,"results":"32","hashOfConfig":"30"},{"size":2638,"mtime":1611835299325,"results":"33","hashOfConfig":"30"},{"size":1200,"mtime":1611835333762,"results":"34","hashOfConfig":"30"},{"size":4453,"mtime":1611905789475,"results":"35","hashOfConfig":"30"},{"size":8185,"mtime":1611856781256,"results":"36","hashOfConfig":"30"},{"size":462,"mtime":1611854372655,"results":"37","hashOfConfig":"30"},{"size":2962,"mtime":1611853779071,"results":"38","hashOfConfig":"30"},{"size":6529,"mtime":1611855499277,"results":"39","hashOfConfig":"30"},{"size":203,"mtime":1611851401066,"results":"40","hashOfConfig":"30"},{"size":258,"mtime":1611850204077,"results":"41","hashOfConfig":"30"},{"size":442,"mtime":1611408840383,"results":"42","hashOfConfig":"30"},{"size":279,"mtime":1611409581562,"results":"43","hashOfConfig":"30"},{"size":280,"mtime":1611409692899,"results":"44","hashOfConfig":"30"},{"size":351,"mtime":1611410436183,"results":"45","hashOfConfig":"30"},{"size":307,"mtime":1611411210500,"results":"46","hashOfConfig":"47"},{"size":470,"mtime":1611413190148,"results":"48","hashOfConfig":"30"},{"size":377,"mtime":1611412693996,"results":"49","hashOfConfig":"30"},{"size":498,"mtime":1611510033096,"results":"50","hashOfConfig":"30"},{"size":2532,"mtime":1611835310056,"results":"51","hashOfConfig":"30"},{"size":1469,"mtime":1611901224088,"results":"52","hashOfConfig":"30"},{"size":5532,"mtime":1611908157898,"results":"53","hashOfConfig":"30"},{"size":2000,"mtime":1611835384458,"results":"54","hashOfConfig":"30"},{"size":716,"mtime":1611901669246,"results":"55","hashOfConfig":"30"},{"size":238,"mtime":1611850176012,"results":"56","hashOfConfig":"30"},{"size":843,"mtime":1611907856180,"results":"57","hashOfConfig":"30"},{"size":195,"mtime":1611903538581,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1jtvsd0",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"74","usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"82","usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"x75xkq",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"106","usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"61"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macos/Desktop/EOfficeWeb/src/index.js",[],["123","124"],"/Users/macos/Desktop/EOfficeWeb/src/components/App/App.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/RouterURL/RouterURL.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ForgotPassword.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Login/Login.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/CompanyList/CompanyList.js",["125"],"/Users/macos/Desktop/EOfficeWeb/src/components/CompanyRegister/CompanyRegister.js",["126","127","128"],"import React, { useState } from 'react';\nimport '../../css/CompanyRegister.css'\nimport register from '../../images/register.png';\nimport {Button, Col, Container, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap'\nimport ValidatePhone from '../Validation/ValidatePhone';\nimport ValidateCompany from '../Validation/ValidateCompany';\nimport ValidateAddress from '../Validation/ValidateAddress';\nimport ValidateName from '../Validation/ValidateName';\nimport ValidateEmail from '../Validation/ValidateEmail';\nimport ValidatePassword from '../Validation/ValidatePassword';\nimport SidebarAdmin from '../SidebarAdmin/SidebarAdmin';\n\nfunction CompanyRegister(){\n    const [companyRegister, setCompanyRegister] = useState({\n        company_name: '',\n        street_address: '',\n        phone_number: '',\n        applicant: '',\n        applicant_email: '',\n        status: 1,\n        applicant_password:'',\n    })\n    const [validPhone, setValidPhone] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validCompany, setValidCompany] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validAddress, setValidAddress] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validName, setValidName] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validEmail, setValidEmail] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validPassword, setValidPassword] = useState({\n        isValid: false,\n        isInValid: false\n    });\n\n    const [modal, setModal] = useState(false);\n    const toogle = () => setModal(!modal);\n\n    function checkEmail() {\n        const {isValid, isInValid} = ValidateEmail(companyRegister.applicant_email);\n        setValidEmail({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkPhone(){\n        const {isValid, isInValid} = ValidatePhone(companyRegister.phone_number);\n        setValidPhone({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkCompany() {\n        const {isValid, isInValid} = ValidateCompany(companyRegister.company_name);\n        setValidCompany({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkAddress() {\n        const {isValid, isInValid} = ValidateAddress(companyRegister.street_address);\n        setValidAddress({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkName() {\n        const{isValid , isInValid} = ValidateName(companyRegister.applicant);\n        setValidName({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkPassword() {\n        const{isValid , isInValid} = ValidatePassword(companyRegister.applicant_password);\n        setValidPassword({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function handleChange(event){\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setCompanyRegister({\n            ... companyRegister,\n            [name] : value,\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault();\n        console.log(companyRegister)\n    }\n        return (\n            <div>\n                <SidebarAdmin/>\n                <div className=\"main-panel\">\n                <Container fluid={true}>\n                <div>\n                    <img style={{marginTop:'20px'}} src={register} alt=\"\"/>\n                </div>\n                    <Form className=\"register-form\" onSubmit={handleSubmit}>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Company Name</Label>\n                            <Col sm={8}>\n                                <Input valid={validCompany.isValid} invalid={validCompany.isInValid} type=\"text\" name=\"company_name\" required=\"required\" onChange={handleChange} onBlur={checkCompany}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Street Address</Label>\n                            <Col sm={8}>\n                                <Input valid={validAddress.isValid} invalid={validAddress.isInValid} type=\"text\" name=\"street_address\" onChange={handleChange} onBlur={checkAddress}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Phone Number</Label>\n                            <Col sm={8}>\n                                <Input invalid={validPhone.isInValid} valid={validPhone.isValid} type=\"tel\" name=\"phone_number\" required=\"required\" onChange={handleChange} onBlur={checkPhone}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Applicant Name</Label>\n                            <Col sm={8}>\n                                <Input valid={validName.isValid} invalid={validName.isInValid} onBlur={checkName} type=\"text\" name=\"applicant\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Applicant Email</Label>\n                            <Col sm={8}>\n                                <Input valid={validEmail.isValid} invalid={validEmail.isInValid} onBlur={checkEmail} type=\"email\" name=\"applicant_email\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Button onClick={toogle} color=\"primary\" size=\"lg\">Verification</Button>\n                        </FormGroup>\n                    </Form>\n                    <Modal className=\"form-modal\" isOpen={modal} toggle={toogle}>\n                        <ModalHeader style={{marginRight:'auto',marginLeft:'auto'}}>Confirm Information</ModalHeader>\n                        <ModalBody>\n                            <Form className=\"form-confirm\">\n                                <FormGroup row>\n                                    <Label>Company Name:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.company_name}</p>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Street Address:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.street_address}</p>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Phone Number:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.phone_number}</p>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Applicant Name:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.applicant}</p>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Applicant Email:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.applicant_email}</p>\n                                </FormGroup>\n                            </Form>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toogle}>Cancel</Button>\n                            <Button color=\"primary\" onClick={toogle}>Created</Button>\n                        </ModalFooter>\n                    </Modal>\n                </Container>\n                </div>\n                \n            </div>\n        );\n    }\n\nexport default CompanyRegister;","/Users/macos/Desktop/EOfficeWeb/src/components/AdminManager/AdminManager.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/AdminLogin/AdminLogin.js",["129","130","131","132"],"import logo from './../../images/logo.png';\nimport './../../css/AdminLogin.css';\nimport React, {useState } from 'react';\nimport { setUserSession } from '../../utils/Common';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport {Alert, Button, Container, Form, FormGroup, Input} from 'reactstrap';\nimport loginAPI from '../../api/loginAPI';\nimport axiosClient from '../../api/axiosClient';\n\nfunction AdminLogin(props){\n        const [adminLogin, setAdminLogin] = useState({\n            username: '',\n            password: '',\n        })\n        const [submit, setSubmit] = useState(false);\n\n        function handleChange(event){\n            const target = event.target;\n            const name = target.name;\n            const value = target.value;\n            setAdminLogin({\n                ... adminLogin,\n                [name] : value,\n            })\n        }\n        function handleSubmit(e){\n            e.preventDefault();\n            const params = {\n                username: adminLogin.username,\n                password: adminLogin.password,\n            }\n            \n            // loginAPI.loginAdmin(params).then(function(res){\n            //     if(res.status==='400'){\n            //         setSubmit(true);\n            //     }else{\n            //         setUserSession(res.data.token, res.data);\n            //         props.history.push('/admin-manager');\n            //     }\n            // }).catch(function(error){\n            //     console.log(error);\n            // })\n        \n            axios.post('https://datnxeoffice.azurewebsites.net/api/Admins/login',params).then(function(res){\n                if(res.status==='400'){\n                    setSubmit(true);\n                }else{\n                    setUserSession(res.data.token, res.data);\n                    props.history.push('/admin-manager');\n                }\n            }).catch(function(error){\n                console.log(error);\n            })\n        }\n        return (\n            <Container fluid={true}>\n                <div>\n                    <img src={logo} alt=\"\"/>\n                </div>\n                <Form className=\"form-admin\" onSubmit={handleSubmit}>\n                    <FormGroup>\n                        <Input type=\"text\" name=\"username\" required onChange={handleChange} placeholder=\"Username\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input type=\"password\" name=\"password\" required onChange={handleChange} placeholder=\"Password\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Alert color=\"danger\" isOpen={submit}>Incorrect username or password</Alert>\n                    </FormGroup>\n                    <FormGroup>\n                        <Button type=\"submit\" color=\"primary\" block>Login</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        );\n    }\n\nexport default AdminLogin;","/Users/macos/Desktop/EOfficeWeb/src/components/EditCompany/EditCompany.js",["133"],"import React, { useState } from 'react';\nimport '../../css/EditCompany.css'\nimport register from '../../images/register.png';\nimport {Button, Col, Container, Form, FormGroup, Input, Label} from 'reactstrap'\nimport ValidateCompany from '../Validation/ValidateCompany';\nimport ValidatePhone from '../Validation/ValidatePhone';\nimport ValidateEmail from '../Validation/ValidateEmail';\nimport ValidateName from '../Validation/ValidateName';\nimport ValidateAddress from '../Validation/ValidateAddress';\nimport SidebarAdmin from '../SidebarAdmin/SidebarAdmin';\n\nfunction CompanyRegister(){\n    const [editCompanyRegister, setEditCompanyRegister] = useState({\n        company_name: '',\n        street_address: '',\n        phone_number: '',\n        applicant: '',\n        applicant_email: '',\n        status: 1,\n    })\n    const [validPhone, setValidPhone] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validCompany, setValidCompany] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validAddress, setValidAddress] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validName, setValidName] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validEmail, setValidEmail] = useState({\n        isValid: false,\n        isInValid: false\n    });\n\n    function checkEmail() {\n        const {isValid, isInValid} = ValidateEmail(editCompanyRegister.applicant_email);\n        setValidEmail({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkPhone(){\n        const {isValid, isInValid} = ValidatePhone(editCompanyRegister.phone_number);\n        setValidPhone({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkCompany() {\n        const {isValid, isInValid} = ValidateCompany(editCompanyRegister.company_name);\n        setValidCompany({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkAddress() {\n        const {isValid, isInValid} = ValidateAddress(editCompanyRegister.street_address);\n        setValidAddress({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkName() {\n        const{isValid , isInValid} = ValidateName(editCompanyRegister.applicant);\n        setValidName({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function handleChange(event){\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setEditCompanyRegister({\n            ... editCompanyRegister,\n            [name] : value,\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault();\n        console.log(editCompanyRegister)\n    }\n        return (\n            <div>\n                <SidebarAdmin/>\n                <div className=\"main-panel\">\n                <Container fluid={true}>\n                <div>\n                   <img style={{marginTop:'20px'}} src={register} alt=\"\"/>\n                </div>\n                    <Form onSubmit={handleSubmit} className=\"register-form\">\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Company Name</Label>\n                            <Col sm={8}>\n                                <Input valid={validCompany.isValid} invalid={validCompany.isInValid} onBlur={checkCompany} type=\"text\" name=\"company_name\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Street Address</Label>\n                            <Col sm={8}>\n                                <Input valid={validAddress.isValid} invalid={validAddress.isInValid} onBlur={checkAddress} type=\"text\" name=\"street_address\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Phone Number</Label>\n                            <Col sm={8}>\n                                <Input valid={validPhone.isValid} invalid={validPhone.isInValid} onBlur={checkPhone} type=\"text\" name=\"phone_number\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Applicant Name</Label>\n                            <Col sm={8}>\n                                <Input valid={validName.isValid} invalid={validName.isInValid} onBlur={checkName} type=\"text\" name=\"applicant\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Applicant Email</Label>\n                            <Col sm={8}>\n                                <Input valid={validEmail.isValid} invalid={validEmail.isInValid} onBlur={checkEmail} type=\"email\" name=\"applicant_email\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\" row>\n                            <Label style={{color:'blue'}} sm={2}>Status</Label>\n                            <FormGroup check>\n                                <Label check sm={4}>\n                                    <Input type=\"radio\" name=\"status\" value=\"1\" onChange={handleChange} defaultChecked/>\n                                    Active\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check sm={4}>\n                                    <Input type=\"radio\" name=\"status\" value=\"2\" onChange={handleChange}/>\n                                    Deactive\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Button type=\"submit\" color=\"primary\" size=\"lg\">Save</Button>\n                        </FormGroup>\n                    </Form>\n                </Container>\n                </div>\n                \n            </div>\n        );\n    }\n\nexport default CompanyRegister;","/Users/macos/Desktop/EOfficeWeb/src/api/companyListAPI.js",[],"/Users/macos/Desktop/EOfficeWeb/src/api/axiosClient.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePhone.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateCompany.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateAddress.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateName.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateDepartment.js",[],["134","135"],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateEmail.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePassword.js",[],"/Users/macos/Desktop/EOfficeWeb/src/utils/Common.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js",["136"],"import {useState } from \"react\";\nimport {Button, Container, Form, FormGroup, Input} from \"reactstrap\";\nimport logo from '../../images/logo.png';\nimport '../../css/ForgotPassword.css';\nimport ValidatePassword from '../Validation/ValidatePassword';\n\nfunction ResetPassword(){\n    const [password, setPassword] = useState({\n        new_password: '',\n        confirm_password: '',\n    });\n    const [validPassword, setValidPassword] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validConfirmPassword, setValidConfirmPassword] = useState({\n        isValid: false,\n        isInValid: false\n    });\n\n    function handleOnChange(event) {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setPassword({\n            ... password,\n            [name] : value,\n        })\n    }\n\n    function checkPassword() {\n        const{isValid , isInValid} = ValidatePassword(password.new_password);\n        setValidPassword({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkConfirm(){\n        if(password.confirm_password===password.new_password){\n            setValidConfirmPassword({\n                isValid: true,\n                isInValid: false,\n            })\n        }else{\n            setValidConfirmPassword({\n                isValid: false,\n                isInValid: true,\n            })\n        }\n    }\n\n    return(\n        <Container>\n            <img src={logo} alt=\"\"/>\n            <Form className=\"forgot\">\n                <FormGroup>\n                    <h3>Forgot Password?</h3>\n                </FormGroup>\n                <FormGroup className=\"style_input\">\n                    <Input valid={validPassword.isValid} invalid={validPassword.isInValid} type=\"password\" name=\"new_password\" required=\"required\" onChange={handleOnChange} onBlur={checkPassword} placeholder=\"New password\"/>\n                </FormGroup>\n                <FormGroup className=\"style_input2\">\n                    <Input valid={validConfirmPassword.isValid} invalid={validConfirmPassword.isInValid} type=\"password\" name=\"confirm_password\" required=\"required\" onChange={handleOnChange} onBlur={checkConfirm} placeholder=\"Confirm new password\"/>\n                </FormGroup>\n                <FormGroup className=\"btn_next\">\n                    <Button className=\"btn_update\" color=\"primary\">Update</Button>\n                </FormGroup>\n            </Form>\n        </Container>\n    );\n}\n\nexport default ResetPassword;","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/Sidebar.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/AdminCompany/UserManagement/UserManagement.js",["137"],"/Users/macos/Desktop/EOfficeWeb/src/components/SidebarAdmin/SidebarAdmin.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Nav/Header.js",["138","139","140","141","142","143","144","145","146"],"import { useState } from 'react';\nimport {Container, Navbar, Nav, NavItem, Dropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\nimport noti from '../../images/coolicon.png';\nimport avatar from '../../images/avatar.png';\nimport '../../css/Nav.css';\n\nfunction Header(){\n    const [open, setOpen] = useState(false);\n    const [profile, setProfile] = useState(false);\n    function openFrofile(){\n        setProfile(!profile);\n    }\n    const toogle = ()=> setOpen(!open);\n    return(\n        <Navbar>\n            <Container fluid={true}>\n                <Nav className=\"nav-right\">\n                    \n                </Nav>\n            </Container>\n        </Navbar>\n    );\n}\nexport default Header;","/Users/macos/Desktop/EOfficeWeb/src/api/loginAPI.js",["147"],"import axios from 'axios';\nimport axiosClient from './axiosClient';\n\nconst loginAPI = {\n    loginAdmin: (params) =>{\n        const url = '/Admins/login';\n        return axiosClient.post(url, { params });\n    },\n}\n\nexport default loginAPI;","/Users/macos/Desktop/EOfficeWeb/src/components/Panigation/Panigation.js",[],"/Users/macos/Desktop/EOfficeWeb/src/api/userListAPI.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":8,"column":8,"nodeType":"154","messageId":"155","endLine":8,"endColumn":12},{"ruleId":"152","severity":1,"message":"156","line":43,"column":12,"nodeType":"154","messageId":"155","endLine":43,"endColumn":25},{"ruleId":"152","severity":1,"message":"157","line":91,"column":14,"nodeType":"154","messageId":"155","endLine":91,"endColumn":27},{"ruleId":"158","severity":1,"message":"159","line":104,"column":16,"nodeType":"160","messageId":"161","endLine":104,"endColumn":17,"fix":"162"},{"ruleId":"152","severity":1,"message":"163","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":19},{"ruleId":"152","severity":1,"message":"164","line":8,"column":8,"nodeType":"154","messageId":"155","endLine":8,"endColumn":16},{"ruleId":"152","severity":1,"message":"165","line":9,"column":8,"nodeType":"154","messageId":"155","endLine":9,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":23,"column":20,"nodeType":"160","messageId":"161","endLine":23,"endColumn":21,"fix":"166"},{"ruleId":"158","severity":1,"message":"159","line":87,"column":16,"nodeType":"160","messageId":"161","endLine":87,"endColumn":17,"fix":"167"},{"ruleId":"148","replacedBy":"168"},{"ruleId":"150","replacedBy":"169"},{"ruleId":"158","severity":1,"message":"159","line":26,"column":16,"nodeType":"160","messageId":"161","endLine":26,"endColumn":17,"fix":"170"},{"ruleId":"152","severity":1,"message":"171","line":2,"column":113,"nodeType":"154","messageId":"155","endLine":2,"endColumn":118},{"ruleId":"152","severity":1,"message":"172","line":2,"column":33,"nodeType":"154","messageId":"155","endLine":2,"endColumn":40},{"ruleId":"152","severity":1,"message":"173","line":2,"column":42,"nodeType":"154","messageId":"155","endLine":2,"endColumn":50},{"ruleId":"152","severity":1,"message":"174","line":2,"column":52,"nodeType":"154","messageId":"155","endLine":2,"endColumn":66},{"ruleId":"152","severity":1,"message":"175","line":2,"column":68,"nodeType":"154","messageId":"155","endLine":2,"endColumn":80},{"ruleId":"152","severity":1,"message":"176","line":2,"column":82,"nodeType":"154","messageId":"155","endLine":2,"endColumn":94},{"ruleId":"152","severity":1,"message":"177","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":12},{"ruleId":"152","severity":1,"message":"178","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":14},{"ruleId":"152","severity":1,"message":"179","line":10,"column":14,"nodeType":"154","messageId":"155","endLine":10,"endColumn":25},{"ruleId":"152","severity":1,"message":"180","line":13,"column":11,"nodeType":"154","messageId":"155","endLine":13,"endColumn":17},{"ruleId":"152","severity":1,"message":"181","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":13},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'find' is defined but never used.","Identifier","unusedVar","'validPassword' is assigned a value but never used.","'checkPassword' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"184","text":"185"},"'queryString' is defined but never used.","'loginAPI' is defined but never used.","'axiosClient' is defined but never used.",{"range":"186","text":"185"},{"range":"187","text":"185"},["182"],["183"],{"range":"188","text":"185"},"'Label' is defined but never used.","'NavItem' is defined but never used.","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'noti' is defined but never used.","'avatar' is defined but never used.","'openFrofile' is defined but never used.","'toogle' is assigned a value but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",[3197,3198],"",[815,816],[2652,2653],[809,810]]