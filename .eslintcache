[{"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/index.js":"1","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/App/App.js":"2","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/RouterURL/RouterURL.js":"3","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/AdminLogin/AdminLogin.js":"4","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/CompanyRegister/CompanyRegister.js":"5","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js":"6","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/EditCompany/EditCompany.js":"7","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/ForgotPassword/ForgotPassword.js":"8","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/utils/Common.js":"9","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/AdminManager/AdminManager.js":"10","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/CompanyList/CompanyList.js":"11","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Login/Login.js":"12","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/CreateDocument/CreateDocument.js":"13","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Dashboard/Dashboard.js":"14","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Document/Document.js":"15","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/AdminCompany/UserManagement/UserManagement.js":"16","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/api/companyListAPI.js":"17","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/api/loginAPI.js":"18","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/api/axiosClient.js":"19","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Validation/ValidateCompany.js":"20","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Validation/ValidatePassword.js":"21","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Validation/ValidateEmail.js":"22","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Validation/ValidateName.js":"23","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Validation/ValidatePhone.js":"24","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Sidebar/SidebarAdmin.js":"25","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Sidebar/Sidebar.js":"26","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Validation/ValidateAddress.js":"27","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Sidebar/Stepper.js":"28","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Panigation/Panigation.js":"29","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/api/userListAPI.js":"30","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Nav/Header.js":"31","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/PDF/PDF.js":"32","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Error/Error.js":"33","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/GetAdminCompany/GetAdminCompany.js":"34","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/GetDepartment/GetDepartment.js":"35","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/api/departmentAPI.js":"36","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/AdminCompany/DepartmentManagement/DepartmentManagement.js":"37","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Notification/Notification.js":"38"},{"size":277,"mtime":1612367558792,"results":"39","hashOfConfig":"40"},{"size":371,"mtime":1612367558776,"results":"41","hashOfConfig":"40"},{"size":3000,"mtime":1612550417225,"results":"42","hashOfConfig":"40"},{"size":2886,"mtime":1612367558775,"results":"43","hashOfConfig":"40"},{"size":8128,"mtime":1612367558776,"results":"44","hashOfConfig":"40"},{"size":2078,"mtime":1612367558778,"results":"45","hashOfConfig":"40"},{"size":7383,"mtime":1612533285284,"results":"46","hashOfConfig":"40"},{"size":2666,"mtime":1612367558778,"results":"47","hashOfConfig":"40"},{"size":584,"mtime":1612367558792,"results":"48","hashOfConfig":"40"},{"size":541,"mtime":1612367558776,"results":"49","hashOfConfig":"40"},{"size":6686,"mtime":1612547858935,"results":"50","hashOfConfig":"40"},{"size":3475,"mtime":1612368304407,"results":"51","hashOfConfig":"40"},{"size":9026,"mtime":1612432583478,"results":"52","hashOfConfig":"40"},{"size":7373,"mtime":1612370937734,"results":"53","hashOfConfig":"40"},{"size":4539,"mtime":1612431045968,"results":"54","hashOfConfig":"40"},{"size":10344,"mtime":1612551581949,"results":"55","hashOfConfig":"40"},{"size":313,"mtime":1612368717826,"results":"56","hashOfConfig":"40"},{"size":333,"mtime":1612533689019,"results":"57","hashOfConfig":"40"},{"size":258,"mtime":1612367558774,"results":"58","hashOfConfig":"40"},{"size":279,"mtime":1612367558780,"results":"59","hashOfConfig":"40"},{"size":377,"mtime":1612367558781,"results":"60","hashOfConfig":"40"},{"size":470,"mtime":1612367558781,"results":"61","hashOfConfig":"40"},{"size":351,"mtime":1612367558781,"results":"62","hashOfConfig":"40"},{"size":442,"mtime":1612367558781,"results":"63","hashOfConfig":"40"},{"size":3122,"mtime":1612460788994,"results":"64","hashOfConfig":"40"},{"size":3735,"mtime":1612550432434,"results":"65","hashOfConfig":"40"},{"size":280,"mtime":1612367558780,"results":"66","hashOfConfig":"40"},{"size":967,"mtime":1612374470183,"results":"67","hashOfConfig":"40"},{"size":843,"mtime":1612368966661,"results":"68","hashOfConfig":"40"},{"size":433,"mtime":1612468696534,"results":"69","hashOfConfig":"40"},{"size":1441,"mtime":1612613440532,"results":"70","hashOfConfig":"40"},{"size":1747,"mtime":1612375918286,"results":"71","hashOfConfig":"40"},{"size":127,"mtime":1612367833209,"results":"72","hashOfConfig":"40"},{"size":588,"mtime":1612531376220,"results":"73","hashOfConfig":"40"},{"size":619,"mtime":1612546241588,"results":"74","hashOfConfig":"40"},{"size":213,"mtime":1612546148108,"results":"75","hashOfConfig":"40"},{"size":426,"mtime":1612549225719,"results":"76","hashOfConfig":"40"},{"size":403,"mtime":1612550367852,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"j8za4b",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"90","usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"96","usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"119","usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/index.js",[],["168","169"],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/App/App.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/RouterURL/RouterURL.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/AdminLogin/AdminLogin.js",["170","171","172","173"],"import logo from './../../images/logo.png';\nimport './../../css/AdminLogin.css';\nimport React, {useState } from 'react';\nimport { setAdminSession} from '../../utils/Common';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport {Alert, Button, Container, Form, FormGroup, Input} from 'reactstrap';\nimport loginAPI from '../../api/loginAPI';\nimport axiosClient from '../../api/axiosClient';\n\nfunction AdminLogin(props){\n        const [adminLogin, setAdminLogin] = useState({\n            username: '',\n            password: '',\n        })\n        const [submit, setSubmit] = useState(false);\n\n        function handleChange(event){\n            const target = event.target;\n            const name = target.name;\n            const value = target.value;\n            setAdminLogin({\n                ... adminLogin,\n                [name] : value,\n            })\n        }\n        function handleSubmit(e){\n            e.preventDefault();\n            const params = {\n                username: adminLogin.username,\n                password: adminLogin.password,\n            }\n            \n            // loginAPI.loginAdmin(params).then(function(res){\n            //     if(res.status==='400'){\n            //         setSubmit(true);\n            //     }else{\n            //         setUserSession(res.data.token, res.data);\n            //         props.history.push('/admin-manager');\n            //     }\n            // }).catch(function(error){\n            //     console.log(error);\n            // })\n        \n            axios.post('https://datnxeoffice.azurewebsites.net/api/Admins/login',params).then(function(res){\n                    setAdminSession(res.data.token);\n                    props.history.push('/admin-manager');\n                }).catch(function(error){\n                    setSubmit(true)\n            })\n        }\n        \n        return (\n            <Container fluid={true} className=\"a\">\n                <Form className=\"form-admin\" onSubmit={handleSubmit}>\n                    <FormGroup>\n                        <img src={logo} alt=\"\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input type=\"text\" name=\"username\" required onChange={handleChange} placeholder=\"Username\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input type=\"password\" name=\"password\" required onChange={handleChange} placeholder=\"Password\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Alert color=\"danger\" isOpen={submit}>Incorrect username or password</Alert>\n                    </FormGroup>\n                    <FormGroup>\n                        <Button type=\"submit\" color=\"primary\" block>Login</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        );\n    }\n\nexport default AdminLogin;","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/CompanyRegister/CompanyRegister.js",["174","175","176","177"],"import React, { useState } from 'react';\nimport '../../css/CompanyRegister.css'\nimport register from '../../images/register.png';\nimport {Button, Col, Container, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap'\nimport ValidatePhone from '../Validation/ValidatePhone';\nimport ValidateCompany from '../Validation/ValidateCompany';\nimport ValidateAddress from '../Validation/ValidateAddress';\nimport ValidateName from '../Validation/ValidateName';\nimport ValidateEmail from '../Validation/ValidateEmail';\nimport ValidatePassword from '../Validation/ValidatePassword';\nimport SidebarAdmin from '../Sidebar/SidebarAdmin';\n\nfunction CompanyRegister(){\n    const [companyRegister, setCompanyRegister] = useState({\n        company_name: '',\n        street_address: '',\n        phone_number: '',\n        applicant: '',\n        applicant_email: '',\n        status: 1,\n        applicant_password:'',\n    })\n    const [validPhone, setValidPhone] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validCompany, setValidCompany] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validAddress, setValidAddress] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validName, setValidName] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validEmail, setValidEmail] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validPassword, setValidPassword] = useState({\n        isValid: false,\n        isInValid: false\n    });\n\n    const [modal, setModal] = useState(false);\n    const toogle = () => setModal(!modal);\n\n    function checkEmail() {\n        const {isValid, isInValid} = ValidateEmail(companyRegister.applicant_email);\n        setValidEmail({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkPhone(){\n        const {isValid, isInValid} = ValidatePhone(companyRegister.phone_number);\n        setValidPhone({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkCompany() {\n        const {isValid, isInValid} = ValidateCompany(companyRegister.company_name);\n        setValidCompany({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkAddress() {\n        const {isValid, isInValid} = ValidateAddress(companyRegister.street_address);\n        setValidAddress({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkName() {\n        const{isValid , isInValid} = ValidateName(companyRegister.applicant);\n        setValidName({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkPassword() {\n        const{isValid , isInValid} = ValidatePassword(companyRegister.applicant_password);\n        setValidPassword({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function handleChange(event){\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setCompanyRegister({\n            ... companyRegister,\n            [name] : value,\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault();\n        \n    }\n        return (\n            <div>\n                <SidebarAdmin/>\n                <div className=\"main-panel\">\n                <Container fluid={true}>\n                <div>\n                    <img style={{marginTop:'20px'}} src={register} alt=\"\"/>\n                </div>\n                    <Form className=\"register-form\">\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Company Name</Label>\n                            <Col sm={8}>\n                                <Input valid={validCompany.isValid} invalid={validCompany.isInValid} type=\"text\" name=\"company_name\" required=\"required\" onChange={handleChange} onBlur={checkCompany}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Street Address</Label>\n                            <Col sm={8}>\n                                <Input valid={validAddress.isValid} invalid={validAddress.isInValid} type=\"text\" name=\"street_address\" onChange={handleChange} onBlur={checkAddress}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Phone Number</Label>\n                            <Col sm={8}>\n                                <Input invalid={validPhone.isInValid} valid={validPhone.isValid} type=\"tel\" name=\"phone_number\" required=\"required\" onChange={handleChange} onBlur={checkPhone}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Applicant Name</Label>\n                            <Col sm={8}>\n                                <Input valid={validName.isValid} invalid={validName.isInValid} onBlur={checkName} type=\"text\" name=\"applicant\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Applicant Email</Label>\n                            <Col sm={8}>\n                                <Input valid={validEmail.isValid} invalid={validEmail.isInValid} onBlur={checkEmail} type=\"email\" name=\"applicant_email\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Button onClick={toogle} color=\"primary\" size=\"lg\">Verification</Button>\n                        </FormGroup>\n                    </Form>\n                    <Modal className=\"form-modal\" isOpen={modal} toggle={toogle}>\n                        <ModalHeader style={{marginRight:'auto',marginLeft:'auto'}}>Confirm Information</ModalHeader>\n                        <ModalBody>\n                            <Form className=\"form-confirm\">\n                                <FormGroup row>\n                                    <Label>Company Name:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.company_name}</p>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Street Address:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.street_address}</p>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Phone Number:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.phone_number}</p>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Applicant Name:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.applicant}</p>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Applicant Email:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.applicant_email}</p>\n                                </FormGroup>\n                            </Form>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toogle}>Cancel</Button>\n                            <Button color=\"primary\" onClick={toogle}>Created</Button>\n                        </ModalFooter>\n                    </Modal>\n                </Container>\n                </div>\n                \n            </div>\n        );\n    }\n\nexport default CompanyRegister;","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js",["178"],"import {useState } from \"react\";\nimport {Alert, Button, Container, Form, FormGroup, Input} from \"reactstrap\";\nimport logo from '../../images/logo.png';\nimport '../../css/ResetPassword.css';\n\nfunction ResetPassword(props){\n    const [password, setPassword] = useState({\n        new_password: '',\n        confirm_password: '',\n    });\n    const [error, setError] = useState(false);\n    function handleSubmit(event){\n        event.preventDefault();\n        const regex =/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$/;\n        if(regex.exec(password.new_password) !==null && password.confirm_password===password.new_password){\n            props.history.push('/login');\n        }else{\n            setError(true);\n        }\n    }\n\n    function handleOnChange(event) {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setPassword({\n            ... password,\n            [name] : value,\n        })\n    }\n    console.log(password)\n    return(\n        <Container className=\"a\">\n            <Form className=\"reset\" onSubmit={handleSubmit}>\n                <FormGroup>\n                    <img src={logo} alt=\"\"/>\n                </FormGroup>\n                <FormGroup>\n                    <h3>Forgot Password?</h3>\n                </FormGroup>\n                <FormGroup>\n                    <Input type=\"password\" name=\"new_password\" required=\"required\" onChange={handleOnChange} placeholder=\"New password\"/>\n                </FormGroup>\n                <FormGroup>\n                    <Input type=\"password\" name=\"confirm_password\" required=\"required\" onChange={handleOnChange} placeholder=\"Confirm new password\"/>\n                </FormGroup>\n                <FormGroup>\n                    <Alert isOpen={error} color=\"danger\">Password incorrect! Try again!</Alert>\n                </FormGroup>\n                <FormGroup className=\"update\">\n                    <Button color=\"primary\">Update</Button>\n                </FormGroup>\n            </Form>\n        </Container>\n    );\n}\n\nexport default ResetPassword;","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/EditCompany/EditCompany.js",["179","180"],"import React, { useEffect, useState } from 'react';\nimport '../../css/EditCompany.css'\nimport register from '../../images/register.png';\nimport {Button, Col, Container, Form, FormGroup, Input, Label} from 'reactstrap'\nimport ValidateCompany from '../Validation/ValidateCompany';\nimport ValidatePhone from '../Validation/ValidatePhone';\nimport ValidateEmail from '../Validation/ValidateEmail';\nimport ValidateName from '../Validation/ValidateName';\nimport ValidateAddress from '../Validation/ValidateAddress';\nimport SidebarAdmin from '../Sidebar/SidebarAdmin';\nimport { useLocation } from 'react-router-dom';\nimport userListAPI from '../../api/userListAPI';\n\nfunction CompanyRegister(){\n    const data = useLocation();\n    const [editCompanyRegister, setEditCompanyRegister] = useState({\n        company_name: '',\n        street_address: '',\n        phone_number: '',\n        applicant: '',\n        applicant_email: '',\n        status: 1,\n    })\n    const [admin, setAdmin] = useState({\n        name : '',\n        email: '',\n    })\n    const [validPhone, setValidPhone] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validCompany, setValidCompany] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validAddress, setValidAddress] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validName, setValidName] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validEmail, setValidEmail] = useState({\n        isValid: false,\n        isInValid: false\n    });\n\n    function checkEmail() {\n        const {isValid, isInValid} = ValidateEmail(editCompanyRegister.applicant_email);\n        setValidEmail({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkPhone(){\n        const {isValid, isInValid} = ValidatePhone(editCompanyRegister.phone_number);\n        setValidPhone({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkCompany() {\n        const {isValid, isInValid} = ValidateCompany(editCompanyRegister.company_name);\n        setValidCompany({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkAddress() {\n        const {isValid, isInValid} = ValidateAddress(editCompanyRegister.street_address);\n        setValidAddress({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkName() {\n        const{isValid , isInValid} = ValidateName(editCompanyRegister.applicant);\n        setValidName({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function handleChange(event){\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setEditCompanyRegister({\n            ... editCompanyRegister,\n            [name] : value,\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault();\n        console.log(editCompanyRegister)\n    }\n    useEffect(() =>{\n        async function GetAdmin(){\n            try {\n                const response = await userListAPI.getUserById(data.state.adminId);\n                setAdmin({\n                    name : response.data.name,\n                    email: response.data.email,\n                })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        GetAdmin();\n    },[])\n    return (\n            <div>\n                <SidebarAdmin/>\n                <div className=\"main-panel\">\n                <Container fluid={true}>\n                <div>\n                   <img style={{marginTop:'20px'}} src={register} alt=\"\"/>\n                </div>\n                    <Form onSubmit={handleSubmit} className=\"register-form\">\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Company Name</Label>\n                            <Col sm={8}>\n                                <Input valid={validCompany.isValid} invalid={validCompany.isInValid} defaultValue={data.state.name} onBlur={checkCompany} type=\"text\" name=\"company_name\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Street Address</Label>\n                            <Col sm={8}>\n                                <Input valid={validAddress.isValid} invalid={validAddress.isInValid} defaultValue={data.state.address} onBlur={checkAddress} type=\"text\" name=\"street_address\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Phone Number</Label>\n                            <Col sm={8}>\n                                <Input valid={validPhone.isValid} invalid={validPhone.isInValid} defaultValue={data.state.phone} onBlur={checkPhone} type=\"text\" name=\"phone_number\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Applicant Name</Label>\n                            <Col sm={8}>\n                                <Input valid={validName.isValid} invalid={validName.isInValid} defaultValue={admin.name} onBlur={checkName} type=\"text\" name=\"applicant\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Applicant Email</Label>\n                            <Col sm={8}>\n                                <Input valid={validEmail.isValid} invalid={validEmail.isInValid} defaultValue={admin.email} onBlur={checkEmail} type=\"email\" name=\"applicant_email\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\" row>\n                            <Label style={{color:'blue'}} sm={2}>Status</Label>\n                            <FormGroup check>\n                                <Label check sm={4}>\n                                    <Input type=\"radio\" name=\"status\" value=\"1\" onChange={handleChange} checked={data.state.status === 1 ? true : false}/>\n                                    Active\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check sm={4}>\n                                    <Input type=\"radio\" name=\"status\" value=\"2\" onChange={handleChange} checked={data.state.status !==1 ? true : false}/>\n                                    Deactive\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Button type=\"submit\" color=\"primary\" size=\"lg\">Save</Button>\n                        </FormGroup>\n                    </Form>\n                </Container>\n                </div>    \n            </div>\n        );\n    }\n\nexport default CompanyRegister;","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/ForgotPassword/ForgotPassword.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/utils/Common.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/AdminManager/AdminManager.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/CompanyList/CompanyList.js",["181","182"],"import { Container, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Table, Form, FormGroup, Input, Row, Col, Button } from \"reactstrap\";\nimport {Link} from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport Panigation from \"../Panigation/Panigation\";\nimport companyListAPI from \"../../api/companyListAPI\";\nimport SidebarAdmin from \"../Sidebar/SidebarAdmin\";\nimport '../../css/CompanyList.css';\nimport GetAdminCompany from \"../GetAdminCompany/GetAdminCompany\";\n\nfunction CompanyList(){\n    const [filter, setFilter] = useState(false);\n    const toggle = () => setFilter(prevState => ! prevState);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postPerPage] = useState(10);\n    const [search, setSearch] = useState('');\n    const [postList, setPostList] = useState([]);\n    const indexOfLastPost = currentPage * postPerPage;\n    const indexOfFirstPost = indexOfLastPost - postPerPage;\n    const currentPosts = postList.slice(indexOfFirstPost, indexOfLastPost);\n\n    function paginate(pageNumber){\n        setCurrentPage(pageNumber);\n    }\n    useEffect(()=>{\n        async function fetListData(){\n            try {\n                const response = await companyListAPI.getAll();\n                setPostList(response.data)\n            } catch (error) {  \n                console.log(error)\n            }\n        }\n        fetListData();\n    },[]);\n    \n    return(\n        <div>\n            <SidebarAdmin/>\n            <div className=\"main-panel\">\n            <Container fluid={true}>\n                <div className=\"search_form\">\n                    <Form>\n                        <FormGroup>\n                            <Row>\n                                <Col xs={10}>\n                                    <Input type=\"search\" className=\"form-control rounded\" value={search} onChange={event => {setSearch(event.target.value)}} placeholder=\"Search by name company\"/>\n                                </Col>\n                                <Col xs={2}>\n                                    <Dropdown isOpen={filter}toggle={toggle}>\n                                    <DropdownToggle color=\"primary\" caret>\n                                        Filter\n                                    </DropdownToggle>\n                                    <DropdownMenu>\n                                        <DropdownItem>All</DropdownItem>\n                                        <DropdownItem >Active</DropdownItem>\n                                        <DropdownItem>Deactive</DropdownItem>\n                                    </DropdownMenu>\n                                    </Dropdown>\n                                </Col>\n                            </Row>\n                        </FormGroup>\n                        \n                    </Form>\n                </div>\n                <Table hidden={search!== '' ? true : false} className=\"table_css\">\n                    <thead>\n                        <tr>\n                            <th>STT</th>\n                            <th>Company Name</th>\n                            <th>Aplicant Name</th>\n                            <th>Date Created</th>\n                            <th>Status</th>\n                            <th>Phone Number</th>\n                            <th>Edits/Details</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {currentPosts.map((data, key) => (\n                            <tr key={key}>\n                                    <th>{data.id}</th>\n                                    <td>{data.name}</td>\n                                    <td>\n                                        <GetAdminCompany id={data.adminId}/>\n                                    </td>\n                                    <td>{data.dateCreate}</td>\n                                    <td>{data.status===1? <p style={{color:'green'}}>Active</p> : <p style={{color:'red'}}>Deactive</p>}</td>\n                                    <td>{data.phone}</td>\n                                    <td>\n                                        <Link to={{\n                                            pathname: '/edit-company',\n                                            state: data\n                                        }}>Edit/Detail</Link>\n                                    </td>\n                            </tr>))}  \n                    </tbody>    \n                </Table>\n                <Table hidden={search==='' ? true : false } className=\"table_css\">\n                    <thead>\n                        <tr>\n                            <th>STT</th>\n                            <th>Company Name</th>\n                            <th>Aplicant Name</th>\n                            <th>Date Created</th>\n                            <th>Status</th>\n                            <th>Phone Number</th>\n                            <th>Edits/Details</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {postList.filter((data) =>{\n                            if(data.name.toLowerCase().includes(search.toLowerCase())){\n                                return data\n                            }\n                        }).map(data => (\n                            <tr key={data.id}>\n                                    <th>{data.id}</th>\n                                    <td>{data.name}</td>\n                                    <td>\n                                        <GetAdminCompany id={data.adminId}/>\n                                    </td>\n                                    <td>{data.dateCreate}</td>\n                                    <td>{data.status===1? <p style={{color:'green'}}>Active</p> : <p style={{color:'red'}}>Deactive</p>}</td>\n                                    <td>{data.phone}</td>\n                                    <td>\n                                        <Link to={{\n                                            pathname: '/edit-company',\n                                            state: data\n                                        }}>Edit/Detail</Link>\n                                    </td>\n                            </tr>))}  \n                    </tbody>    \n                </Table>\n        \n            <div className=\"pani\" hidden={search!=='' ? true : false}>\n                <Panigation\n                    currentPage={currentPage}\n                    postsPerPage={postPerPage}\n                    totalPosts = {postList.length}\n                    paginate={paginate}\n                />\n            </div>\n            </Container>\n            </div>\n        </div>\n    );\n}\nexport default CompanyList;","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Login/Login.js",["183","184","185","186"],"import '../../css/Login.css';\nimport eoffice from './../../images/logo.png';\nimport {Link} from 'react-router-dom';\nimport fpt from '../../images/fpt.png';\nimport support from '../../images/support.png';\nimport {Alert, Button, Col,Row, Container, Form, FormGroup, Input} from 'reactstrap';\nimport { useEffect, useState } from 'react';\nimport loginAPI from '../../api/loginAPI';\nimport { getUser, setUserSession } from '../../utils/Common';\nimport axios from 'axios';\nimport md5 from 'md5';\n\nfunction Login(props){\n    const [getData, setGetData] =useState({\n        username: '',\n        password: '',\n    })\n    const [submit, setSubmit] = useState(false);\n\n    function handleGetData(e){\n        const target = e.target;\n        const name = target.name;\n        const value = target.value;\n        setGetData({\n            ... getData,\n            [name] : value,\n        })\n    }\n    \n\n    function handleSubmit(e){\n        e.preventDefault();\n        const md5pass = md5(getData.password);\n        const params = {\n            email: getData.username,\n            password: md5pass.trim().toString(),\n        }\n        axios.post('https://datnxeoffice.azurewebsites.net/api/Accounts/login',params).then(function(res){\n            setUserSession(res.data.token, res.data);\n            if(res.data.roleId===1){\n                props.history.push('/dashboard');\n            }else{\n                props.history.push('/admin-manager');\n            }\n        }).catch(function(error){\n            setSubmit(true)\n        })\n    }\n    return(\n            <Container fluid={true} className=\"b\">\n                <Row>\n                    <Col>\n                        <div className=\"fpt\">\n                            <img src={fpt} alt=\"\" width=\"350px\" height=\"200px\"/>\n                            <h1>MANAGEMENT & CONTRACT</h1>\n                            <p style={{color:'white', fontSize:'30px'}}>DOCUMENT SYSTEM</p>\n                            <img style={{marginTop:'60%', marginRight:'90%'}} src={support} alt=\"\" width=\"500\" height=\"100\"/>\n                        </div>\n                    </Col>\n                    <Col>\n                        <Form className=\"form-login\" onSubmit={handleSubmit}>\n                            <FormGroup>\n                                <img src={eoffice} alt=\"\"/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Input type=\"text\" name=\"username\" onChange={handleGetData} required placeholder=\"Email\"/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Input type=\"password\" name=\"password\" onChange={handleGetData} required placeholder=\"Password\"/>\n                            </FormGroup>\n                            <FormGroup className=\"form-forgot\">\n                                <Link to=\"/forgot-password\">Forgot password?</Link>\n                            </FormGroup>\n                            <FormGroup>\n                                <Alert isOpen={submit} color=\"danger\">Incorrect username or password</Alert>\n                            </FormGroup>\n                            <FormGroup>\n                                <Button color=\"primary\" type=\"submit\" block>Sign In</Button>\n                            </FormGroup>\n                        </Form>\n                    </Col>\n\n                </Row>\n                    \n            </Container>\n    );\n}\nexport default Login;","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/CreateDocument/CreateDocument.js",["187","188","189","190"],"import { Button, Container, Input, Form, FormGroup, Row, Col, Label } from \"reactstrap\";\nimport Header from \"../Nav/Header\";\nimport PDF from \"../PDF/PDF\";\nimport { useState ,useEffect, useMemo} from \"react\";\nimport '../../css/CreateDoc.css';\nimport up from '../../images/upload.png';\nimport {useDropzone} from 'react-dropzone';\nimport VerticalLinearStepper from \"../Sidebar/Stepper\";\nimport {useHistory } from \"react-router-dom\";\nimport companyListAPI from \"../../api/companyListAPI\";\nimport userListAPI from \"../../api/userListAPI\";\nimport { getUser } from \"../../utils/Common\";\nimport demo from '../../images/demo.png';\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    borderStyle: 'groove',\n    borderWidth: 2,\n    borderRadius: 5,\n    height: '50px',\n    backgroundColor: '#000000f',\n    color: 'black',\n    outline: 'none',\n    transition: 'border .24s ease-in-out'\n  };\n  const activeStyle = {\n    borderColor: '#2196f3'\n  };\n  \n  const acceptStyle = {\n    borderColor: '#00e676'\n  };\n  \n  const rejectStyle = {\n    borderColor: '#ff1744'\n  };\nfunction CreateDocument(){\n    const companyId = getUser().companyId;\n    const [listCompany, setListCompany] = useState([]);\n    const [listSinger, setListSigner] = useState([]);\n    const [listGuest, setListGuest] = useState([]);\n    const history = useHistory();\n    const [show, setShow] = useState(false);\n    const [activeStep, setActiveStep] = useState(0);\n    const [file, setFile] = useState([]);\n    const [dataUpload, setDataUpload] =useState({\n        title : '',\n        signer: '',\n        company_guest: '',\n        signer_guest: '',\n        date: '',\n    });\n    const [company_guest, setCompanyGuest] = useState('');\n    const {getRootProps, getInputProps,isDragActive,\n        isDragAccept,\n        isDragReject} = useDropzone({\n        accept:'.pdf',\n        onDrop: (acceptFile) =>{\n            setFile(\n                acceptFile.map((url) => Object.assign(url,{\n                    preview: URL.createObjectURL(url)\n                }))\n            )\n            setActiveStep(1)\n            setShow(true)\n        }\n    })\n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n      }), [\n        isDragActive,\n        isDragReject,\n        isDragAccept\n      ]);\n    function handleOnChange(event) {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setDataUpload({\n            ... dataUpload,\n            [name] : value,\n        })\n    }\n    function handleNext(){\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n    function handlePrev() {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n        if(activeStep===0){\n            history.push('/dashboard');\n        }\n    }\n\n    useEffect(()=>{\n        async function fetListData(){\n            try {\n                const response = await companyListAPI.getAll();\n                setListCompany(response.data)\n            } catch (error) {  \n                console.log(error)\n            }\n        }\n        fetListData();\n    },[]);\n    \n    useEffect(()=>{\n        async function fetListUser(){\n            try {\n                const response = await userListAPI.getUserByCompanyId(companyId);\n                setListSigner(response.data)\n            } catch (error) {  \n                console.log(error)\n            }\n        }\n        fetListUser();\n    },[]);\n    useEffect(()=>{\n        async function fetListGuest(){\n            const id = dataUpload.company_guest;\n            try {\n                const response = await userListAPI.getUserByCompanyId(id);\n                setListGuest(response.data)\n            } catch (error) {  \n                console.log(error)\n            }\n        }\n        fetListGuest();\n    },[dataUpload.company_guest]);\n    return(\n        <div>\n            <VerticalLinearStepper activeStep={activeStep} />\n            <div className=\"main-panel\">\n            <Header/>\n            <Container fluid={true}>\n                <Row>\n                    <Col>\n                        <Form className=\"form-upload\">\n                            <FormGroup>\n                                <Label>Document information input</Label>\n                            </FormGroup>\n                            <FormGroup>\n                                <Input type=\"text\" disabled defaultValue=\"Contract\"/>\n                            </FormGroup>\n                            <FormGroup>\n                                <div {... getRootProps({style})}>\n                                    <input {... getInputProps()}/>\n                                    <div>\n                                        <img style={{float:'left'}} src={up} alt=\"\"/>\n                                        {file.map(url =>(\n                                            <div key={url.name}>\n                                                <p>{url.name}</p>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </div>\n                            </FormGroup>\n                            <FormGroup>\n                                <Input disabled={activeStep===1 ? false : true} type=\"text\" name=\"title\" placeholder=\"Title\" required onChange={handleOnChange}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Input disabled={activeStep===2 ? false : true} type=\"select\" name=\"signer\" onChange={handleOnChange}>\n                                    <option value=\"\">Select signer</option>\n                                    {listSinger.map(signer =>(\n                                        <option key={signer.id} value={signer.id}>{signer.name}</option>\n                                    ))}\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Input disabled={activeStep===3 ? false : true} type=\"select\" name=\"company_guest\" onChange={handleOnChange}>\n                                    <option value=\"\">Select company guest</option>\n                                    {listCompany.map(company =>(\n                                        <option key={company.id} value={company.id}>{company.name}</option>\n                                    ))}\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Input disabled={activeStep===4 ? false : true} type=\"select\" name=\"signer_guest\" onChange={handleOnChange}>\n                                    <option value=\"\">Select guest</option>\n                                    {listGuest.map(guest =>(\n                                        <option key={guest.id} value={guest.id}>{guest.name}</option>\n                                    ))}\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Input disabled={activeStep===5 ? false : true} type=\"date\" name=\"date\" placeholder=\"Expiration date\" onChange={handleOnChange}/>\n                            </FormGroup>\n                            <FormGroup hidden={activeStep !==6 ? false : true}>\n                                <Button color=\"primary\" outline onClick={handlePrev}>Return</Button> {' '}\n                                <Button color=\"primary\" outline onClick={handleNext}>Next</Button>\n                            </FormGroup>\n                            <FormGroup hidden={activeStep===6 ? false : true}>\n                                <Button color=\"primary\">Cancel</Button> {' '}\n                                <Button color=\"primary\">Create</Button> \n                            </FormGroup>\n                        </Form>\n                            \n                    </Col>\n                    <Col>\n                        <Form className=\"form-doc\">\n                            <FormGroup row>\n                                <div hidden={show} style={{marginTop:'4rem'}}>\n                                    <img src={demo} alt=\"demo\" width=\"600\" height=\"600\"/>\n                                </div>\n                                <div>\n                                    {file.map(url =>(\n                                        <div key={url.name}>\n                                            <PDF pdf={url.preview}/>\n                                        </div>\n                                    ))}\n                                </div>\n                            </FormGroup>\n                        </Form>\n                        \n                    </Col>\n                </Row>\n            </Container>\n            </div>\n        </div>\n    );\n}\nexport default CreateDocument;","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Dashboard/Dashboard.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Document/Document.js",["191","192","193"],"import { Container, Form, FormGroup , Col, Row , Input, Button, ButtonGroup, ButtonDropdown, DropdownToggle, DropdownMenu, Table, Label } from \"reactstrap\";\nimport Header from \"../Nav/Header\";\nimport '../../css/Document.css';\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport Panigation from \"../Panigation/Panigation\";\nimport { useState } from \"react\";\nimport search from '../../images/search1.png';\nimport del from '../../images/delete.png';\nimport choo from '../../images/choo.png';\n\nfunction Document(props){\n    const [isOpen, setIsOpen] = useState(false);\n    const toogle = () => setIsOpen(!isOpen);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postPerPage] = useState(15);\n    const indexOfLastPost = currentPage * postPerPage;\n    const indexOfFirstPost = indexOfLastPost - postPerPage;\n    function paginate(pageNumber){\n        setCurrentPage(pageNumber);\n    }\n    function Contract() {\n        props.history.push('/create')\n    }\n    return(\n        <div>\n            <Sidebar/>\n            <div className=\"main-content\">\n                <Header/>\n                <Container fluid={true}>\n                    <div className=\"form-create\">\n                        <FormGroup row>\n                            <ButtonDropdown direction=\"right\" isOpen={isOpen} toggle={toogle} >\n                                <DropdownToggle style={{height:'70%'}} color=\"primary\">+Create</DropdownToggle>\n                                <DropdownMenu>\n                                    <Form className=\"form-create2\">\n                                        <FormGroup>\n                                            <img style={{marginLeft:'30%'}} src={choo} alt=\"\"/>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label style={{marginLeft:'10%'}}>Please select the type of document you want to create</Label>\n                                        </FormGroup>\n                                        <FormGroup style={{marginLeft:'35%'}}>\n                                            <Button color=\"primary\" onClick={Contract}>Contract</Button>{' '}\n                                            <Button color=\"primary\" onClick={toogle}>Invoice</Button>\n                                        </FormGroup>\n                                    </Form>\n                                </DropdownMenu>\n                            </ButtonDropdown>\n                            <Col>\n                                <Input type=\"text\" name=\"search\"/>\n                                <img className=\"se\" src={search} alt=\"search\"/>\n                            </Col>\n                            <Col>\n                                <Input className=\"selectbox\" type=\"select\" defaultValue=\"1\" name=\"selectDocument\">\n                                    <option value={1}>All</option>\n                                    <option value={2}>Contract</option>\n                                    <option value={3}>Invoice</option>\n                                </Input>\n                            </Col>\n                                <Input className=\"selectbox2\" type=\"select\" defaultValue=\"1\" name=\"selectTime\">\n                                    <option value={1}>New date</option>\n                                    <option value={2}>Contract</option>\n                                    <option value={3}>Invoice</option>\n                                </Input>\n                            <Col>\n                            <Panigation\n                                        currentPage= {currentPage}\n                                        postsPerPage={postPerPage}\n                                        totalPosts = {20}\n                                        paginate={paginate}\n                                        />\n                            </Col>\n                        </FormGroup>\n                    </div>\n                    <Table>\n                        <tbody>\n                            <tr>\n                                <td>Account name</td>\n                                <td>Title document</td>\n                                <td>status</td>\n                                <td>2021-01-01</td>\n                                <td>{<img src={del} alt=\"\" width=\"25px\" height=\"25px\"/>}</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        </div>\n    );\n}\nexport default Document;","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/AdminCompany/UserManagement/UserManagement.js",["194","195","196","197","198","199"],"import { useEffect, useState } from \"react\";\nimport { Button, Form, FormGroup, Input, Col, ButtonGroup, Table, ButtonDropdown, DropdownToggle, DropdownMenu, Label, Modal, ModalHeader, ModalBody, Container, Alert } from \"reactstrap\";\nimport userListAPI from \"../../../api/userListAPI\";\nimport Header from \"../../Nav/Header\";\nimport Panigation from \"../../Panigation/Panigation\";\nimport Sidebar from \"../../Sidebar/Sidebar\";\nimport './../../../css/UserManagement.css';\nimport icon from \"../../../images/delete.png\";\nimport { getUser } from \"../../../utils/Common\";\nimport GetDepartment from \"../../GetDepartment/GetDepartment\";\n\nfunction UserManagement(){\n    const id = getUser()\n    const companyId = id.companyId;\n    const [userList, setUserList] = useState([]);\n    const [user, setUser] = useState({\n        id: '',\n        username: '',\n        subDepartment: 1,\n        email:''\n    })\n    const [modalInfor, setModalInfor] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postPerPage] = useState(13);\n    const indexOfLastPost = currentPage * postPerPage;\n    const indexOfFirstPost = indexOfLastPost - postPerPage;\n    const currentPosts = userList.slice(indexOfFirstPost, indexOfLastPost);\n    const toogle = () => setIsOpen(!isOpen);\n    const [openEdit, setOpenEdit] = useState(false);\n    const openE = () => setOpenEdit(!openEdit);\n    const [search, setSearch] = useState('');\n    useEffect(()=>{\n        async function fetchUserList(){\n            try {\n                const response = await userListAPI.getUserByCompanyId(companyId);\n                setUserList(response.data);\n            }catch (error) {\n            console.log(error);\n        }}\n        fetchUserList();\n    },[])\n    function paginate(pageNumber){\n        setCurrentPage(pageNumber);\n    }\n\n    function handleOnInput(event){\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setUser({\n            ... user,\n            [name] : value,\n        })\n    }\n    return(\n        <div>\n            <Sidebar/>\n            <div className=\"main-panel1\">\n            <Header/>\n            <Container fluid={true}>\n                <div className=\"form-search\">\n                    <FormGroup row>\n                        <ButtonDropdown direction=\"right\" isOpen={isOpen} toggle={toogle} >\n                            <DropdownToggle style={{height:'90%'}} color=\"primary\">+Add user</DropdownToggle>\n                            <DropdownMenu className=\"form-add\">\n                                <Form>\n                                    <h3>Add User</h3>\n                                    <FormGroup row>\n                                        <Col>\n                                            <Input type=\"text\" name=\"username\" required placeholder=\"User name\"onChange={handleOnInput}/>\n                                        </Col>\n                                        <Col>\n                                            <Input type=\"tel\" name=\"phone\" required placeholder=\"User phone number\" onChange={handleOnInput}/>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Col>\n                                            <Input type=\"select\" name=\"subDepartment\" defaultValue=\"1\" onChange={handleOnInput}>\n                                                <option value={1}>1</option>\n                                                <option value={2}>2</option>\n                                            </Input>\n                                        </Col>\n                                        <Col>\n                                            <Input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleOnInput} required/>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Col>\n                                            <Input type=\"text\" name=\"address\" placeholder=\"Address\"/>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Col style={{marginLeft:'60%'}}>\n                                            <Button color=\"secondary\" onClick={toogle}>Cancel</Button>{' '}\n                                            <Button color=\"primary\">Create</Button>\n                                        </Col>\n                                    </FormGroup>\n                                </Form>\n                            </DropdownMenu>\n                        </ButtonDropdown>\n                        <Col>\n                            <Input type=\"text\" name=\"search\" placeholder=\"Search by account name\" onChange={event => {setSearch(event.target.value)}}/>\n                        </Col>\n                        <Col>\n                            <ButtonGroup className=\"btn-group\">\n                                <Button outline color=\"primary\">Active</Button>\n                                <Button outline color=\"primary\">Deactive</Button>\n                            </ButtonGroup>\n                        </Col>\n                    </FormGroup>\n                </div>\n                <Table hidden={search !=='' ? true : false} hover>\n                    <thead>\n                        <tr>\n                            <th>Account name</th>\n                            <th>Department</th>\n                            <th>Email</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {currentPosts.map(user =>(\n                            <tr className=\"row_data\" key={user.id}  >\n                                <td onClick={openE}>{user.name}</td>\n                                <td onClick={openE}>\n                                    <GetDepartment id={user.departmentId}/>\n                                </td>\n                                <td onClick={openE}>{user.email}</td>\n                                <td className=\"hide\"> \n                                    <img style={{width:'25px',height:'25px'}} src={icon} alt=\"\" onClick={toogle}/>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n                <Table hidden={search=== '' ? true : false} hover>\n                    <thead>\n                        <tr>\n                            <th>Account name</th>\n                            <th>Department</th>\n                            <th>Email</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {userList.filter((users) => {\n                            if(users.name.toLowerCase().includes(search.toLowerCase())){\n                                return users\n                            }\n                        }).map(user =>(\n                            <tr className=\"row_data\" key={user.id}  >\n                                <td onClick={openE}>{user.name}</td>\n                                <td onClick={openE}>\n                                    <GetDepartment id={user.departmentId}/>\n                                </td>\n                                <td onClick={openE}>{user.email}</td>\n                                <td className=\"hide\"> \n                                    <img style={{width:'25px',height:'25px'}} src={icon} alt=\"\" onClick={toogle}/>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n                <div hidden={search !== '' ? true : false} style={{width:'100px', marginLeft:'auto', marginRight:'auto', marginTop:'20px'}}>\n                    <Panigation\n                        currentPage= {currentPage}\n                        postsPerPage={postPerPage}\n                        totalPosts = {userList.length}\n                        paginate={paginate}\n                     />\n                </div>\n            <Modal isOpen={openEdit} toggle={openE}>\n                <ModalHeader>User Detail</ModalHeader>\n                <ModalBody>\n                <Form>\n                        <FormGroup row>\n                            <Col>\n                                <Input type=\"text\" name=\"username\" required placeholder=\"User name\"/>\n                            </Col>\n                            <Col>\n                                <Input type=\"number\" name=\"phone\" required placeholder=\"User phone number\"/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col>\n                                <Input type=\"select\" name=\"department\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                </Input>\n                            </Col>\n                            <Col>\n                                <Input type=\"email\" name=\"email\" placeholder=\"Email\" required/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col>\n                                <Input type=\"text\" name=\"address\" placeholder=\"Address\"/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col>\n                                <Label>Active</Label>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col style={{marginLeft:'60%'}}>\n                                <Button color=\"secondary\" onClick={openE}>Cancel</Button>{' '}\n                                <Button color=\"primary\">Update</Button>\n                            </Col>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n            </Modal>\n            </Container>\n            </div>\n        </div>\n    );\n}\n\nexport default UserManagement;","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/api/companyListAPI.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/api/loginAPI.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/api/axiosClient.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Validation/ValidateCompany.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Validation/ValidatePassword.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Validation/ValidateEmail.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Validation/ValidateName.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Validation/ValidatePhone.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Sidebar/SidebarAdmin.js",["200"],"import {Link, NavLink} from 'react-router-dom';\nimport logo from '../../images/eoffice.png';\nimport homeicon from '../../images/Home.png';\nimport usericon from '../../images/company.png'\nimport group from '../../images/list.png';\nimport logout from '../../images/logout.png';\nimport '../../css/Sidebar.css'; \nimport {Col, Row} from 'reactstrap';\nimport {removeUserSession } from '../../utils/Common';\nimport { useState } from 'react';\n\nfunction SidebarAdmin(){\n    function Logout(e) {\n        e.preventDefault();\n        removeUserSession();\n    }\n    \n    return(\n        <div className=\"sidebar\">\n            <div className=\"logo\">\n                <img src={logo} alt=\"\" />\n            </div>\n            <div className=\"sidebar-wrapper\">\n                <ul className=\"nav\">\n                    <li>\n                        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/admin-manager\">\n                            <Row>\n                                <Col sm={3}>\n                                    <img src={homeicon} width=\"24px\" height=\"24px\" alt=\"\"/>\n                                </Col>\n                                <Col sm={4}>\n                                    <p>Admin</p>\n                                </Col>\n                            </Row>\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/company-register\">\n                            <Row>\n                                <Col sm={3}>\n                                    <img src={usericon} width=\"24px\" height=\"24px\" alt=\"\"/>\n                                </Col>\n                                <Col sm={5}>\n                                    <p>Register Company</p>\n                                </Col>\n                            </Row>\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/company-list\">\n                            <Row>\n                                <Col sm={3}>\n                                    <img src={group} width=\"24px\" height=\"24px\" alt=\"\"/>\n                                </Col>\n                                <Col sm={5}>\n                                    <p>List Company</p>\n                                </Col>\n                            </Row>\n                        </NavLink>\n                    </li>\n                    <li onClick={Logout}>\n                        <Link className=\"nav-link\" to='/admin'>\n                            <Row>\n                                <Col sm={3}>\n                                    <img src={logout} width=\"24px\" height=\"24px\" alt=\"\"/>\n                                </Col>\n                                <Col sm={4}>\n                                    <p>Logout</p>\n                                </Col>\n                            </Row>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n}\nexport default SidebarAdmin;","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Sidebar/Sidebar.js",["201"],"import { Link, NavLink } from 'react-router-dom';\nimport logo from '../../images/eoffice.png';\nimport homeicon from '../../images/Home.png';\nimport usericon from '../../images/user.png';\nimport doc from '../../images/document.png';\nimport noti from '../../images/noti.png';\nimport group from '../../images/group.png';\nimport '../../css/Sidebar.css'; \nimport { Col, Row } from 'reactstrap';\n\nfunction Sidebar(){\n    return(\n        <div className=\"sidebar\">\n            <div className=\"logo\">\n                <img src={logo} alt=\"\" />\n            </div>\n            <div className=\"sidebar-wrapper\">\n                <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/dashboard\">\n                            <Row>\n                                <Col sm={3}>\n                                    <img src={homeicon} width=\"24px\" height=\"24px\" alt=\"\"/>\n                                </Col>\n                                <Col sm={5}>\n                                    <p>Dashboard</p>\n                                </Col>\n                            </Row>\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/document\">\n                            <Row>\n                                <Col sm={3}>\n                                    <img src={doc} alt=\"\" width=\"24px\" height=\"24px\"/>\n                                </Col>\n                                <Col sm={5}>\n                                    <p>Storage Document</p>\n                                </Col>\n                            </Row>   \n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/user-management\">\n                            <Row>\n                                <Col sm={3}>\n                                    <img src={usericon} width=\"24px\" height=\"24px\" alt=\"\"/>\n                                </Col>\n                                <Col sm={5}>\n                                    <p>User Management</p>\n                                </Col>\n                            </Row>\n                            \n                            \n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/department\">\n                            <Row>\n                                <Col sm={3}>\n                                    <img src={group} width=\"24px\" height=\"24px\" alt=\"\"/>\n                                </Col>\n                                <Col sm={5}>\n                                    <p>Department Management</p>\n                                </Col>\n                            </Row>\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/notification\">\n                            <Row>\n                                <Col sm={3}>\n                                    <img src={noti} width=\"24px\" height=\"24px\" alt=\"\"/>\n                                </Col>\n                                <Col sm={5}>\n                                    <p>Notification</p>\n                                </Col>\n                            </Row>\n                        </NavLink>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n}\nexport default Sidebar;","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Validation/ValidateAddress.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Sidebar/Stepper.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Panigation/Panigation.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/api/userListAPI.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Nav/Header.js",["202"],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/PDF/PDF.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Error/Error.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/GetAdminCompany/GetAdminCompany.js",["203"],"import { useEffect, useState } from \"react\";\nimport userListAPI from \"../../api/userListAPI\";\n\nfunction GetAdminCompany({id}){\n    const [admin, setAdmin] = useState('');\n    useEffect(() =>{\n        async function getAdmin(){\n            try {\n                const response = await userListAPI.getUserById(id);\n                setAdmin(response.data.name);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getAdmin();\n    },[]);\n    return(\n        <div>\n            <p>{admin}</p>\n        </div>\n    );\n}\nexport default GetAdminCompany;","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/GetDepartment/GetDepartment.js",["204"],"import { useEffect, useState } from \"react\";\nimport departmentAPI from '../../api/departmentAPI';\n\nfunction GetDepartment({id}){\n    const [department, setDepartment] = useState('');\n    useEffect(()=>{\n        async function fetchDeparment(){\n            try {\n                const response = await departmentAPI.getDepartmentById(id);\n                setDepartment(response.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchDeparment();\n    },[])\n    return(\n        <div>\n            {department.name}\n        </div>\n    );\n}\nexport default GetDepartment;","/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/api/departmentAPI.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/AdminCompany/DepartmentManagement/DepartmentManagement.js",[],"/Users/macos/Desktop/Capstone Project/EOfficeWeb/src/components/Notification/Notification.js",[],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":6,"column":8,"nodeType":"211","messageId":"212","endLine":6,"endColumn":19},{"ruleId":"209","severity":1,"message":"213","line":8,"column":8,"nodeType":"211","messageId":"212","endLine":8,"endColumn":16},{"ruleId":"209","severity":1,"message":"214","line":9,"column":8,"nodeType":"211","messageId":"212","endLine":9,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":23,"column":20,"nodeType":"217","messageId":"218","endLine":23,"endColumn":21,"fix":"219"},{"ruleId":"209","severity":1,"message":"220","line":43,"column":12,"nodeType":"211","messageId":"212","endLine":43,"endColumn":25},{"ruleId":"209","severity":1,"message":"221","line":91,"column":14,"nodeType":"211","messageId":"212","endLine":91,"endColumn":27},{"ruleId":"215","severity":1,"message":"216","line":104,"column":16,"nodeType":"217","messageId":"218","endLine":104,"endColumn":17,"fix":"222"},{"ruleId":"209","severity":1,"message":"223","line":109,"column":14,"nodeType":"211","messageId":"212","endLine":109,"endColumn":26},{"ruleId":"215","severity":1,"message":"216","line":27,"column":16,"nodeType":"217","messageId":"218","endLine":27,"endColumn":17,"fix":"224"},{"ruleId":"215","severity":1,"message":"216","line":94,"column":16,"nodeType":"217","messageId":"218","endLine":94,"endColumn":17,"fix":"225"},{"ruleId":"226","severity":1,"message":"227","line":116,"column":7,"nodeType":"228","endLine":116,"endColumn":9,"suggestions":"229"},{"ruleId":"209","severity":1,"message":"230","line":1,"column":116,"nodeType":"211","messageId":"212","endLine":1,"endColumn":122},{"ruleId":"231","severity":1,"message":"232","line":110,"column":49,"nodeType":"233","messageId":"234","endLine":110,"endColumn":51},{"ruleId":"209","severity":1,"message":"235","line":7,"column":10,"nodeType":"211","messageId":"212","endLine":7,"endColumn":19},{"ruleId":"209","severity":1,"message":"213","line":8,"column":8,"nodeType":"211","messageId":"212","endLine":8,"endColumn":16},{"ruleId":"209","severity":1,"message":"236","line":9,"column":10,"nodeType":"211","messageId":"212","endLine":9,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":25,"column":16,"nodeType":"217","messageId":"218","endLine":25,"endColumn":17,"fix":"237"},{"ruleId":"209","severity":1,"message":"238","line":55,"column":12,"nodeType":"211","messageId":"212","endLine":55,"endColumn":25},{"ruleId":"209","severity":1,"message":"239","line":55,"column":27,"nodeType":"211","messageId":"212","endLine":55,"endColumn":42},{"ruleId":"215","severity":1,"message":"216","line":85,"column":16,"nodeType":"217","messageId":"218","endLine":85,"endColumn":17,"fix":"240"},{"ruleId":"226","severity":1,"message":"241","line":121,"column":7,"nodeType":"228","endLine":121,"endColumn":9,"suggestions":"242"},{"ruleId":"209","severity":1,"message":"243","line":1,"column":44,"nodeType":"211","messageId":"212","endLine":1,"endColumn":47},{"ruleId":"209","severity":1,"message":"244","line":1,"column":65,"nodeType":"211","messageId":"212","endLine":1,"endColumn":76},{"ruleId":"209","severity":1,"message":"245","line":17,"column":11,"nodeType":"211","messageId":"212","endLine":17,"endColumn":27},{"ruleId":"209","severity":1,"message":"246","line":2,"column":162,"nodeType":"211","messageId":"212","endLine":2,"endColumn":167},{"ruleId":"209","severity":1,"message":"247","line":22,"column":12,"nodeType":"211","messageId":"212","endLine":22,"endColumn":22},{"ruleId":"209","severity":1,"message":"248","line":22,"column":24,"nodeType":"211","messageId":"212","endLine":22,"endColumn":37},{"ruleId":"226","severity":1,"message":"241","line":42,"column":7,"nodeType":"228","endLine":42,"endColumn":9,"suggestions":"249"},{"ruleId":"215","severity":1,"message":"216","line":52,"column":16,"nodeType":"217","messageId":"218","endLine":52,"endColumn":17,"fix":"250"},{"ruleId":"231","severity":1,"message":"232","line":145,"column":50,"nodeType":"233","messageId":"234","endLine":145,"endColumn":52},{"ruleId":"209","severity":1,"message":"251","line":10,"column":10,"nodeType":"211","messageId":"212","endLine":10,"endColumn":18},{"ruleId":"209","severity":1,"message":"252","line":1,"column":10,"nodeType":"211","messageId":"212","endLine":1,"endColumn":14},{"ruleId":"226","severity":1,"message":"241","line":22,"column":7,"nodeType":"228","endLine":22,"endColumn":9,"suggestions":"253"},{"ruleId":"226","severity":1,"message":"254","line":16,"column":7,"nodeType":"228","endLine":16,"endColumn":9,"suggestions":"255"},{"ruleId":"226","severity":1,"message":"254","line":16,"column":7,"nodeType":"228","endLine":16,"endColumn":9,"suggestions":"256"},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"no-unused-vars","'queryString' is defined but never used.","Identifier","unusedVar","'loginAPI' is defined but never used.","'axiosClient' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"259","text":"260"},"'validPassword' is assigned a value but never used.","'checkPassword' is defined but never used.",{"range":"261","text":"260"},"'handleSubmit' is defined but never used.",{"range":"262","text":"260"},{"range":"263","text":"260"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data.state.adminId'. Either include it or remove the dependency array.","ArrayExpression",["264"],"'Button' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'getUser' is defined but never used.",{"range":"265","text":"260"},"'company_guest' is assigned a value but never used.","'setCompanyGuest' is assigned a value but never used.",{"range":"266","text":"260"},"React Hook useEffect has a missing dependency: 'companyId'. Either include it or remove the dependency array.",["267"],"'Row' is defined but never used.","'ButtonGroup' is defined but never used.","'indexOfFirstPost' is assigned a value but never used.","'Alert' is defined but never used.","'modalInfor' is assigned a value but never used.","'setModalInfor' is assigned a value but never used.",["268"],{"range":"269","text":"260"},"'useState' is defined but never used.","'Link' is defined but never used.",["270"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["271"],["272"],"no-global-assign","no-unsafe-negation",[815,816],"",[3192,3193],[913,914],[2873,2874],{"desc":"273","fix":"274"},[829,830],[2597,2598],{"desc":"275","fix":"276"},{"desc":"275","fix":"277"},[2037,2038],{"desc":"275","fix":"278"},{"desc":"279","fix":"280"},{"desc":"279","fix":"281"},"Update the dependencies array to be: [data.state.adminId]",{"range":"282","text":"283"},"Update the dependencies array to be: [companyId]",{"range":"284","text":"285"},{"range":"286","text":"285"},{"range":"287","text":"285"},"Update the dependencies array to be: [id]",{"range":"288","text":"289"},{"range":"290","text":"289"},[3468,3470],"[data.state.adminId]",[3567,3569],"[companyId]",[1780,1782],[717,719],[475,477],"[id]",[506,508]]