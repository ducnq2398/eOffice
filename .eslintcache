[{"/Users/macos/Desktop/EOfficeWeb/src/index.js":"1","/Users/macos/Desktop/EOfficeWeb/src/components/App/App.js":"2","/Users/macos/Desktop/EOfficeWeb/src/components/RouterURL/RouterURL.js":"3","/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ForgotPassword.js":"4","/Users/macos/Desktop/EOfficeWeb/src/components/Login/Login.js":"5","/Users/macos/Desktop/EOfficeWeb/src/components/CompanyList/CompanyList.js":"6","/Users/macos/Desktop/EOfficeWeb/src/components/CompanyRegister/CompanyRegister.js":"7","/Users/macos/Desktop/EOfficeWeb/src/components/AdminManager/AdminManager.js":"8","/Users/macos/Desktop/EOfficeWeb/src/components/AdminLogin/AdminLogin.js":"9","/Users/macos/Desktop/EOfficeWeb/src/components/EditCompany/EditCompany.js":"10","/Users/macos/Desktop/EOfficeWeb/src/api/companyListAPI.js":"11","/Users/macos/Desktop/EOfficeWeb/src/api/axiosClient.js":"12","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePhone.js":"13","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateCompany.js":"14","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateAddress.js":"15","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateName.js":"16","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateDepartment.js":"17","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateEmail.js":"18","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePassword.js":"19","/Users/macos/Desktop/EOfficeWeb/src/utils/Common.js":"20","/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js":"21","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/Sidebar.js":"22","/Users/macos/Desktop/EOfficeWeb/src/components/AdminCompany/UserManagement/UserManagement.js":"23","/Users/macos/Desktop/EOfficeWeb/src/components/Nav/Header.js":"24","/Users/macos/Desktop/EOfficeWeb/src/api/loginAPI.js":"25","/Users/macos/Desktop/EOfficeWeb/src/components/Panigation/Panigation.js":"26","/Users/macos/Desktop/EOfficeWeb/src/api/userListAPI.js":"27","/Users/macos/Desktop/EOfficeWeb/src/components/CreateDocument/CreateDocument.js":"28","/Users/macos/Desktop/EOfficeWeb/src/components/FileUpload/FileUpload.js":"29","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/SidebarAdmin.js":"30","/Users/macos/Desktop/EOfficeWeb/src/components/Dashboard/Dashboard.js":"31"},{"size":277,"mtime":1611389616355,"results":"32","hashOfConfig":"33"},{"size":371,"mtime":1611835599122,"results":"34","hashOfConfig":"33"},{"size":2221,"mtime":1612001414849,"results":"35","hashOfConfig":"33"},{"size":2652,"mtime":1611995587287,"results":"36","hashOfConfig":"33"},{"size":3461,"mtime":1612005630228,"results":"37","hashOfConfig":"33"},{"size":4448,"mtime":1611996108019,"results":"38","hashOfConfig":"33"},{"size":8180,"mtime":1611996181073,"results":"39","hashOfConfig":"33"},{"size":541,"mtime":1611996173384,"results":"40","hashOfConfig":"33"},{"size":2872,"mtime":1611997510648,"results":"41","hashOfConfig":"33"},{"size":6511,"mtime":1611997329945,"results":"42","hashOfConfig":"33"},{"size":203,"mtime":1611851401066,"results":"43","hashOfConfig":"33"},{"size":258,"mtime":1611850204077,"results":"44","hashOfConfig":"33"},{"size":442,"mtime":1611408840383,"results":"45","hashOfConfig":"33"},{"size":279,"mtime":1611409581562,"results":"46","hashOfConfig":"33"},{"size":280,"mtime":1611409692899,"results":"47","hashOfConfig":"33"},{"size":351,"mtime":1611410436183,"results":"48","hashOfConfig":"33"},{"size":307,"mtime":1611411210500,"results":"49","hashOfConfig":"50"},{"size":470,"mtime":1611413190148,"results":"51","hashOfConfig":"33"},{"size":377,"mtime":1611412693996,"results":"52","hashOfConfig":"33"},{"size":584,"mtime":1611935878701,"results":"53","hashOfConfig":"33"},{"size":2064,"mtime":1611995460676,"results":"54","hashOfConfig":"33"},{"size":3507,"mtime":1612003420715,"results":"55","hashOfConfig":"33"},{"size":8584,"mtime":1611937714218,"results":"56","hashOfConfig":"33"},{"size":810,"mtime":1611998923897,"results":"57","hashOfConfig":"33"},{"size":360,"mtime":1611931031274,"results":"58","hashOfConfig":"33"},{"size":843,"mtime":1611907856180,"results":"59","hashOfConfig":"33"},{"size":195,"mtime":1611903538581,"results":"60","hashOfConfig":"33"},{"size":227,"mtime":1611915536672,"results":"61","hashOfConfig":"33"},{"size":413,"mtime":1611915744698,"results":"62","hashOfConfig":"33"},{"size":3043,"mtime":1612005605333,"results":"63","hashOfConfig":"33"},{"size":7377,"mtime":1612005007742,"results":"64","hashOfConfig":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1jtvsd0",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"67"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"81","usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"x75xkq",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"111","usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"116","usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"67"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"67"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macos/Desktop/EOfficeWeb/src/index.js",[],["136","137"],"/Users/macos/Desktop/EOfficeWeb/src/components/App/App.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/RouterURL/RouterURL.js",["138"],"/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ForgotPassword.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Login/Login.js",["139","140","141","142"],"/Users/macos/Desktop/EOfficeWeb/src/components/CompanyList/CompanyList.js",["143"],"import { Container, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Table, Form, FormGroup, Input, Row, Col } from \"reactstrap\";\nimport {Link} from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport Panigation from \"../Panigation/Panigation\";\nimport companyListAPI from \"../../api/companyListAPI\";\nimport SidebarAdmin from \"../Sidebar/SidebarAdmin\";\nimport '../../css/CompanyList.css';\nimport find from '../../images/search.png';\n\nfunction CompanyList(){\n    const [filter, setFilter] = useState(false);\n    const toggle = () => setFilter(prevState => ! prevState);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postPerPage] = useState(10);\n    const [search, setSearch] = useState('');\n    const [postList, setPostList] = useState([]);\n    const indexOfLastPost = currentPage * postPerPage;\n    const indexOfFirstPost = indexOfLastPost - postPerPage;\n    const currentPosts = postList.slice(indexOfFirstPost, indexOfLastPost);\n    function paginate(pageNumber){\n        setCurrentPage(pageNumber);\n    }\n    useEffect(()=>{\n        async function fetListData(){\n            try {\n                const response = await companyListAPI.getAll();\n                setPostList(response.data)\n            } catch (error) {  \n                console.log(error)\n            }\n        }\n        fetListData();\n    },[]);\n    \n    const handleChange = event =>{\n        setSearch(event.target.value);\n    }\n\n    return(\n        <div>\n            <SidebarAdmin/>\n            <div className=\"main-panel\">\n            <Container fluid={true}>\n                <div className=\"search_form\">\n                    <Form>\n                        <FormGroup>\n                            <Row>\n                                <Col xs={10}>\n                                    <Input type=\"search\" className=\"form-control rounded\" value={search} onChange={handleChange} placeholder=\"Search by name company\"/>\n                                </Col>\n                                <Col xs={2}>\n                                    <Dropdown isOpen={filter}toggle={toggle}>\n                                    <DropdownToggle caret>\n                                        Filter\n                                    </DropdownToggle>\n                                    <DropdownMenu>\n                                        <DropdownItem>Active</DropdownItem>\n                                        <DropdownItem>Deactive</DropdownItem>\n                                    </DropdownMenu>\n                                    </Dropdown>\n                                </Col>\n                            </Row>\n                        </FormGroup>\n                        \n                    </Form>\n                </div>\n                <Table className=\"table_css\">\n                    <thead>\n                        <tr>\n                            <th>STT</th>\n                            <th>Company Name</th>\n                            <th>Aplicant Name</th>\n                            <th>Date Created</th>\n                            <th>Status</th>\n                            <th>Phone Number</th>\n                            <th>Edits/Details</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {currentPosts.map(data => (\n                            <tr key={data.id}>\n                                    <th>{data.id}</th>\n                                    <td>{data.name}</td>\n                                    <td>{data.admin}</td>\n                                    <td>{data.dateCreate}</td>\n                                    <td>{data.status===1? <p style={{color:'green'}}>Active</p> : <p style={{color:'red'}}>Deactive</p>}</td>\n                                    <td>{data.phone}</td>\n                                    <td>\n                                        <Link to=\"/edit-company\">Edit/Detail</Link>\n                                    </td>\n                            </tr>))}  \n                    </tbody>    \n            </Table>\n            <div className=\"pani\">\n                <Panigation\n                    currentPage={currentPage}\n                    postsPerPage={postPerPage}\n                    totalPosts = {postList.length}\n                    paginate={paginate}\n                />\n            </div>\n            </Container>\n            </div>\n        </div>\n    );\n}\nexport default CompanyList;","/Users/macos/Desktop/EOfficeWeb/src/components/CompanyRegister/CompanyRegister.js",["144","145","146"],"import React, { useState } from 'react';\nimport '../../css/CompanyRegister.css'\nimport register from '../../images/register.png';\nimport {Button, Col, Container, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap'\nimport ValidatePhone from '../Validation/ValidatePhone';\nimport ValidateCompany from '../Validation/ValidateCompany';\nimport ValidateAddress from '../Validation/ValidateAddress';\nimport ValidateName from '../Validation/ValidateName';\nimport ValidateEmail from '../Validation/ValidateEmail';\nimport ValidatePassword from '../Validation/ValidatePassword';\nimport SidebarAdmin from '../Sidebar/SidebarAdmin';\n\nfunction CompanyRegister(){\n    const [companyRegister, setCompanyRegister] = useState({\n        company_name: '',\n        street_address: '',\n        phone_number: '',\n        applicant: '',\n        applicant_email: '',\n        status: 1,\n        applicant_password:'',\n    })\n    const [validPhone, setValidPhone] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validCompany, setValidCompany] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validAddress, setValidAddress] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validName, setValidName] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validEmail, setValidEmail] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validPassword, setValidPassword] = useState({\n        isValid: false,\n        isInValid: false\n    });\n\n    const [modal, setModal] = useState(false);\n    const toogle = () => setModal(!modal);\n\n    function checkEmail() {\n        const {isValid, isInValid} = ValidateEmail(companyRegister.applicant_email);\n        setValidEmail({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkPhone(){\n        const {isValid, isInValid} = ValidatePhone(companyRegister.phone_number);\n        setValidPhone({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkCompany() {\n        const {isValid, isInValid} = ValidateCompany(companyRegister.company_name);\n        setValidCompany({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkAddress() {\n        const {isValid, isInValid} = ValidateAddress(companyRegister.street_address);\n        setValidAddress({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkName() {\n        const{isValid , isInValid} = ValidateName(companyRegister.applicant);\n        setValidName({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkPassword() {\n        const{isValid , isInValid} = ValidatePassword(companyRegister.applicant_password);\n        setValidPassword({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function handleChange(event){\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setCompanyRegister({\n            ... companyRegister,\n            [name] : value,\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault();\n        console.log(companyRegister)\n    }\n        return (\n            <div>\n                <SidebarAdmin/>\n                <div className=\"main-panel\">\n                <Container fluid={true}>\n                <div>\n                    <img style={{marginTop:'20px'}} src={register} alt=\"\"/>\n                </div>\n                    <Form className=\"register-form\" onSubmit={handleSubmit}>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Company Name</Label>\n                            <Col sm={8}>\n                                <Input valid={validCompany.isValid} invalid={validCompany.isInValid} type=\"text\" name=\"company_name\" required=\"required\" onChange={handleChange} onBlur={checkCompany}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Street Address</Label>\n                            <Col sm={8}>\n                                <Input valid={validAddress.isValid} invalid={validAddress.isInValid} type=\"text\" name=\"street_address\" onChange={handleChange} onBlur={checkAddress}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Phone Number</Label>\n                            <Col sm={8}>\n                                <Input invalid={validPhone.isInValid} valid={validPhone.isValid} type=\"tel\" name=\"phone_number\" required=\"required\" onChange={handleChange} onBlur={checkPhone}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Applicant Name</Label>\n                            <Col sm={8}>\n                                <Input valid={validName.isValid} invalid={validName.isInValid} onBlur={checkName} type=\"text\" name=\"applicant\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label style={{color:'blue'}} sm={2}>Applicant Email</Label>\n                            <Col sm={8}>\n                                <Input valid={validEmail.isValid} invalid={validEmail.isInValid} onBlur={checkEmail} type=\"email\" name=\"applicant_email\" required=\"required\" onChange={handleChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Button onClick={toogle} color=\"primary\" size=\"lg\">Verification</Button>\n                        </FormGroup>\n                    </Form>\n                    <Modal className=\"form-modal\" isOpen={modal} toggle={toogle}>\n                        <ModalHeader style={{marginRight:'auto',marginLeft:'auto'}}>Confirm Information</ModalHeader>\n                        <ModalBody>\n                            <Form className=\"form-confirm\">\n                                <FormGroup row>\n                                    <Label>Company Name:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.company_name}</p>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Street Address:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.street_address}</p>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Phone Number:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.phone_number}</p>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Applicant Name:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.applicant}</p>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Applicant Email:</Label>\n                                    <p style={{marginLeft:'20px'}}>{companyRegister.applicant_email}</p>\n                                </FormGroup>\n                            </Form>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toogle}>Cancel</Button>\n                            <Button color=\"primary\" onClick={toogle}>Created</Button>\n                        </ModalFooter>\n                    </Modal>\n                </Container>\n                </div>\n                \n            </div>\n        );\n    }\n\nexport default CompanyRegister;","/Users/macos/Desktop/EOfficeWeb/src/components/AdminManager/AdminManager.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/AdminLogin/AdminLogin.js",["147","148","149","150"],"/Users/macos/Desktop/EOfficeWeb/src/components/EditCompany/EditCompany.js",["151"],"/Users/macos/Desktop/EOfficeWeb/src/api/companyListAPI.js",[],"/Users/macos/Desktop/EOfficeWeb/src/api/axiosClient.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePhone.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateCompany.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateAddress.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateName.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateDepartment.js",[],["152","153"],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateEmail.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePassword.js",[],"/Users/macos/Desktop/EOfficeWeb/src/utils/Common.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js",["154"],"import {useState } from \"react\";\nimport {Alert, Button, Container, Form, FormGroup, Input} from \"reactstrap\";\nimport logo from '../../images/logo.png';\nimport '../../css/ResetPassword.css';\n\nfunction ResetPassword(props){\n    const [password, setPassword] = useState({\n        new_password: '',\n        confirm_password: '',\n    });\n    const [error, setError] = useState(false);\n    function handleSubmit(event){\n        event.preventDefault();\n        const regex =/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$/;\n        if(regex.exec(password.new_password) !==null && password.confirm_password===password.new_password){\n            props.history.push('/login');\n        }else{\n            setError(true);\n        }\n    }\n\n    function handleOnChange(event) {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setPassword({\n            ... password,\n            [name] : value,\n        })\n    }\n    console.log(password)\n    return(\n        <Container>\n            <Form className=\"reset\" onSubmit={handleSubmit}>\n                <FormGroup>\n                    <img src={logo} alt=\"\"/>\n                </FormGroup>\n                <FormGroup>\n                    <h3>Forgot Password?</h3>\n                </FormGroup>\n                <FormGroup>\n                    <Input type=\"password\" name=\"new_password\" required=\"required\" onChange={handleOnChange} placeholder=\"New password\"/>\n                </FormGroup>\n                <FormGroup>\n                    <Input type=\"password\" name=\"confirm_password\" required=\"required\" onChange={handleOnChange} placeholder=\"Confirm new password\"/>\n                </FormGroup>\n                <FormGroup>\n                    <Alert isOpen={error} color=\"danger\">Password incorrect! Try again!</Alert>\n                </FormGroup>\n                <FormGroup className=\"update\">\n                    <Button color=\"primary\">Update</Button>\n                </FormGroup>\n            </Form>\n        </Container>\n    );\n}\n\nexport default ResetPassword;","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/Sidebar.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/AdminCompany/UserManagement/UserManagement.js",["155","156","157","158"],"import { useEffect, useState } from \"react\";\nimport { Button, Form, FormGroup, Input, Col, ButtonGroup, Table, ButtonDropdown, DropdownToggle, DropdownMenu, Label, Modal, ModalHeader, ModalBody, Container, Alert } from \"reactstrap\";\nimport userListAPI from \"../../../api/userListAPI\";\nimport Header from \"../../Nav/Header\";\nimport Panigation from \"../../Panigation/Panigation\";\nimport Sidebar from \"../../Sidebar/Sidebar\";\nimport './../../../css/UserManagement.css';\nimport icon from \"../../../images/delete.png\";\n\nfunction UserManagement(){\n    const [userList, setUserList] = useState([]);\n    const [user, setUser] = useState({\n        id: '',\n        username: '',\n        subDepartment: 1,\n        email:''\n    })\n    const [modalInfor, setModalInfor] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postPerPage] = useState(15);\n    const indexOfLastPost = currentPage * postPerPage;\n    const indexOfFirstPost = indexOfLastPost - postPerPage;\n    const currentPosts = userList.slice(indexOfFirstPost, indexOfLastPost);\n    const toogle = () => setIsOpen(!isOpen);\n    const [openEdit, setOpenEdit] = useState(false);\n    const openE = () => setOpenEdit(!openEdit);\n    useEffect(()=>{\n        async function fetchUserList(){\n            try {\n                const response = await userListAPI.getAll();\n                setUserList(response.data);\n            }catch (error) {\n            console.log(error);\n        }}\n        fetchUserList();\n    },[])\n    function paginate(pageNumber){\n        setCurrentPage(pageNumber);\n    }\n\n    function handleOnInput(event){\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setUser({\n            ... user,\n            [name] : value,\n        })\n    }\n    return(\n        <div>\n            <Sidebar/>\n            <div className=\"main-panel1\">\n            <Container fluid={true}>\n                <Header/>\n                <div className=\"form-search\">\n                    <FormGroup row>\n                        <ButtonDropdown direction=\"right\" isOpen={isOpen} toggle={toogle} >\n                            <DropdownToggle style={{height:'70%'}} color=\"primary\">+Add user</DropdownToggle>\n                            <DropdownMenu className=\"form-add\">\n                                <Form>\n                                    <h3>Add User</h3>\n                                    <FormGroup row>\n                                        <Col>\n                                            <Input type=\"text\" name=\"username\" required placeholder=\"User name\"onChange={handleOnInput}/>\n                                        </Col>\n                                        <Col>\n                                            <Input type=\"tel\" name=\"phone\" required placeholder=\"User phone number\" onChange={handleOnInput}/>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Col>\n                                            <Input type=\"select\" name=\"subDepartment\" defaultValue=\"1\" onChange={handleOnInput}>\n                                                <option value={1}>1</option>\n                                                <option value={2}>2</option>\n                                            </Input>\n                                        </Col>\n                                        <Col>\n                                            <Input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleOnInput} required/>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Col>\n                                            <Input type=\"text\" name=\"address\" placeholder=\"Address\"/>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Col style={{marginLeft:'60%'}}>\n                                            <Button color=\"secondary\" onClick={toogle}>Cancel</Button>{' '}\n                                            <Button color=\"primary\">Create</Button>\n                                        </Col>\n                                    </FormGroup>\n                                </Form>\n                            </DropdownMenu>\n                        </ButtonDropdown>\n                        <Col>\n                            <Input type=\"text\" name=\"search\" placeholder=\"Search by account name\"/>\n                        </Col>\n                        <Col>\n                            <ButtonGroup className=\"btn-group\">\n                                <Button outline color=\"primary\">Active</Button>\n                                <Button outline color=\"primary\">Deactive</Button>\n                            </ButtonGroup>\n                        </Col>\n                        <Col>\n                        <Panigation\n                                    currentPage= {currentPage}\n                                    postsPerPage={postPerPage}\n                                    totalPosts = {userList.length}\n                                    paginate={paginate}\n                                    />\n                        </Col>\n                    </FormGroup>\n                </div>\n                <Table hover>\n                    <thead>\n                        <tr>\n                            <th>Account name</th>\n                            <th>Department</th>\n                            <th>Email</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {currentPosts.map(user =>(\n                            <tr className=\"row_data\" key={user.id}  >\n                                <td onClick={openE}>{user.name}</td>\n                                <td onClick={openE}>{user.subDepartment}</td>\n                                <td onClick={openE}>{user.email}</td>\n                                <td className=\"hide\"> \n                                    <img style={{width:'25px',height:'25px'}} src={icon} alt=\"\" onClick={toogle}/>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            <Modal isOpen={openEdit} toggle={openE}>\n                <ModalHeader>User Detail</ModalHeader>\n                <ModalBody>\n                <Form>\n                        <FormGroup row>\n                            <Col>\n                                <Input type=\"text\" name=\"username\" required placeholder=\"User name\"/>\n                            </Col>\n                            <Col>\n                                <Input type=\"number\" name=\"phone\" required placeholder=\"User phone number\"/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col>\n                                <Input type=\"select\" name=\"department\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                </Input>\n                            </Col>\n                            <Col>\n                                <Input type=\"email\" name=\"email\" placeholder=\"Email\" required/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col>\n                                <Input type=\"text\" name=\"address\" placeholder=\"Address\"/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col>\n                                <Label>Active</Label>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col style={{marginLeft:'60%'}}>\n                                <Button color=\"secondary\" onClick={openE}>Cancel</Button>{' '}\n                                <Button color=\"primary\">Update</Button>\n                            </Col>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n            </Modal>\n            </Container>\n            </div>\n        </div>\n    );\n}\n\nexport default UserManagement;","/Users/macos/Desktop/EOfficeWeb/src/components/Nav/Header.js",["159","160","161","162","163","164","165","166","167"],"/Users/macos/Desktop/EOfficeWeb/src/api/loginAPI.js",["168"],"import axios from 'axios';\nimport axiosClient from './axiosClient';\n\nconst loginAPI = {\n    loginAdmin: (params) =>{\n        const url = '/Admins/login';\n        return axiosClient.post(url, { params });\n    },\n\n    loginUser: (params) =>{\n        const url = '/Accounts/login';\n        return axiosClient.post(url, {params});\n    }\n}\n\nexport default loginAPI;","/Users/macos/Desktop/EOfficeWeb/src/components/Panigation/Panigation.js",[],"/Users/macos/Desktop/EOfficeWeb/src/api/userListAPI.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/CreateDocument/CreateDocument.js",["169"],"import FileUpload from \"../FileUpload/FileUpload\";\nimport Sidebar from \"../Sidebar/Sidebar\";\n\nfunction CreateDocument(){\n    return(\n        <div>\n            <FileUpload/>\n        </div>\n    );\n}\nexport default CreateDocument;","/Users/macos/Desktop/EOfficeWeb/src/components/FileUpload/FileUpload.js",["170"],"import { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\n\nfunction FileUpload(){\n    return (\n            <Form>\n                <FormGroup>\n                    <Input type=\"file\" name=\"upload_file\"/>\n                </FormGroup>\n                <FormGroup>\n                    <Button color=\"primary\">Upload</Button>\n                </FormGroup>\n            </Form>\n    );\n}\nexport default FileUpload;","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/SidebarAdmin.js",["171"],"/Users/macos/Desktop/EOfficeWeb/src/components/Dashboard/Dashboard.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":16,"column":11,"nodeType":"178","messageId":"179","endLine":16,"endColumn":15},{"ruleId":"176","severity":1,"message":"180","line":7,"column":10,"nodeType":"178","messageId":"179","endLine":7,"endColumn":19},{"ruleId":"176","severity":1,"message":"181","line":8,"column":8,"nodeType":"178","messageId":"179","endLine":8,"endColumn":16},{"ruleId":"176","severity":1,"message":"182","line":9,"column":10,"nodeType":"178","messageId":"179","endLine":9,"endColumn":17},{"ruleId":"183","severity":1,"message":"184","line":25,"column":16,"nodeType":"185","messageId":"186","endLine":25,"endColumn":17,"fix":"187"},{"ruleId":"176","severity":1,"message":"188","line":8,"column":8,"nodeType":"178","messageId":"179","endLine":8,"endColumn":12},{"ruleId":"176","severity":1,"message":"189","line":43,"column":12,"nodeType":"178","messageId":"179","endLine":43,"endColumn":25},{"ruleId":"176","severity":1,"message":"190","line":91,"column":14,"nodeType":"178","messageId":"179","endLine":91,"endColumn":27},{"ruleId":"183","severity":1,"message":"184","line":104,"column":16,"nodeType":"185","messageId":"186","endLine":104,"endColumn":17,"fix":"191"},{"ruleId":"176","severity":1,"message":"192","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":19},{"ruleId":"176","severity":1,"message":"181","line":8,"column":8,"nodeType":"178","messageId":"179","endLine":8,"endColumn":16},{"ruleId":"176","severity":1,"message":"193","line":9,"column":8,"nodeType":"178","messageId":"179","endLine":9,"endColumn":19},{"ruleId":"183","severity":1,"message":"184","line":23,"column":20,"nodeType":"185","messageId":"186","endLine":23,"endColumn":21,"fix":"194"},{"ruleId":"183","severity":1,"message":"184","line":87,"column":16,"nodeType":"185","messageId":"186","endLine":87,"endColumn":17,"fix":"195"},{"ruleId":"172","replacedBy":"196"},{"ruleId":"174","replacedBy":"197"},{"ruleId":"183","severity":1,"message":"184","line":27,"column":16,"nodeType":"185","messageId":"186","endLine":27,"endColumn":17,"fix":"198"},{"ruleId":"176","severity":1,"message":"199","line":2,"column":162,"nodeType":"178","messageId":"179","endLine":2,"endColumn":167},{"ruleId":"176","severity":1,"message":"200","line":18,"column":12,"nodeType":"178","messageId":"179","endLine":18,"endColumn":22},{"ruleId":"176","severity":1,"message":"201","line":18,"column":24,"nodeType":"178","messageId":"179","endLine":18,"endColumn":37},{"ruleId":"183","severity":1,"message":"184","line":47,"column":16,"nodeType":"185","messageId":"186","endLine":47,"endColumn":17,"fix":"202"},{"ruleId":"176","severity":1,"message":"203","line":2,"column":33,"nodeType":"178","messageId":"179","endLine":2,"endColumn":40},{"ruleId":"176","severity":1,"message":"204","line":2,"column":42,"nodeType":"178","messageId":"179","endLine":2,"endColumn":50},{"ruleId":"176","severity":1,"message":"205","line":2,"column":52,"nodeType":"178","messageId":"179","endLine":2,"endColumn":66},{"ruleId":"176","severity":1,"message":"206","line":2,"column":68,"nodeType":"178","messageId":"179","endLine":2,"endColumn":80},{"ruleId":"176","severity":1,"message":"207","line":2,"column":82,"nodeType":"178","messageId":"179","endLine":2,"endColumn":94},{"ruleId":"176","severity":1,"message":"208","line":3,"column":8,"nodeType":"178","messageId":"179","endLine":3,"endColumn":12},{"ruleId":"176","severity":1,"message":"209","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":14},{"ruleId":"176","severity":1,"message":"210","line":11,"column":14,"nodeType":"178","messageId":"179","endLine":11,"endColumn":25},{"ruleId":"176","severity":1,"message":"211","line":14,"column":11,"nodeType":"178","messageId":"179","endLine":14,"endColumn":17},{"ruleId":"176","severity":1,"message":"212","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"213","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":15},{"ruleId":"176","severity":1,"message":"214","line":1,"column":42,"nodeType":"178","messageId":"179","endLine":1,"endColumn":47},{"ruleId":"176","severity":1,"message":"215","line":10,"column":10,"nodeType":"178","messageId":"179","endLine":10,"endColumn":18},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'loginAPI' is defined but never used.","'getUser' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"218","text":"219"},"'find' is defined but never used.","'validPassword' is assigned a value but never used.","'checkPassword' is defined but never used.",{"range":"220","text":"219"},"'queryString' is defined but never used.","'axiosClient' is defined but never used.",{"range":"221","text":"219"},{"range":"222","text":"219"},["216"],["217"],{"range":"223","text":"219"},"'Alert' is defined but never used.","'modalInfor' is assigned a value but never used.","'setModalInfor' is assigned a value but never used.",{"range":"224","text":"219"},"'NavItem' is defined but never used.","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'noti' is defined but never used.","'avatar' is defined but never used.","'openFrofile' is defined but never used.","'toogle' is assigned a value but never used.","'axios' is defined but never used.","'Sidebar' is defined but never used.","'Label' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",[829,830],"",[3192,3193],[815,816],[2647,2648],[913,914],[1797,1798]]