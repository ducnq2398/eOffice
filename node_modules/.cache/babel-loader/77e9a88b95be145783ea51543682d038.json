{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Alert, Button, Container, Form, FormGroup, Input } from \"reactstrap\";\nimport logo from '../../images/logo.png';\nimport '../../css/ForgotPassword.css';\nimport ValidatePassword from '../Validation/ValidatePassword';\nimport { Link } from \"react-router-dom\";\n\nfunction ResetPassword() {\n  _s();\n\n  const [password, setPassword] = useState({\n    new_password: '',\n    confirm_password: ''\n  });\n  const [error, setError] = useState(false);\n\n  function handleSubmit() {\n    const regex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$/;\n\n    if (regex.exec(password.new_password) !== null && password.confirm_password === password.new_password) {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    }\n  } // const [validPassword, setValidPassword] = useState({\n  //     isValid: false,\n  //     isInValid: false\n  // });\n  // const [validConfirmPassword, setValidConfirmPassword] = useState({\n  //     isValid: false,\n  //     isInValid: false\n  // });\n\n\n  function handleOnChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setPassword({ ...password,\n      [name]: value\n    });\n  } // function checkPassword() {\n  //     const{isValid , isInValid} = ValidatePassword(password.new_password);\n  //     setValidPassword({\n  //         isValid: isValid,\n  //         isInValid: isInValid\n  //     })\n  // }\n  // function checkConfirm(){\n  //     if(password.confirm_password===password.new_password){\n  //         if(password.confirm_password!==''){\n  //             setValidConfirmPassword({\n  //                 isValid: true,\n  //                 isInValid: false,\n  //             })\n  //         }\n  //     }else{\n  //         setValidConfirmPassword({\n  //             isValid: false,\n  //             isInValid: true,\n  //         })\n  //     }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"forgot\",\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        className: \"style_input\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          valid: validPassword.isValid,\n          invalid: validPassword.isInValid,\n          type: \"password\",\n          name: \"new_password\",\n          required: \"required\",\n          onChange: handleOnChange,\n          onBlur: checkPassword,\n          placeholder: \"New password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        className: \"style_input2\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          valid: validConfirmPassword.isValid,\n          invalid: validConfirmPassword.isInValid,\n          type: \"password\",\n          name: \"confirm_password\",\n          required: \"required\",\n          onChange: handleOnChange,\n          onBlur: checkConfirm,\n          placeholder: \"Confirm new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          isOpen: error,\n          color: \"danger\",\n          children: \"Password incorrect! Try again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        className: \"btn_next\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn_update\",\n          color: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResetPassword, \"KPElQHTXdwuJG4o17/MFUNObGs4=\");\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js"],"names":["useState","Alert","Button","Container","Form","FormGroup","Input","logo","ValidatePassword","Link","ResetPassword","password","setPassword","new_password","confirm_password","error","setError","handleSubmit","regex","exec","handleOnChange","event","target","name","value","validPassword","isValid","isInValid","checkPassword","validConfirmPassword","checkConfirm"],"mappings":"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","sourcesContent":["import {useState } from \"react\";\nimport {Alert, Button, Container, Form, FormGroup, Input} from \"reactstrap\";\nimport logo from '../../images/logo.png';\nimport '../../css/ForgotPassword.css';\nimport ValidatePassword from '../Validation/ValidatePassword';\nimport { Link } from \"react-router-dom\";\n\nfunction ResetPassword(){\n    const [password, setPassword] = useState({\n        new_password: '',\n        confirm_password: '',\n    });\n    const [error, setError] = useState(false);\n    function handleSubmit(){\n        const regex =/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$/;\n        if(regex.exec(password.new_password) !==null && password.confirm_password===password.new_password){\n            return <Link to=\"/login\"/>\n        }\n    }\n    // const [validPassword, setValidPassword] = useState({\n    //     isValid: false,\n    //     isInValid: false\n    // });\n    // const [validConfirmPassword, setValidConfirmPassword] = useState({\n    //     isValid: false,\n    //     isInValid: false\n    // });\n\n    function handleOnChange(event) {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setPassword({\n            ... password,\n            [name] : value,\n        })\n    }\n\n    // function checkPassword() {\n    //     const{isValid , isInValid} = ValidatePassword(password.new_password);\n    //     setValidPassword({\n    //         isValid: isValid,\n    //         isInValid: isInValid\n    //     })\n    // }\n\n    // function checkConfirm(){\n    //     if(password.confirm_password===password.new_password){\n    //         if(password.confirm_password!==''){\n    //             setValidConfirmPassword({\n    //                 isValid: true,\n    //                 isInValid: false,\n\n    //             })\n    //         }\n    //     }else{\n    //         setValidConfirmPassword({\n    //             isValid: false,\n    //             isInValid: true,\n    //         })\n    //     }\n    // }\n\n    return(\n        <Container>\n            <Form className=\"forgot\">\n                <FormGroup>\n                    <img src={logo} alt=\"\"/>\n                </FormGroup>\n                <FormGroup>\n                    <h3>Forgot Password?</h3>\n                </FormGroup>\n                <FormGroup className=\"style_input\">\n                    <Input valid={validPassword.isValid} invalid={validPassword.isInValid} type=\"password\" name=\"new_password\" required=\"required\" onChange={handleOnChange} onBlur={checkPassword} placeholder=\"New password\"/>\n                </FormGroup>\n                <FormGroup className=\"style_input2\">\n                    <Input valid={validConfirmPassword.isValid} invalid={validConfirmPassword.isInValid} type=\"password\" name=\"confirm_password\" required=\"required\" onChange={handleOnChange} onBlur={checkConfirm} placeholder=\"Confirm new password\"/>\n                </FormGroup>\n                <FormGroup>\n                    <Alert isOpen={error} color=\"danger\">Password incorrect! Try again!</Alert>\n                </FormGroup>\n                <FormGroup className=\"btn_next\">\n                    <Button className=\"btn_update\" color=\"primary\">Update</Button>\n                </FormGroup>\n            </Form>\n        </Container>\n    );\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}