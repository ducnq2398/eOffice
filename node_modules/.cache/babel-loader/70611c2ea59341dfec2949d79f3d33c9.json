{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macos/Desktop/EOfficeWeb/src/components/RouterURL/PrivateRouter.js\";\nimport { Component } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { getToken } from \"../../utils/Common\";\nexport const PrivateRouter = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => getToken() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/',\n      state: {\n        from: props.location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 11\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 5\n}, this);\n_c = PrivateRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRouter\");","map":{"version":3,"sources":["/Users/macos/Desktop/EOfficeWeb/src/components/RouterURL/PrivateRouter.js"],"names":["Component","Redirect","Route","getToken","PrivateRouter","component","rest","props","pathname","state","from","location"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEL,SAAb;AAAwB,KAAIM;AAA5B,CAAD,kBACzB,QAAC,KAAD,OAAYA,IAAZ;AAAkB,EAAA,MAAM,EAAGC,KAAD,IACtBJ,QAAQ,kBACN,QAAC,SAAD,OAAgBI;AAAhB;AAAA;AAAA;AAAA;AAAA,UADM,gBAEN,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAACC,MAAAA,QAAQ,EAAE,GAAX;AAAgBC,MAAAA,KAAK,EAAC;AAACC,QAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAAtB;AAAd;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,QADG;KAAMP,a","sourcesContent":["import { Component } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { getToken } from \"../../utils/Common\";\n\nexport const PrivateRouter = ({ component: Component, ... rest}) =>(\n    <Route {... rest} render={(props) => \n        getToken() \n        ? <Component {... props}/> \n        : <Redirect to={{pathname: '/', state:{from: props.location}}}/>}/>\n);"]},"metadata":{},"sourceType":"module"}