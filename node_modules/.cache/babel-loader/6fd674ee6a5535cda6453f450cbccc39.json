{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Button, Container, Form, FormGroup, Input } from \"reactstrap\";\nimport logo from '../../images/logo.png';\nimport '../../css/ForgotPassword.css';\nimport ValidatePassword from '../Validation/ValidatePassword';\n\nfunction ResetPassword() {\n  _s();\n\n  const [password, setPassword] = useState({\n    new_password: '',\n    confirm_password: ''\n  });\n  const [validPassword, setValidPassword] = useState({\n    isValid: false,\n    isInValid: false\n  });\n  const [validConfirmPassword, setValidConfirmPassword] = useState({\n    isValid: false,\n    isInValid: false\n  });\n\n  function handleOnChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setPassword({ ...password,\n      [name]: value\n    });\n  }\n\n  function checkPassword() {\n    const {\n      isValid,\n      isInValid\n    } = ValidatePassword(password.new_password);\n    setValidPassword({\n      isValid: isValid,\n      isInValid: isInValid\n    });\n  }\n\n  function checkConfirm() {\n    if (password.confirm_password === password.new_password && password.confirm_password !== null) {\n      setValidConfirmPassword({\n        isValid: true,\n        isInValid: false\n      });\n    } else {\n      setValidConfirmPassword({\n        isValid: false,\n        isInValid: true\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"forgot\",\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        className: \"style_input\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          valid: validPassword.isValid,\n          invalid: validPassword.isInValid,\n          type: \"password\",\n          name: \"new_password\",\n          required: \"required\",\n          onChange: handleOnChange,\n          onBlur: checkPassword,\n          placeholder: \"New password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        className: \"style_input2\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          valid: validConfirmPassword.isValid,\n          invalid: validConfirmPassword.isInValid,\n          type: \"password\",\n          name: \"confirm_password\",\n          required: \"required\",\n          onChange: handleOnChange,\n          onBlur: checkConfirm,\n          placeholder: \"Confirm new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        className: \"btn_next\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn_update\",\n          color: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResetPassword, \"gI7DJo85A/DaU23SFXv1XkgfXZ8=\");\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js"],"names":["useState","Button","Container","Form","FormGroup","Input","logo","ValidatePassword","ResetPassword","password","setPassword","new_password","confirm_password","validPassword","setValidPassword","isValid","isInValid","validConfirmPassword","setValidConfirmPassword","handleOnChange","event","target","name","value","checkPassword","checkConfirm"],"mappings":"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","sourcesContent":["import {useState } from \"react\";\nimport {Button, Container, Form, FormGroup, Input} from \"reactstrap\";\nimport logo from '../../images/logo.png';\nimport '../../css/ForgotPassword.css';\nimport ValidatePassword from '../Validation/ValidatePassword';\n\nfunction ResetPassword(){\n    const [password, setPassword] = useState({\n        new_password: '',\n        confirm_password: '',\n    });\n    const [validPassword, setValidPassword] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validConfirmPassword, setValidConfirmPassword] = useState({\n        isValid: false,\n        isInValid: false\n    });\n\n    function handleOnChange(event) {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setPassword({\n            ... password,\n            [name] : value,\n        })\n    }\n\n    function checkPassword() {\n        const{isValid , isInValid} = ValidatePassword(password.new_password);\n        setValidPassword({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkConfirm(){\n        if(password.confirm_password===password.new_password && password.confirm_password!==null){\n            setValidConfirmPassword({\n                isValid: true,\n                isInValid: false,\n            })\n        }else{\n            setValidConfirmPassword({\n                isValid: false,\n                isInValid: true,\n            })\n        }\n    }\n\n    return(\n        <Container>\n            <Form className=\"forgot\">\n                <FormGroup>\n                    <img src={logo} alt=\"\"/>\n                </FormGroup>\n                <FormGroup>\n                    <h3>Forgot Password?</h3>\n                </FormGroup>\n                <FormGroup className=\"style_input\">\n                    <Input valid={validPassword.isValid} invalid={validPassword.isInValid} type=\"password\" name=\"new_password\" required=\"required\" onChange={handleOnChange} onBlur={checkPassword} placeholder=\"New password\"/>\n                </FormGroup>\n                <FormGroup className=\"style_input2\">\n                    <Input valid={validConfirmPassword.isValid} invalid={validConfirmPassword.isInValid} type=\"password\" name=\"confirm_password\" required=\"required\" onChange={handleOnChange} onBlur={checkConfirm} placeholder=\"Confirm new password\"/>\n                </FormGroup>\n                <FormGroup className=\"btn_next\">\n                    <Button className=\"btn_update\" color=\"primary\">Update</Button>\n                </FormGroup>\n            </Form>\n        </Container>\n    );\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}