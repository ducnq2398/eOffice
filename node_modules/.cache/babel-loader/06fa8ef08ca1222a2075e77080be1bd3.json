{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macos/Desktop/EOfficeWeb/src/components/EditCompany/EditCompany.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport logo from './../../images/logo.png';\nimport './EditCompany.css';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Col, Container, Form, FormGroup, Input, Label, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport ValidateCompany from '../Validation/ValidateCompany';\nimport ValidatePhone from '../Validation/ValidatePhone';\nimport ValidateEmail from '../Validation/ValidateEmail';\nimport ValidateName from '../Validation/ValidateName';\nimport ValidateDepartment from '../Validation/ValidateDepartment';\nimport ValidateAddress from '../Validation/ValidateAddress';\n\nconst validateInput = checkingText => {\n  /* reg exp để kiểm tra xem chuỗi có chỉ bao gồm 10 - 11 chữ số hay không */\n  const regexp = /^\\d{10}$/;\n  const checkingResult = regexp.exec(checkingText);\n\n  if (checkingResult !== null) {\n    return {\n      isInputValid: true,\n      errorMessage: ''\n    };\n  } else {\n    return {\n      isInputValid: false,\n      errorMessage: 'Phone number is incorrect'\n    };\n  }\n};\n\nfunction CompanyRegister(props) {\n  _s();\n\n  const history = useHistory();\n\n  const home = () => history.push('/admin-manager');\n\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const [company_name, setCompanyName] = useState('');\n  const [street_address, setStreetAddress] = useState('');\n  const [phone_number, setPhoneNumber] = useState('');\n  const [applicant, setApplicant] = useState('');\n  const [applicant_department, setApplicantDepartment] = useState('');\n  const [applicant_email, setApplicantEmail] = useState('');\n  const [isInputValid, setIsInputInvalid] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [validPhone, setValidPhone] = useState({\n    isValid: false,\n    isInValid: false\n  });\n  const [validCompany, setValidCompany] = useState({\n    isValid: false,\n    isInValid: false\n  });\n  const [validAddress, setValidAddress] = useState({\n    isValid: false,\n    isInValid: false\n  });\n  const [validName, setValidName] = useState({\n    isValid: false,\n    isInValid: false\n  });\n  const [validDepartment, setValidDepartment] = useState({\n    isValid: false,\n    isInValid: false\n  });\n  const [validEmail, setValidEmail] = useState({\n    isValid: false,\n    isInValid: false\n  });\n  const [validPassword, setValidPassword] = useState({\n    isValid: false,\n    isInValid: false\n  });\n\n  function checkEmail() {\n    const {\n      isValid,\n      isInValid\n    } = ValidateEmail(applicant_email);\n    setValidEmail({\n      isValid: isValid,\n      isInValid: isInValid\n    });\n  }\n\n  function checkPhone() {\n    const {\n      isValid,\n      isInValid\n    } = ValidatePhone(phone_number);\n    setValidPhone({\n      isValid: isValid,\n      isInValid: isInValid\n    });\n  }\n\n  function checkCompany() {\n    const {\n      isValid,\n      isInValid\n    } = ValidateCompany(company_name);\n    setValidCompany({\n      isValid: isValid,\n      isInValid: isInValid\n    });\n  }\n\n  function checkAddress() {\n    const {\n      isValid,\n      isInValid\n    } = ValidateAddress(street_address);\n    setValidAddress({\n      isValid: isValid,\n      isInValid: isInValid\n    });\n  }\n\n  function checkName() {\n    const {\n      isValid,\n      isInValid\n    } = ValidateName(applicant);\n    setValidName({\n      isValid: isValid,\n      isInValid: isInValid\n    });\n  }\n\n  function checkDepartment() {\n    const {\n      isValid,\n      isInValid\n    } = ValidateDepartment(applicant_department);\n    setValidDepartment({\n      isValid: isValid,\n      isInValid: isInValid\n    });\n  }\n\n  function getCompanyName(event) {\n    setCompanyName(event.target.value);\n  }\n\n  function getStreetAddress(e) {\n    setStreetAddress(e.target.value);\n  }\n\n  function getPhone(e) {\n    setPhoneNumber(e.target.value);\n  }\n\n  function getApplicant(e) {\n    setApplicant(e.target.value);\n  }\n\n  function getDepartment(e) {\n    setApplicantDepartment(e.target.value);\n  }\n\n  function getEmail(e) {\n    setApplicantEmail(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\",\n        onClick: home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner\",\n        children: \"Editing Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            sm: 2,\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              valid: validCompany.isValid,\n              invalid: validCompany.isInValid,\n              onBlur: checkCompany,\n              type: \"text\",\n              name: \"company_name\",\n              required: \"required\",\n              onChange: getCompanyName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            sm: 2,\n            children: \"Street Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              valid: validAddress.isValid,\n              invalid: validAddress.isInValid,\n              onBlur: checkAddress,\n              type: \"text\",\n              name: \"street_address\",\n              onChange: getStreetAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            sm: 2,\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              valid: validPhone.isValid,\n              invalid: validPhone.isInValid,\n              onBlur: checkPhone,\n              type: \"text\",\n              name: \"phone_number\",\n              required: \"required\",\n              onChange: getPhone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            sm: 2,\n            children: \"Applicant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              valid: validName.isValid,\n              invalid: validName.isInValid,\n              onBlur: checkName,\n              type: \"text\",\n              name: \"applicant\",\n              required: \"required\",\n              onChange: getApplicant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            sm: 2,\n            children: \"Applicant Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              valid: validDepartment.isValid,\n              invalid: validDepartment.isInValid,\n              onBlur: checkDepartment,\n              type: \"select\",\n              name: \"applicant_department\",\n              id: \"exampleSelect\",\n              onChange: getDepartment,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Production\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Purchasing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Marketing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Humman Resource Managerment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Accounting and Finance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            sm: 2,\n            children: \"Applicant Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              valid: validEmail.isValid,\n              invalid: validEmail.isInValid,\n              onBlur: checkEmail,\n              type: \"email\",\n              name: \"applicant_email\",\n              required: \"required\",\n              onChange: getEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          tag: \"fieldset\",\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            sm: 2,\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            check: true,\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              check: true,\n              sm: 4,\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"radio\",\n                name: \"active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this), \"Active\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            check: true,\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              check: true,\n              sm: 4,\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"radio\",\n                name: \"deactive\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this), \"Deactive\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              padding: '15px 10px 15px',\n              width: '400px',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              marginTop: '20px'\n            },\n            color: \"primary\",\n            size: \"lg\",\n            block: true,\n            onClick: toggle,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CompanyRegister, \"5wRhK1De1f46iJSIvKgoOm0CjM0=\", false, function () {\n  return [useHistory];\n});\n\n_c = CompanyRegister;\nexport default CompanyRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyRegister\");","map":{"version":3,"sources":["/Users/macos/Desktop/EOfficeWeb/src/components/EditCompany/EditCompany.js"],"names":["React","useState","logo","useHistory","Button","Col","Container","Form","FormGroup","Input","Label","Modal","ModalHeader","ModalBody","ModalFooter","ValidateCompany","ValidatePhone","ValidateEmail","ValidateName","ValidateDepartment","ValidateAddress","validateInput","checkingText","regexp","checkingResult","exec","isInputValid","errorMessage","CompanyRegister","props","history","home","push","className","modal","setModal","toggle","company_name","setCompanyName","street_address","setStreetAddress","phone_number","setPhoneNumber","applicant","setApplicant","applicant_department","setApplicantDepartment","applicant_email","setApplicantEmail","setIsInputInvalid","setErrorMessage","validPhone","setValidPhone","isValid","isInValid","validCompany","setValidCompany","validAddress","setValidAddress","validName","setValidName","validDepartment","setValidDepartment","validEmail","setValidEmail","validPassword","setValidPassword","checkEmail","checkPhone","checkCompany","checkAddress","checkName","checkDepartment","getCompanyName","event","target","value","getStreetAddress","e","getPhone","getApplicant","getDepartment","getEmail","marginTop","padding","width","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport logo from './../../images/logo.png';\nimport './EditCompany.css'\nimport {useHistory} from 'react-router-dom';\nimport {Button, Col, Container, Form, FormGroup, Input, Label, Modal, ModalHeader,ModalBody,ModalFooter} from 'reactstrap'\nimport ValidateCompany from '../Validation/ValidateCompany';\nimport ValidatePhone from '../Validation/ValidatePhone';\nimport ValidateEmail from '../Validation/ValidateEmail';\nimport ValidateName from '../Validation/ValidateName';\nimport ValidateDepartment from '../Validation/ValidateDepartment';\nimport ValidateAddress from '../Validation/ValidateAddress';\n\nconst validateInput = (checkingText) => {\n    /* reg exp để kiểm tra xem chuỗi có chỉ bao gồm 10 - 11 chữ số hay không */\n\n    const regexp = /^\\d{10}$/;\n    const checkingResult = regexp.exec(checkingText);\n    if (checkingResult !== null) {\n        return { isInputValid: true,\n                 errorMessage: ''};\n    } else {\n        return { isInputValid: false,\n                 errorMessage: 'Phone number is incorrect'};\n    }\n}\n\nfunction CompanyRegister(props){\n    const history = useHistory();\n    const home = () => history.push('/admin-manager');\n    const {\n        className\n      } = props;\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    const [company_name, setCompanyName] = useState('');\n    const [street_address, setStreetAddress] = useState('');\n    const [phone_number, setPhoneNumber] = useState('');\n    const [applicant, setApplicant] = useState('');\n    const [applicant_department, setApplicantDepartment] = useState('');\n    const [applicant_email, setApplicantEmail] = useState('');\n    const [isInputValid, setIsInputInvalid] = useState(true);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [validPhone, setValidPhone] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validCompany, setValidCompany] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validAddress, setValidAddress] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validName, setValidName] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validDepartment, setValidDepartment] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validEmail, setValidEmail] = useState({\n        isValid: false,\n        isInValid: false\n    });\n    const [validPassword, setValidPassword] = useState({\n        isValid: false,\n        isInValid: false\n    });\n\n    function checkEmail() {\n        const {isValid, isInValid} = ValidateEmail(applicant_email);\n        setValidEmail({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkPhone(){\n        const {isValid, isInValid} = ValidatePhone(phone_number);\n        setValidPhone({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkCompany() {\n        const {isValid, isInValid} = ValidateCompany(company_name);\n        setValidCompany({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkAddress() {\n        const {isValid, isInValid} = ValidateAddress(street_address);\n        setValidAddress({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    function checkName() {\n        const{isValid , isInValid} = ValidateName(applicant);\n        setValidName({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n    function checkDepartment() {\n        const{isValid , isInValid} = ValidateDepartment(applicant_department);\n        setValidDepartment({\n            isValid: isValid,\n            isInValid: isInValid\n        })\n    }\n\n    \n    \n    function getCompanyName(event){\n        setCompanyName(event.target.value)\n    }\n\n    function getStreetAddress(e){\n        setStreetAddress(e.target.value)\n    }\n\n    function getPhone(e){\n        setPhoneNumber(e.target.value)\n    }\n\n    function getApplicant(e){\n        setApplicant(e.target.value)\n    }\n\n    function getDepartment(e){\n        setApplicantDepartment(e.target.value)\n    }\n    function getEmail(e){\n        setApplicantEmail(e.target.value)\n    }\n        return (\n            <div>\n                <div>\n                    <img src={logo} alt=\"\" onClick={home}/>\n                </div>\n                \n                <Container>\n                <div className=\"banner\">\n                    Editing Company\n                </div>\n                    <Form style={{marginTop:'20px'}}>\n                        <FormGroup row>\n                            <Label sm={2}>Company Name</Label>\n                            <Col sm={8}>\n                                <Input valid={validCompany.isValid} invalid={validCompany.isInValid} onBlur={checkCompany} type=\"text\" name=\"company_name\" required=\"required\" onChange={getCompanyName}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Street Address</Label>\n                            <Col sm={8}>\n                                <Input valid={validAddress.isValid} invalid={validAddress.isInValid} onBlur={checkAddress} type=\"text\" name=\"street_address\" onChange={getStreetAddress}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Phone Number</Label>\n                            <Col sm={8}>\n                                <Input valid={validPhone.isValid} invalid={validPhone.isInValid} onBlur={checkPhone} type=\"text\" name=\"phone_number\" required=\"required\" onChange={getPhone}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Applicant</Label>\n                            <Col sm={8}>\n                                <Input valid={validName.isValid} invalid={validName.isInValid} onBlur={checkName} type=\"text\" name=\"applicant\" required=\"required\" onChange={getApplicant}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Applicant Department</Label>\n                            <Col sm={8}>\n                                <Input valid={validDepartment.isValid} invalid={validDepartment.isInValid} onBlur={checkDepartment} type=\"select\" name=\"applicant_department\" id=\"exampleSelect\" onChange={getDepartment}>\n                                    <option>Production</option>\n                                    <option>Purchasing</option>\n                                    <option>Marketing</option>\n                                    <option>Humman Resource Managerment</option>\n                                    <option>Accounting and Finance</option>\n                                </Input>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Applicant Email</Label>\n                            <Col sm={8}>\n                                <Input valid={validEmail.isValid} invalid={validEmail.isInValid} onBlur={checkEmail} type=\"email\" name=\"applicant_email\" required=\"required\" onChange={getEmail}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\" row>\n                            <Label sm={2}>Status</Label>\n                            <FormGroup check>\n                                <Label check sm={4}>\n                                    <Input type=\"radio\" name=\"active\"/>\n                                    Active\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check sm={4}>\n                                    <Input type=\"radio\" name=\"deactive\"/>\n                                    Deactive\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Button style={{padding:'15px 10px 15px',width:'400px',marginLeft:'auto', marginRight:'auto',marginTop:'20px'}} color=\"primary\" size=\"lg\" block onClick={toggle}>Save</Button>\n                        </FormGroup>\n                    </Form>\n                </Container>\n            </div>\n        );\n    }\n\nexport default CompanyRegister;"]},"metadata":{},"sourceType":"module"}