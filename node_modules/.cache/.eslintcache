[{"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\App\\App.js":"2","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\RouterURL\\RouterURL.js":"3","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminLogin\\AdminLogin.js":"4","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\ForgotPassword\\ForgotPassword.js":"5","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminManager\\AdminManager.js":"6","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\utils\\Common.js":"7","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\ForgotPassword\\ResetPassword.js":"8","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\EditCompany\\EditCompany.js":"9","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\InvoiceContent.js":"10","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\ContractContent.js":"11","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\CreateContract.js":"12","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Error\\Error.js":"13","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\CreateInvoice.js":"14","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Notification\\Notification.js":"15","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Profile\\Profile.js":"16","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Dashboard\\Dashboard.js":"17","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\DetailDocument\\InvoiceDetail.js":"18","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\DetailDocument\\ContractDetail.js":"19","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Login\\Login.js":"20","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CompanyRegister\\CompanyRegister.js":"21","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CompanyList\\CompanyList.js":"22","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Document\\Document.js":"23","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminCompany\\UserManagement\\UserManagement.js":"24","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminCompany\\DepartmentManagement\\DepartmentManagement.js":"25","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\App\\firebase.js":"26","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\userListAPI.js":"27","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\loginAPI.js":"28","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\invoiceAPI.js":"29","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\contractAPI.js":"30","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepDetailContract.js":"31","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepInvoice.js":"32","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\SidebarAdmin.js":"33","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Validation\\ValidateCompany.js":"34","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Validation\\ValidateEmail.js":"35","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Validation\\ValidatePhone.js":"36","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Nav\\Header.js":"37","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Validation\\ValidateAddress.js":"38","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Validation\\ValidateName.js":"39","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\PDF\\PDF.js":"40","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetPhone.js":"41","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepDoc2.js":"42","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetEmail.js":"43","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetCreater.js":"44","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\companyListAPI.js":"45","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetSubDepartment.js":"46","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\departmentAPI.js":"47","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\Sidebar.js":"48","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetDepartment.js":"49","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\axiosClient.js":"50","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepDoc.js":"51","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetAdminCompany\\GetAdminCompany.js":"52","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\notiAPI.js":"53","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepDetail.js":"54","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\Stepper.js":"55","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\validateAPI.js":"56"},{"size":289,"mtime":1615526194291,"results":"57","hashOfConfig":"58"},{"size":310,"mtime":1615905981650,"results":"59","hashOfConfig":"58"},{"size":4190,"mtime":1615913357097,"results":"60","hashOfConfig":"58"},{"size":2888,"mtime":1615914447852,"results":"61","hashOfConfig":"58"},{"size":4941,"mtime":1615728772856,"results":"62","hashOfConfig":"58"},{"size":456,"mtime":1615914402508,"results":"63","hashOfConfig":"58"},{"size":545,"mtime":1614560213438,"results":"64","hashOfConfig":"58"},{"size":2713,"mtime":1615566217486,"results":"65","hashOfConfig":"58"},{"size":6998,"mtime":1615922862447,"results":"66","hashOfConfig":"58"},{"size":11064,"mtime":1615918903712,"results":"67","hashOfConfig":"58"},{"size":13867,"mtime":1615918900468,"results":"68","hashOfConfig":"58"},{"size":33014,"mtime":1615728772850,"results":"69","hashOfConfig":"58"},{"size":691,"mtime":1614810671885,"results":"70","hashOfConfig":"58"},{"size":23563,"mtime":1615814964710,"results":"71","hashOfConfig":"58"},{"size":4032,"mtime":1615786471643,"results":"72","hashOfConfig":"58"},{"size":4938,"mtime":1615729552314,"results":"73","hashOfConfig":"58"},{"size":10835,"mtime":1615913259907,"results":"74","hashOfConfig":"58"},{"size":9230,"mtime":1615907039827,"results":"75","hashOfConfig":"58"},{"size":11895,"mtime":1615918856796,"results":"76","hashOfConfig":"58"},{"size":4947,"mtime":1615905981652,"results":"77","hashOfConfig":"58"},{"size":16987,"mtime":1615918466280,"results":"78","hashOfConfig":"58"},{"size":7406,"mtime":1615918741790,"results":"79","hashOfConfig":"58"},{"size":24843,"mtime":1615918284252,"results":"80","hashOfConfig":"58"},{"size":37590,"mtime":1616081583564,"results":"81","hashOfConfig":"58"},{"size":8774,"mtime":1615905981649,"results":"82","hashOfConfig":"58"},{"size":422,"mtime":1615525860817,"results":"83","hashOfConfig":"58"},{"size":1619,"mtime":1615803013623,"results":"84","hashOfConfig":"58"},{"size":341,"mtime":1614380569570,"results":"85","hashOfConfig":"58"},{"size":1421,"mtime":1615101830744,"results":"86","hashOfConfig":"58"},{"size":1689,"mtime":1615101789597,"results":"87","hashOfConfig":"58"},{"size":4714,"mtime":1615918222460,"results":"88","hashOfConfig":"58"},{"size":1228,"mtime":1615086305024,"results":"89","hashOfConfig":"58"},{"size":3148,"mtime":1615919109835,"results":"90","hashOfConfig":"58"},{"size":292,"mtime":1614380569688,"results":"91","hashOfConfig":"58"},{"size":485,"mtime":1614380569688,"results":"92","hashOfConfig":"58"},{"size":458,"mtime":1614380569689,"results":"93","hashOfConfig":"58"},{"size":2788,"mtime":1615913710517,"results":"94","hashOfConfig":"58"},{"size":293,"mtime":1614380569688,"results":"95","hashOfConfig":"58"},{"size":366,"mtime":1614380569689,"results":"96","hashOfConfig":"58"},{"size":1275,"mtime":1615019672683,"results":"97","hashOfConfig":"58"},{"size":794,"mtime":1615193402798,"results":"98","hashOfConfig":"58"},{"size":648,"mtime":1614669022252,"results":"99","hashOfConfig":"58"},{"size":794,"mtime":1615193393204,"results":"100","hashOfConfig":"58"},{"size":798,"mtime":1615193370670,"results":"101","hashOfConfig":"58"},{"size":969,"mtime":1615905981649,"results":"102","hashOfConfig":"58"},{"size":776,"mtime":1615298518300,"results":"103","hashOfConfig":"58"},{"size":1270,"mtime":1615728772845,"results":"104","hashOfConfig":"58"},{"size":4666,"mtime":1614939134517,"results":"105","hashOfConfig":"58"},{"size":831,"mtime":1615913735844,"results":"106","hashOfConfig":"58"},{"size":158,"mtime":1614380569568,"results":"107","hashOfConfig":"58"},{"size":661,"mtime":1614380569686,"results":"108","hashOfConfig":"58"},{"size":792,"mtime":1615917583730,"results":"109","hashOfConfig":"58"},{"size":332,"mtime":1615740724824,"results":"110","hashOfConfig":"58"},{"size":3720,"mtime":1615918248213,"results":"111","hashOfConfig":"58"},{"size":1280,"mtime":1614595820176,"results":"112","hashOfConfig":"58"},{"size":589,"mtime":1615916952147,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"lohtio",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"116"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\index.js",[],["241","242"],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\App\\App.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\RouterURL\\RouterURL.js",["243"],"import {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport AdminLogin from \"../AdminLogin/AdminLogin\";\r\nimport AdminManager from \"../AdminManager/AdminManager\";\r\nimport Login from \"../Login/Login\";\r\nimport CompanyRegister from \"../CompanyRegister/CompanyRegister\";\r\nimport CompanyList from \"../CompanyList/CompanyList\";\r\nimport ForgotPassword from \"../ForgotPassword/ForgotPassword\";\r\nimport EditCompany from \"../EditCompany/EditCompany\";\r\nimport { getToken, getUser } from \"../../utils/Common\";\r\nimport ResetPassword from \"../ForgotPassword/ResetPassword\";\r\nimport UserManagement from \"../AdminCompany/UserManagement/UserManagement\";\r\nimport CreateContract from \"../CreateDocument/CreateContract\";\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\nimport Document from \"../Document/Document\";\r\nimport Error from \"../Error/Error\";\r\nimport DepartmentManagerment from \"../AdminCompany/DepartmentManagement/DepartmentManagement\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport CreateInvoice from \"../CreateDocument/CreateInvoice\";\r\nimport InvoiceContent from \"../CreateDocument/InvoiceContent\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport ContractContent from \"../CreateDocument/ContractContent\";\r\nimport InvoiceDetail from \"../DetailDocument/InvoiceDetail\";\r\nimport ContractDetail from \"../DetailDocument/ContractDetail\";\r\n\r\nfunction RouterURL() {\r\n  const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        getToken() && getUser().Role === \"3\" ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/error\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n\r\n  const AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        getToken() && getUser().Role === \"1\" ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/error\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n  const UserRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        getToken() && getUser().Role !== \"3\" ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/error\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path=\"/error\" component={Error} />\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/admin\" component={AdminLogin} />\r\n        <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n        <Route path=\"/reset-password\" component={ResetPassword} />\r\n        <Route path=\"/error\" component={Error} />\r\n        <UserRoute path=\"/contract\" component={CreateContract} />\r\n        <UserRoute path=\"/invoice\" component={CreateInvoice} />\r\n        <UserRoute path=\"/dashboard\" component={Dashboard} />\r\n        <UserRoute path=\"/invoice-confirm\" component={InvoiceContent} />\r\n        <UserRoute path=\"/contract-confirm\" component={ContractContent} />\r\n        <UserRoute path=\"/document\" component={Document} />\r\n        <UserRoute path=\"/detail/invoice/:id/:name\" component={InvoiceDetail} />\r\n        <UserRoute\r\n          path=\"/detail/contract/:id/:name\"\r\n          component={ContractDetail}\r\n        />\r\n        <UserRoute path=\"/notification\" component={Notification} />\r\n        <AdminRoute path=\"/department\" component={DepartmentManagerment} />\r\n        <AdminRoute path=\"/user-management\" component={UserManagement} />\r\n        <PrivateRoute path=\"/admin-manager\" component={AdminManager} />\r\n        <PrivateRoute path=\"/company-register\" component={CompanyRegister} />\r\n        <PrivateRoute path=\"/company-list\" component={CompanyList} />\r\n        <PrivateRoute path=\"/edit-company\" component={EditCompany} />\r\n        <UserRoute path=\"/profile\" component={Profile} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\nexport default RouterURL;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminLogin\\AdminLogin.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\ForgotPassword\\ForgotPassword.js",["244","245","246"],"import { useState } from \"react\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport logo from \"../../images/logo.png\";\r\nimport \"../../css/ForgotPassword.css\";\r\nimport support from \"../../images/support.png\";\r\nimport CountDown from \"react-countdown\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport firebase from \"../App/firebase\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction ForgotPassword() {\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [check, setCheck] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n  const [opt, setOtp] = useState(null);\r\n  function handleOnChange(e) {\r\n    setPhone(e.target.value);\r\n  }\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => {\r\n    if (!phone.trim().match(\"^[0-9]{10}$\")) {\r\n      setCheck({\r\n        error: true,\r\n        message: \"Invalid phone number\",\r\n      });\r\n      setTimeout(() => {\r\n        setCheck({\r\n          error: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else {\r\n      window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n        \"recaptcha\"\r\n      );\r\n      const appVerifier = window.recaptchaVerifier;\r\n      const number = \"+84\" + phone.substring(1);\r\n      firebase\r\n        .auth()\r\n        .signInWithPhoneNumber(number, appVerifier)\r\n        .then(function (confirmationResult) {\r\n          setModal(true);\r\n          // setTimeout(() => {\r\n          //   setModal(false);\r\n          // }, 59000);\r\n          window.confirmationResult = confirmationResult;\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  function handleConfirm(e) {\r\n    e.preventDefault();\r\n    window.confirmationResult\r\n      .confirm(opt)\r\n      .then((result) => {\r\n        const user = result.user;\r\n        // \r\n        console.log(user)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const renderer = ({ seconds }) => {\r\n    return <span>{seconds}</span>;\r\n  };\r\n  return (\r\n    <Container className=\"a\">\r\n      <Form className=\"forgot\">\r\n        <FormGroup>\r\n          <img src={logo} alt=\"\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <h3>Forgot Password?</h3>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <TextField\r\n            error={check.error}\r\n            helperText={check.message}\r\n            fullWidth\r\n            type=\"phone\"\r\n            required\r\n            variant=\"outlined\"\r\n            placeholder=\"Please enter phone number\"\r\n            onChange={handleOnChange}\r\n          />\r\n          <div\r\n            id=\"recaptcha\"\r\n            style={{ marginLeft: \"90px\", marginTop: \"10px\" }}\r\n          ></div>\r\n        </FormGroup>\r\n        <FormGroup className=\"next\">\r\n          <Button color=\"primary\" variant=\"contained\" onClick={toggle}>\r\n            Next\r\n          </Button>\r\n        </FormGroup>\r\n      </Form>\r\n      <Modal style={{ marginTop: \"18%\" }} isOpen={modal} toggle={toggle}>\r\n        <ModalHeader className=\"otp_banner\">Verifying OTP</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <span>\r\n                Please enter the OTP sent to Phone number to retrieve your\r\n                password\r\n              </span>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    name=\"otp\"\r\n                    onChange={(e) => setOtp(e.target.value)}\r\n                  />\r\n                </Col>\r\n                <Col\r\n                  sm={2}\r\n                  style={{\r\n                    marginTop: \"11px\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"20px\",\r\n                  }}\r\n                >\r\n                  {/* <CountDown date={Date.now() + 59000} renderer={renderer} />s */}\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Row>\r\n            <Col sm={5}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => setModal(false)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm={5}>\r\n              <Button onClick={handleConfirm} variant=\"contained\" color=\"primary\">\r\n                Verifying\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <img\r\n        style={{ position: \"fixed\", bottom: 0, left: 0 }}\r\n        src={support}\r\n        alt=\"\"\r\n        width=\"500\"\r\n        height=\"100\"\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminManager\\AdminManager.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\utils\\Common.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\ForgotPassword\\ResetPassword.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\EditCompany\\EditCompany.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\InvoiceContent.js",["247","248","249"],"import {\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport Header from \"../Nav/Header\";\r\nimport StepInvoice from \"../Sidebar/StepInvoice\";\r\nimport PDF from \"../PDF/PDF\";\r\nimport \"../../css/CreateDoc.css\";\r\nimport userListAPI from \"../../api/userListAPI\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { forwardRef, useEffect, useState } from \"react\";\r\nimport { getUser } from \"../../utils/Common\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport invoiceAPI from \"../../api/invoiceAPI\";\r\nimport axios from \"axios\";\r\nimport Moment from \"moment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  InputAdornment,\r\n  Slide,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport TitleIcon from \"@material-ui/icons/Title\";\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport \"date-fns\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport moment from \"moment\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\ntoast.configure();\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: theme.palette.common.black,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\nfunction InvoiceContent() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [create, setCreate] = useState(false);\r\n  function toogle() {\r\n    setCreate(!create);\r\n  }\r\n  const [loading, setLoading] = useState(false);\r\n  const [signer, setSigner] = useState(\"\");\r\n  const viewer = location.state.viewer;\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage] = useState(4);\r\n  const indexOfLastPost = (page + 1) * rowsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\r\n  const currentPosts = viewer.slice(indexOfFirstPost, indexOfLastPost);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  useEffect(() => {\r\n    async function getSigner() {\r\n      try {\r\n        const res = await userListAPI.getUserById(\r\n          location.state.data.signer.id\r\n        );\r\n        setSigner(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getSigner();\r\n  }, [location.state.data.signer.id]);\r\n\r\n  async function handleCreated(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const file = location.state.file[0];\r\n    const convertBase64 = await base64(file);\r\n    const url = convertBase64.slice(28);\r\n    const position =\r\n      \"page=\" +\r\n      location.state.numberPage +\r\n      \",x=\" +\r\n      location.state.signLocation.x +\r\n      \",y=\" +\r\n      location.state.signLocation.y;\r\n    const params = {\r\n      dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\r\n      creatorId: getUser().Id,\r\n      dateExpire: location.state.date,\r\n      title: location.state.data.title,\r\n      signerId: location.state.data.signer.id,\r\n      signLocation: position,\r\n      invoiceURL: url,\r\n    };\r\n    invoiceAPI\r\n      .addInvoice(params)\r\n      .then(function (res) {\r\n        const invoiceId = res.data.id;\r\n        const viewer = {\r\n          invoiceId: invoiceId,\r\n          listViewersId: location.state.listViewerId,\r\n        };\r\n        axios\r\n          .put(\r\n            \"https://datnxeoffice.azurewebsites.net/api/invoices/addviewertoinvoice\",\r\n            viewer,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${getUser().IdToken}`,\r\n              },\r\n            }\r\n          )\r\n          .then(function (res) {\r\n            toast.success(\"You has created invoice successfully\", {\r\n              position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            history.push({\r\n              pathname:\r\n                \"/detail/invoice/\" +\r\n                invoiceId +\r\n                \"/\" +\r\n                location.state.data.title,\r\n            });\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n  function base64(file) {\r\n    return new Promise((resolve) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result);\r\n      };\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <StepInvoice activeStep={5} />\r\n      <div className=\"main-panel\">\r\n        <Header />\r\n        <Container fluid={true}>\r\n          <Row>\r\n            <Col>\r\n              <Paper style={{ marginTop: \"20px\" }} elevation={3}>\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                  }}\r\n                >\r\n                  Invoice Content\r\n                </Label>\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  value={location.state.data.title}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <TitleIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  value={signer.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BorderColorIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n\r\n                <TableContainer style={{ marginTop: \"20px\", padding: \"10px\" }}>\r\n                  <Table aria-label=\"customized table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell>Viewer name</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">Email</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">\r\n                          Phone number\r\n                        </StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {currentPosts.map((row) => (\r\n                        <StyledTableRow key={row.name}>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {row.name}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            {row.email}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            {row.phone}\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={viewer.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  labelRowsPerPage=\"\"\r\n                  onChangePage={handleChangePage}\r\n                  rowsPerPageOptions={[]}\r\n                />\r\n                <TextField\r\n                  label=\"Date expiration\"\r\n                  value={moment(location.state.date).format('DD/MM/YYYY HH:mm:ss')}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <EventAvailableIcon color=\"primary\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </Paper>\r\n              <Button\r\n                style={{ marginTop: \"20px\", marginRight: \"10px\" }}\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={() => history.push(\"/document\")}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                style={{ marginTop: \"20px\" }}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={toogle}\r\n              >\r\n                Create\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Form className=\"form-doc\">\r\n                <FormGroup row>\r\n                  <div>\r\n                    <PDF pdf={location.state.file[0]} />\r\n                  </div>\r\n                </FormGroup>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Dialog\r\n          open={create}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={toogle}\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          fullWidth\r\n        >\r\n          <DialogTitle>{\"Do you want create Invoice?\"}</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={toogle} color=\"secondary\" variant=\"contained\">\r\n              No\r\n            </Button>\r\n            <Button onClick={handleCreated} color=\"primary\" variant=\"contained\">\r\n              Yes\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Backdrop className={useStyles().backdrop} open={loading}>\r\n          <CircularProgress color=\"inherit\"/>\r\n        </Backdrop>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default InvoiceContent;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\ContractContent.js",["250","251","252","253"],"import { Container, Form, FormGroup, Row, Col, Label } from \"reactstrap\";\r\nimport Header from \"../Nav/Header\";\r\nimport StepContract from \"../Sidebar/Stepper\";\r\nimport PDF from \"../PDF/PDF\";\r\nimport \"../../css/CreateDoc.css\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { forwardRef, useEffect, useState } from \"react\";\r\nimport userListAPI from \"../../api/userListAPI\";\r\nimport companyListAPI from \"../../api/companyListAPI\";\r\nimport { getUser } from \"../../utils/Common\";\r\nimport contractAPI from \"../../api/contractAPI\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TitleIcon from \"@material-ui/icons/Title\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\nimport {\r\n  InputAdornment,\r\n  Paper,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  Table,\r\n  TextField,\r\n  withStyles,\r\n  TablePagination,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: theme.palette.common.black,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction ContractContent() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [create, setCreate] = useState(false);\r\n  const [signer, setSigner] = useState(\"\");\r\n  const [guest, setGuest] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage] = useState(2);\r\n  const indexOfLastPost = (page + 1) * rowsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\r\n  const viewer = location.state.viewer;\r\n  const currentPosts = viewer.slice(indexOfFirstPost, indexOfLastPost);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  function toogle() {\r\n    setCreate(!create);\r\n  }\r\n  useEffect(() => {\r\n    async function getSigner() {\r\n      try {\r\n        const res = await userListAPI.getUserById(\r\n          location.state.data.signer.id\r\n        );\r\n        setSigner(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getSigner();\r\n  }, [location.state.data.signer.id]);\r\n  useEffect(() => {\r\n    async function getCompany() {\r\n      try {\r\n        const res = await companyListAPI.getCompanyById(getUser().CompanyId);\r\n        setCompany(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getCompany();\r\n  }, []);\r\n  useEffect(() => {\r\n    async function getGuest() {\r\n      try {\r\n        const res = await userListAPI.getUserById(\r\n          location.state.data.signer_guest.id\r\n        );\r\n        setGuest(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getGuest();\r\n  }, [location.state.data.signer_guest.id]);\r\n\r\n  async function handleCreated(e) {\r\n    e.preventDefault();\r\n    const file = location.state.file[0];\r\n    const convertBase64 = await base64(file);\r\n    const url = convertBase64.slice(28);\r\n    const position =\r\n      \"page=\" +\r\n      location.state.numberPage +\r\n      \",x=\" +\r\n      location.state.signLocationA.x +\r\n      \",y=\" +\r\n      location.state.signLocationA.y +\r\n      \"|page=\" +\r\n      location.state.numberPage +\r\n      \",x=\" +\r\n      location.state.signLocationB.x +\r\n      \",y=\" +\r\n      location.state.signLocationB.y;\r\n    const params = {\r\n      dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\r\n      creatorId: getUser().Id,\r\n      dateExpire: location.state.date,\r\n      title: location.state.data.title,\r\n      contractURL: url,\r\n      signLocation: position,\r\n    };\r\n    contractAPI\r\n      .addContract(params)\r\n      .then(function (res) {\r\n        const contractId = res.data.id;\r\n        const listSigner = [];\r\n        listSigner.push(location.state.data.signer.id);\r\n        listSigner.push(location.state.data.signer_guest.id);\r\n        const data = {\r\n          contractId: contractId,\r\n          listSignersId: listSigner,\r\n        };\r\n        axios\r\n          .put(\r\n            \"https://datnxeoffice.azurewebsites.net/api/contracts/addsignertocontract\",\r\n            data,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${getUser().IdToken}`,\r\n              },\r\n            }\r\n          )\r\n          .then(function (res) {\r\n            const listViewerId = [];\r\n            location.state.viewer.map((v) => {\r\n              listViewerId.push(v.id);\r\n            });\r\n            listViewerId.push(getUser().Id);\r\n            const viewer = {\r\n              contractId: contractId,\r\n              listViewersId: listViewerId,\r\n            };\r\n            axios\r\n              .put(\r\n                \"https://datnxeoffice.azurewebsites.net/api/contracts/addviewertocontract\",\r\n                viewer,\r\n                {\r\n                  headers: {\r\n                    Authorization: `Bearer ${getUser().IdToken}`,\r\n                  },\r\n                }\r\n              )\r\n              .then(function (res) {\r\n                toast.success(\"You has created contract successfully\", {\r\n                  position: toast.POSITION.TOP_CENTER,\r\n                });\r\n                history.push({\r\n                  pathname:\r\n                    \"/detail/contract/\" +\r\n                    contractId +\r\n                    \"/\" +\r\n                    location.state.data.title,\r\n                });\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function base64(file) {\r\n    return new Promise((resolve) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result);\r\n      };\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <StepContract activeStep={7} />\r\n      <div className=\"main-panel\">\r\n        <Header />\r\n        <Container fluid={true}>\r\n          <Row>\r\n            <Col>\r\n              <Paper style={{ marginTop: \"20px\" }} elevation={3}>\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                  }}\r\n                >\r\n                  Contract Content\r\n                </Label>\r\n                <TextField\r\n                  \r\n                  variant=\"standard\"\r\n                  value={location.state.data.title}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <TitleIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  \r\n                  variant=\"standard\"\r\n                  value={company.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BusinessIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  \r\n                  variant=\"standard\"\r\n                  value={signer.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BorderColorIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  \r\n                  variant=\"standard\"\r\n                  value={location.state.data.company_guest.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BusinessIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  \r\n                  variant=\"standard\"\r\n                  value={guest.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BorderColorIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TableContainer>\r\n                  <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell>Viewer name</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">Email</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">\r\n                          Phone number\r\n                        </StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {currentPosts.map((row) => (\r\n                        <StyledTableRow key={row.name}>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {row.name}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            {row.email}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            {row.phone}\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={viewer.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  labelRowsPerPage=\"\"\r\n                  onChangePage={handleChangePage}\r\n                  rowsPerPageOptions={[]}\r\n                />\r\n\r\n                <TextField\r\n                  label=\"Date expiration\"\r\n                  value={moment(location.state.date).format('DD/MM/YYYY HH:mm:ss')}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <EventAvailableIcon color=\"primary\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </Paper>\r\n              <Button\r\n                style={{ marginTop: \"20px\", marginRight: \"10px\" }}\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={() => history.push(\"/document\")}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                style={{ marginTop: \"20px\" }}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={toogle}\r\n              >\r\n                Create\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Form className=\"form-doc\">\r\n                <FormGroup row>\r\n                  <div>\r\n                    <PDF pdf={location.state.file[0]} />\r\n                  </div>\r\n                </FormGroup>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Dialog\r\n          open={create}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={toogle}\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          fullWidth\r\n        >\r\n          <DialogTitle>{\"Do you want create Contract?\"}</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={toogle} color=\"secondary\" variant=\"contained\">\r\n              No\r\n            </Button>\r\n            <Button onClick={handleCreated} color=\"primary\" variant=\"contained\">\r\n              Yes\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ContractContent;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\CreateContract.js",["254","255","256","257","258","259","260","261","262","263","264"],"import { Container, Form, FormGroup, Row, Col, Label } from \"reactstrap\";\r\nimport Header from \"../Nav/Header\";\r\nimport { useState, useEffect, useMemo } from \"react\";\r\nimport \"../../css/CreateDoc.css\";\r\nimport VerticalLinearStepper from \"../Sidebar/Stepper\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport companyListAPI from \"../../api/companyListAPI\";\r\nimport userListAPI from \"../../api/userListAPI\";\r\nimport { getUser } from \"../../utils/Common\";\r\nimport demo from \"../../images/demo.png\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport EditLocationIcon from \"@material-ui/icons/EditLocation\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport BackupIcon from \"@material-ui/icons/Backup\";\r\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Moment from \"moment\";\r\nimport { InputAdornment, Slide, Snackbar, Tooltip } from \"@material-ui/core\";\r\nimport TitleIcon from \"@material-ui/icons/Title\";\r\nimport { toast } from \"react-toastify\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"right\" />;\r\n}\r\ntoast.configure();\r\nfunction CreateDocument() {\r\n  const [listCompany, setListCompany] = useState([]);\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [listSinger, setListSigner] = useState([]);\r\n  const [listGuest, setListGuest] = useState([]);\r\n  const history = useHistory();\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const [locaA, setLocaA] = useState(true);\r\n  const [locaB, setLocaB] = useState(true);\r\n  const [show, setShow] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [file, setFile] = useState([]);\r\n  const [dataUpload, setDataUpload] = useState({\r\n    title: \"\",\r\n    signer: null,\r\n    company_guest: \"\",\r\n    signer_guest: null,\r\n  });\r\n  const [alert, setAlert] = useState({\r\n    file: false,\r\n    title: false,\r\n    signerA: false,\r\n    signerB: false,\r\n    company: false,\r\n    date: false,\r\n    location: false,\r\n    message: \"\",\r\n  });\r\n  const [positionA, setPositionA] = useState({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const [positionB, setPositionB] = useState({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const [cursor, setCursor] = useState({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const [color, setColor] = useState({\r\n    signerA: \"#808080ad\",\r\n    signerB: \"#808080ad\",\r\n  });\r\n  const [viewer, setViewer] = useState([]);\r\n  const [viewerGuest, setViewerGuest] = useState([]);\r\n  const [numPages, setNumPages] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n    setPageNumber(1);\r\n  }\r\n  const handleChange = (event, value) => {\r\n    setPageNumber(value);\r\n  };\r\n\r\n  function handleOnChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setDataUpload({\r\n      ...dataUpload,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetListCompany() {\r\n      try {\r\n        const response = await companyListAPI.getAll();\r\n        setListCompany(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetListCompany();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetListUser() {\r\n      const companyId = getUser().CompanyId;\r\n      try {\r\n        const response = await userListAPI.getUserByCompanyId(companyId);\r\n        setListSigner(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetListUser();\r\n  }, []);\r\n  useEffect(() => {\r\n    async function fetListGuest() {\r\n      const id = dataUpload.company_guest.id;\r\n      try {\r\n        const response = await userListAPI.getUserByCompanyId(id);\r\n        setListGuest(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetListGuest();\r\n  }, [dataUpload.company_guest]);\r\n\r\n  function handleContent() {\r\n    if (selectedDate === null) {\r\n      setAlert({\r\n        ...alert,\r\n        date: true,\r\n        message: \"Please select expiration date !!!\",\r\n      });\r\n      setTimeout(() => {\r\n        setAlert(\r\n          {\r\n            ...alert,\r\n            date: false,\r\n            message: \"\",\r\n          },\r\n          3000\r\n        );\r\n      });\r\n    } else if (\r\n      Moment(selectedDate).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z') <\r\n      Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z')\r\n    ) {\r\n      setAlert({\r\n        ...alert,\r\n        date: true,\r\n        message: \"Expiration date can't less than current date !!!\",\r\n      });\r\n      setTimeout(() => {\r\n        setAlert({\r\n          ...alert,\r\n          date: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (\r\n      positionA.x === 0 &&\r\n      positionA.y === 0\r\n    ) {\r\n      setAlert({\r\n        ...alert,\r\n        location: true,\r\n        message: \"Please choose location sign to continue...\",\r\n      });\r\n      setTimeout(() => {\r\n        setAlert({\r\n          ...alert,\r\n          location: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    }else if(positionB.x===0 && positionB.y===0){\r\n      setAlert({\r\n        ...alert,\r\n        location: true,\r\n        message: \"Please choose location sign to continue...\",\r\n      });\r\n      setTimeout(() => {\r\n        setAlert({\r\n          ...alert,\r\n          location: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else {\r\n      const listViewer = [...viewer, ...viewerGuest];\r\n      history.push({\r\n        pathname: \"/contract-confirm\",\r\n        state: {\r\n          file: file,\r\n          data: dataUpload,\r\n          viewer: listViewer,\r\n          signLocationA: positionA,\r\n          signLocationB: positionB,\r\n          numberPage: pageNumber,\r\n          date: Moment(selectedDate).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  function getLocationA(e) {\r\n    setPositionA({\r\n      x: e.nativeEvent.offsetX,\r\n      y: e.nativeEvent.offsetY,\r\n    });\r\n    setLocaA(true);\r\n  }\r\n  function getLocationB(e) {\r\n    setPositionB({\r\n      x: e.nativeEvent.offsetX,\r\n      y: e.nativeEvent.offsetY,\r\n    });\r\n    setLocaB(true);\r\n  }\r\n\r\n  function handleA(e) {\r\n    e.preventDefault();\r\n    setColor({ ...color, signerA: \"#808080ad\" });\r\n    setPositionA({ x: 0, y: 0 });\r\n    setLocaA(!locaA);\r\n  }\r\n\r\n  function handleB(e) {\r\n    e.preventDefault();\r\n    setColor({ ...color, signerB: \"#808080ad\" });\r\n    setPositionB({ x: 0, y: 0 });\r\n    setLocaB(!locaB);\r\n  }\r\n  useEffect(() => {\r\n    addEventListeners();\r\n    return () => removeEventListeners();\r\n  }, []);\r\n\r\n  const addEventListeners = () => {\r\n    document.addEventListener(\"mousemove\", onMouseMove);\r\n  };\r\n\r\n  const removeEventListeners = () => {\r\n    document.removeEventListener(\"mousemove\", onMouseMove);\r\n  };\r\n  const onMouseMove = (e) => {\r\n    setCursor({ x: e.clientX, y: e.clientY });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <VerticalLinearStepper activeStep={activeStep} />\r\n      <div className=\"main-panel\">\r\n        <Header />\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={alert.file}\r\n          TransitionComponent={TransitionLeft}\r\n          autoHideDuration={3000}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {alert.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={alert.title}\r\n          autoHideDuration={3000}\r\n          TransitionComponent={TransitionLeft}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {alert.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={alert.signerA}\r\n          autoHideDuration={3000}\r\n          TransitionComponent={TransitionLeft}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {alert.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={alert.company}\r\n          autoHideDuration={3000}\r\n          TransitionComponent={TransitionLeft}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Please select company guest !!!\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={alert.signerB}\r\n          autoHideDuration={3000}\r\n          TransitionComponent={TransitionLeft}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {alert.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={alert.date}\r\n          autoHideDuration={3000}\r\n          TransitionComponent={TransitionLeft}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {alert.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={alert.location}\r\n          autoHideDuration={3000}\r\n          TransitionComponent={TransitionLeft}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {alert.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Container fluid={true}>\r\n          <div\r\n            hidden={locaA}\r\n            className=\"cursor\"\r\n            style={{\r\n              left: `${cursor.x}px`,\r\n              top: `${cursor.y}px`,\r\n            }}\r\n          />\r\n          <div\r\n            hidden={locaB}\r\n            className=\"cursor\"\r\n            style={{\r\n              left: `${cursor.x}px`,\r\n              top: `${cursor.y}px`,\r\n            }}\r\n          />\r\n          <Row>\r\n            <Col className=\"form-upload\">\r\n              <Tooltip title=\"Choose location sign A\" placement=\"top-start\">\r\n                <IconButton\r\n                  style={{\r\n                    float: \"left\",\r\n                    background: color.signerA,\r\n                    marginTop: \"20px\",\r\n                  }}\r\n                  color=\"secondary\"\r\n                  onClick={handleA}\r\n                  hidden={pageNumber === 0 ? true : false}\r\n                >\r\n                  <EditLocationIcon color=\"error\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip title=\"Choose location sign B\" placement=\"top-start\">\r\n                <IconButton\r\n                  style={{\r\n                    float: \"left\",\r\n                    background: color.signerB,\r\n                    marginLeft: \"20px\",\r\n                    marginTop: \"20px\",\r\n                  }}\r\n                  color=\"secondary\"\r\n                  onClick={handleB}\r\n                  hidden={pageNumber === 0 ? true : false}\r\n                >\r\n                  <EditLocationIcon color=\"error\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n\r\n              <div\r\n                hidden={activeStep === 0 ? false : true}\r\n                style={{ marginTop: \"15%\" }}\r\n              >\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                    float: \"left\",\r\n                  }}\r\n                >\r\n                  DOCUMENT INFORMATION\r\n                </Label>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Document type\"\r\n                  value=\"Contract\"\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <InsertDriveFileIcon fontSize=\"large\" color=\"primary\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n\r\n                <input\r\n                  accept=\"application/pdf\"\r\n                  id=\"icon-button-file\"\r\n                  type=\"file\"\r\n                  style={{ display: \"none\", width: 0 }}\r\n                  onChange={(e) => {\r\n                    if(e.target.files.length!==0){\r\n                      if (e.target.files[0].type !== \"application/pdf\") {\r\n                        setAlert({\r\n                          ...alert,\r\n                          file: true,\r\n                          message: \"Please choose file PDF...\",\r\n                        });\r\n                        setTimeout(() => {\r\n                          setAlert({\r\n                            ...alert,\r\n                            file: false,\r\n                            message: \"\",\r\n                          });\r\n                        }, 3000);\r\n                      } else if (e.target.files[0].size > 10485760) {\r\n                        setAlert({\r\n                          ...alert,\r\n                          file: true,\r\n                          message: \"File don't larger 10MB\",\r\n                        });\r\n                        setTimeout(() => {\r\n                          setAlert({\r\n                            ...alert,\r\n                            file: false,\r\n                            message: \"\",\r\n                          });\r\n                        }, 3000);\r\n                      } else{\r\n                        setFile(e.target.files);\r\n                        setFileName(e.target.files[0].name);\r\n                        setShow(true);\r\n                      }\r\n                    }               \r\n                  }}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Choose file\"\r\n                  error={alert.file}\r\n                  value={fileName}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <label htmlFor=\"icon-button-file\">\r\n                          <IconButton color=\"primary\" component=\"span\">\r\n                            <BackupIcon fontSize=\"large\" />\r\n                          </IconButton>\r\n                        </label>\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                  style={{ marginTop: \"30px\" }}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    if (file.length === 0) {\r\n                      setAlert({\r\n                        ...alert,\r\n                        file: true,\r\n                        message: \"Please choose file upload !!!\",\r\n                      });\r\n                      setTimeout(() => {\r\n                        setAlert({\r\n                          ...alert,\r\n                          file: false,\r\n                          message: \"\",\r\n                        });\r\n                      }, 3000);\r\n                    } else {\r\n                      setActiveStep(activeStep + 1);\r\n                    }\r\n                  }}\r\n                  style={{ marginTop: \"30px\" }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n              <div\r\n                hidden={activeStep === 1 ? false : true}\r\n                style={{ marginTop: \"15%\" }}\r\n              >\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                    float: \"left\",\r\n                  }}\r\n                >\r\n                  TITLE OF CONTRACT\r\n                </Label>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Title Contract\"\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  required\r\n                  error={alert.title}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <TitleIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={handleOnChange}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  hidden={activeStep === 0 ? true : false}\r\n                  color=\"primary\"\r\n                  style={{ marginTop: \"30px\" }}\r\n                  onClick={() => setActiveStep(activeStep - 1)}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    if (dataUpload.title.trim() === \"\") {\r\n                      setAlert({\r\n                        ...alert,\r\n                        title: true,\r\n                        message: \"Please input title of contract !!!\",\r\n                      });\r\n                      setTimeout(() => {\r\n                        setAlert({\r\n                          ...alert,\r\n                          title: false,\r\n                          message: \"\",\r\n                        });\r\n                      }, 3000);\r\n                    } else if (dataUpload.title.length > 255) {\r\n                      setAlert({\r\n                        ...alert,\r\n                        title: true,\r\n                        message: \"Title max length 255 characters !!!\",\r\n                      });\r\n                      setTimeout(() => {\r\n                        setAlert({\r\n                          ...alert,\r\n                          title: false,\r\n                          message: \"\",\r\n                        });\r\n                      }, 3000);\r\n                    } else {\r\n                      setActiveStep(activeStep + 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n              <div\r\n                hidden={activeStep === 2 ? false : true}\r\n                style={{ marginTop: \"15%\" }}\r\n              >\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                    float: \"left\",\r\n                    marginBottom: \"30px\",\r\n                  }}\r\n                >\r\n                  SELECT SIGNER TO SIGN CONTRACT\r\n                </Label>\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={listSinger}\r\n                  getOptionLabel={(option) => option.name}\r\n                  onChange={(event, newValue) => {\r\n                    setDataUpload({ ...dataUpload, signer: newValue });\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Signer name\"\r\n                      variant=\"outlined\"\r\n                      name=\"signer\"\r\n                      error={alert.signerA}\r\n                    />\r\n                  )}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ marginTop: \"30px\" }}\r\n                  onClick={() => setActiveStep(activeStep - 1)}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    if (dataUpload.signer === null) {\r\n                      setAlert({\r\n                        ...alert,\r\n                        signerA: true,\r\n                        message: \"Please choose one signer contract !!!\",\r\n                      });\r\n                      setTimeout(() => {\r\n                        setAlert({\r\n                          ...alert,\r\n                          signerA: false,\r\n                          message: \"\",\r\n                        });\r\n                      }, 3000);\r\n                    } else {\r\n                      setActiveStep(activeStep + 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n              <div\r\n                hidden={activeStep === 3 ? false : true}\r\n                style={{ marginTop: \"15%\" }}\r\n              >\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                    float: \"left\",\r\n                    marginBottom: \"30px\",\r\n                  }}\r\n                >\r\n                  SELECT COMPANY GUEST\r\n                </Label>\r\n                <Autocomplete\r\n                  options={listCompany}\r\n                  getOptionLabel={(option) => option.name}\r\n                  onChange={(event, newValue) => {\r\n                    setDataUpload({ ...dataUpload, company_guest: newValue });\r\n                  }}\r\n                  disableClearable={true}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Company guest\"\r\n                      variant=\"outlined\"\r\n                      name=\"company_guest\"\r\n                      error={alert.company}\r\n                    />\r\n                  )}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ marginTop: \"30px\" }}\r\n                  onClick={() => setActiveStep(activeStep - 1)}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    if (dataUpload.company_guest === \"\") {\r\n                      setAlert({\r\n                        ...alert,\r\n                        company: true,\r\n                      });\r\n                      setTimeout(() => {\r\n                        setAlert({\r\n                          ...alert,\r\n                          company: false,\r\n                        });\r\n                      }, 3000);\r\n                    } else {\r\n                      setActiveStep(activeStep + 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n              <div\r\n                hidden={activeStep === 4 ? false : true}\r\n                style={{ marginTop: \"15%\" }}\r\n              >\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                    float: \"left\",\r\n                    marginBottom: \"30px\",\r\n                  }}\r\n                >\r\n                  SELECT SIGNER GUEST\r\n                </Label>\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={listGuest}\r\n                  getOptionLabel={(option) => option.name}\r\n                  onChange={(event, newValue) => {\r\n                    setDataUpload({ ...dataUpload, signer_guest: newValue });\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Signer guest\"\r\n                      variant=\"outlined\"\r\n                      name=\"signer_guest\"\r\n                      error={alert.signerB}\r\n                    />\r\n                  )}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ marginTop: \"30px\" }}\r\n                  onClick={() => setActiveStep(activeStep - 1)}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\r\n                  color=\"primary\"\r\n                  onClick={(e) => {\r\n                    if (dataUpload.signer_guest === null) {\r\n                      setAlert({\r\n                        ...alert,\r\n                        signerB: true,\r\n                        message:\r\n                          \"Please choose one singer guest to sign contract !!!\",\r\n                      });\r\n                      setTimeout(() => {\r\n                        setAlert({\r\n                          ...alert,\r\n                          signerB: false,\r\n                          message: \"\",\r\n                        });\r\n                      }, 3000);\r\n                    } else {\r\n                      setActiveStep(activeStep + 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n              <div\r\n                hidden={activeStep === 5 ? false : true}\r\n                style={{ marginTop: \"15%\" }}\r\n              >\r\n                <Row>\r\n                  <Label\r\n                    style={{\r\n                      fontSize: \"30px\",\r\n                      fontWeight: \"bold\",\r\n                      color: \"blue\",\r\n                      float: \"left\",\r\n                      marginBottom: \"30px\",\r\n                      marginLeft: \"12px\",\r\n                    }}\r\n                  >\r\n                    VIEWER CAN VIEW CONTRACT\r\n                  </Label>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Autocomplete\r\n                      multiple\r\n                      id=\"tags-outlined\"\r\n                      options={listSinger}\r\n                      getOptionLabel={(option) => option.name}\r\n                      filterSelectedOptions\r\n                      onChange={(event, newValue) => {\r\n                        setViewer(newValue);\r\n                      }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          variant=\"outlined\"\r\n                          label=\"Select viewer\"\r\n                          placeholder=\"Viewer \"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Autocomplete\r\n                      multiple\r\n                      id=\"tags-outlined\"\r\n                      options={listGuest}\r\n                      getOptionLabel={(option) => option.name}\r\n                      filterSelectedOptions\r\n                      onChange={(event, newValue) => {\r\n                        setViewerGuest(newValue);\r\n                      }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          variant=\"outlined\"\r\n                          label=\"Select viewer\"\r\n                          placeholder=\"Viewer guest\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ marginTop: \"30px\" }}\r\n                  onClick={() => setActiveStep(activeStep - 1)}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setActiveStep(activeStep + 1);\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n              <div\r\n                hidden={activeStep === 6 ? false : true}\r\n                style={{ marginTop: \"15%\" }}\r\n              >\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                    float: \"left\",\r\n                  }}\r\n                >\r\n                  DATE EXPIRATION INVOICE\r\n                </Label>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid container justify=\"space-around\">\r\n                    <KeyboardDatePicker\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      id=\"date-picker-dialog\"\r\n                      label=\"Date expiration\"\r\n                      format=\"MM/dd/yyyy\"\r\n                      value={selectedDate}\r\n                      name=\"date\"\r\n                      error={alert.date}\r\n                      onChange={handleDateChange}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  hidden={activeStep === 0 ? true : false}\r\n                  color=\"primary\"\r\n                  style={{ marginTop: \"30px\" }}\r\n                  onClick={() => setActiveStep(activeStep - 1)}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\r\n                  color=\"primary\"\r\n                  onClick={handleContent}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Form className=\"form-doc\">\r\n                <FormGroup row>\r\n                  <div hidden={show} style={{ marginTop: \"4rem\" }}>\r\n                    <img src={demo} alt=\"demo\" width=\"600\" height=\"600\" />\r\n                  </div>\r\n                  <Paper elevation={3}>\r\n                    <Document\r\n                      file={file[0]}\r\n                      onLoadSuccess={onDocumentLoadSuccess}\r\n                      noData={false}\r\n                      onClick={(e) => {\r\n                        if (locaA === false) {\r\n                          getLocationA(e);\r\n                          setColor({ ...color, signerA: \"#3541da\" });\r\n                        } else if (locaB === false) {\r\n                          getLocationB(e);\r\n                          setColor({ ...color, signerB: \"#3541da\" });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Page pageNumber={pageNumber} />\r\n                    </Document>\r\n                  </Paper>\r\n                  <div\r\n                    hidden={pageNumber === 0 ? true : false}\r\n                    style={{ marginLeft: \"30%\" }}\r\n                  >\r\n                    <Typography\r\n                      style={{\r\n                        marginTop: \"5px\",\r\n                      }}\r\n                    >\r\n                      Page: {pageNumber}/{numPages}\r\n                    </Typography>\r\n                    <Pagination\r\n                      variant=\"outlined\"\r\n                      count={numPages}\r\n                      page={pageNumber}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n                </FormGroup>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CreateDocument;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Error\\Error.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\CreateInvoice.js",["265","266","267","268","269","270","271","272","273","274","275"],"import { Container, Form, FormGroup, Row, Col, Label } from \"reactstrap\";\r\nimport Header from \"../Nav/Header\";\r\nimport StepInvoice from \"../Sidebar/StepInvoice\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"../../css/CreateDoc.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getUser } from \"../../utils/Common\";\r\nimport demo from \"../../images/demo.png\";\r\nimport userListAPI from \"../../api/userListAPI\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport EditLocationIcon from \"@material-ui/icons/EditLocation\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport BackupIcon from \"@material-ui/icons/Backup\";\r\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Moment from \"moment\";\r\nimport {\r\n  InputAdornment,\r\n  Slide,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport TitleIcon from \"@material-ui/icons/Title\";\r\nimport { toast } from \"react-toastify\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\ntoast.configure();\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"right\" />;\r\n}\r\nfunction CreateInvoice() {\r\n  const history = useHistory();\r\n  const [listSinger, setListSigner] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [file, setFile] = useState([]);\r\n  const [color, setColor] = useState(\"#808080ad\");\r\n  const [alert, setAlert] = useState({\r\n    file: false,\r\n    title: false,\r\n    signer: false,\r\n    location: false,\r\n    date: false,\r\n    message: \"\",\r\n  });\r\n  const handleChange = (event, value) => {\r\n    setPageNumber(value);\r\n  };\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [dataUpload, setDataUpload] = useState({\r\n    title: \"\",\r\n    signer: null,\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const [position, setPosition] = useState({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const [cursor, setCursor] = useState({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const [viewer, setViewer] = useState([]);\r\n  const [numPages, setNumPages] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n    setPageNumber(1);\r\n  }\r\n  function handleOnChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setDataUpload({\r\n      ...dataUpload,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function handleContent() {\r\n    const listViewerId = [getUser().Id];\r\n    viewer.map((view) => {\r\n      listViewerId.push(view.id);\r\n    });\r\n\r\n    if (selectedDate === null) {\r\n      setAlert({\r\n        ...alert,\r\n        date: true,\r\n        message: \"Please choose date expiration invoice\",\r\n      });\r\n      setTimeout(() => {\r\n        setAlert({\r\n          ...alert,\r\n          date: false,\r\n        });\r\n      }, 3000);\r\n    } else if (\r\n      Moment(selectedDate).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z') <\r\n      Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z')\r\n    ) {\r\n      setAlert({\r\n        ...alert,\r\n        date: true,\r\n        message: \"Expiration date can't less than current date\",\r\n      });\r\n      setTimeout(() => {\r\n        setAlert({\r\n          ...alert,\r\n          date: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (position.x === 0 && position.y === 0) {\r\n      setAlert({\r\n        ...alert,\r\n        location: true,\r\n      });\r\n      setTimeout(() => {\r\n        setAlert({\r\n          ...alert,\r\n          location: false,\r\n        });\r\n      }, 3000);\r\n    } else {\r\n      history.push({\r\n        pathname: \"/invoice-confirm\",\r\n        state: {\r\n          file: file,\r\n          data: dataUpload,\r\n          date: Moment(selectedDate).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\r\n          viewer: viewer,\r\n          listViewerId: listViewerId,\r\n          signLocation: position,\r\n          numberPage: pageNumber,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    const companyId = getUser().CompanyId;\r\n    async function fetListUser() {\r\n      try {\r\n        const response = await userListAPI.getUserByCompanyId(companyId);\r\n        setListSigner(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetListUser();\r\n  }, []);\r\n  const [locaA, setLocaA] = useState(true);\r\n  function choseLocation(e) {\r\n    e.preventDefault();\r\n    setColor(\"#808080ad\");\r\n    setPosition({ x: 0, y: 0 });\r\n    setLocaA(!locaA);\r\n  }\r\n  function getLocation(e) {\r\n    setPosition({\r\n      x: e.nativeEvent.offsetX,\r\n      y: e.nativeEvent.offsetY,\r\n    });\r\n    setLocaA(true);\r\n  }\r\n  useEffect(() => {\r\n    addEventListeners();\r\n    return () => removeEventListeners();\r\n  }, []);\r\n\r\n  const addEventListeners = () => {\r\n    document.addEventListener(\"mousemove\", onMouseMove);\r\n  };\r\n\r\n  const removeEventListeners = () => {\r\n    document.removeEventListener(\"mousemove\", onMouseMove);\r\n  };\r\n  const onMouseMove = (e) => {\r\n    setCursor({ x: e.clientX, y: e.clientY });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StepInvoice activeStep={activeStep} />\r\n      <div className=\"main-panel\">\r\n        <Header />\r\n\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={alert.file}\r\n          TransitionComponent={TransitionLeft}\r\n          autoHideDuration={3000}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {alert.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={alert.title}\r\n          autoHideDuration={3000}\r\n          TransitionComponent={TransitionLeft}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {alert.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={alert.signer}\r\n          autoHideDuration={3000}\r\n          TransitionComponent={TransitionLeft}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Please select a signer to sign invoice\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={alert.date}\r\n          autoHideDuration={3000}\r\n          TransitionComponent={TransitionLeft}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {alert.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={alert.location}\r\n          autoHideDuration={3000}\r\n          TransitionComponent={TransitionLeft}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Please choose location sign to continue\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        <Container fluid={true}>\r\n          <div\r\n            hidden={locaA}\r\n            className=\"cursor\"\r\n            style={{\r\n              left: `${cursor.x}px`,\r\n              top: `${cursor.y}px`,\r\n            }}\r\n          />\r\n          <Row>\r\n            <Col className=\"form-upload\">\r\n              <Tooltip title=\"Select location sign\" placement=\"right\">\r\n                <IconButton\r\n                  style={{ float: \"left\", background: color }}\r\n                  color=\"secondary\"\r\n                  onClick={choseLocation}\r\n                  hidden={pageNumber === 0 ? true : false}\r\n                >\r\n                  <EditLocationIcon color=\"error\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <div\r\n                hidden={activeStep === 0 ? false : true}\r\n                style={{ marginTop: \"10%\" }}\r\n              >\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                    float: \"left\",\r\n                  }}\r\n                >\r\n                  DOCUMENT INFORMATION\r\n                </Label>\r\n\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Document type\"\r\n                  value=\"Invoice\"\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <InsertDriveFileIcon fontSize=\"large\" color=\"primary\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n\r\n                <input\r\n                  accept=\".pdf\"\r\n                  id=\"icon-button-file\"\r\n                  type=\"file\"\r\n                  style={{ display: \"none\", width: 0 }}\r\n                  onChange={(e) => {\r\n                    if(e.target.files.length !==0){\r\n                      if (e.target.files[0].type !== \"application/pdf\") {\r\n                        setAlert({\r\n                          ...alert,\r\n                          file: true,\r\n                          message: \"Please choose file PDF\",\r\n                        });\r\n                        setTimeout(() => {\r\n                          setAlert({\r\n                            ...alert,\r\n                            file: false,\r\n                            message: \"\",\r\n                          });\r\n                        }, 3000);\r\n                      } else if (e.target.files[0].size > 10485760) {\r\n                        setAlert({\r\n                          ...alert,\r\n                          file: true,\r\n                          message: \"File don't larger 10MB\",\r\n                        });\r\n                        setTimeout(() => {\r\n                          setAlert({\r\n                            ...alert,\r\n                            file: false,\r\n                            message: \"\",\r\n                          });\r\n                        }, 3000);\r\n                      } else {\r\n                        setFile(e.target.files);\r\n                        setFileName(e.target.files[0].name);\r\n                        setShow(true);\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Choose file\"\r\n                  error={alert.file}\r\n                  value={fileName}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <label htmlFor=\"icon-button-file\">\r\n                          <IconButton color=\"primary\" component=\"span\">\r\n                            <BackupIcon fontSize=\"large\" />\r\n                          </IconButton>\r\n                        </label>\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                  style={{ marginTop: \"30px\" }}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    if (file.length === 0) {\r\n                      setAlert({\r\n                        ...alert,\r\n                        file: true,\r\n                        message: \"Please choose file upload !!!\",\r\n                      });\r\n                      setTimeout(() => {\r\n                        setAlert({\r\n                          ...alert,\r\n                          file: false,\r\n                          message: \"\",\r\n                        });\r\n                      }, 3000);\r\n                    } else {\r\n                      setActiveStep(activeStep + 1);\r\n                    }\r\n                  }}\r\n                  style={{ marginTop: \"30px\" }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n              <div\r\n                hidden={activeStep === 1 ? false : true}\r\n                style={{ marginTop: \"10%\" }}\r\n              >\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                    float: \"left\",\r\n                  }}\r\n                >\r\n                  TITLE OF INVOICE\r\n                </Label>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Title invoice\"\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  required\r\n                  error={alert.title}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <TitleIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={handleOnChange}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  hidden={activeStep === 0 ? true : false}\r\n                  color=\"primary\"\r\n                  style={{ marginTop: \"30px\" }}\r\n                  onClick={() => setActiveStep(activeStep - 1)}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    if (dataUpload.title.trim() === \"\") {\r\n                      setAlert({\r\n                        ...alert,\r\n                        title: true,\r\n                        message: \"Please input title invoice\",\r\n                      });\r\n                      setTimeout(() => {\r\n                        setAlert({\r\n                          ...alert,\r\n                          title: false,\r\n                          message: \"\",\r\n                        });\r\n                      }, 3000);\r\n                    } else if (dataUpload.title.length > 255) {\r\n                      setAlert({\r\n                        ...alert,\r\n                        title: true,\r\n                        message: \"Title max length 255 characters !!!\",\r\n                      });\r\n                      setTimeout(() => {\r\n                        setAlert({\r\n                          ...alert,\r\n                          title: false,\r\n                          message: \"\",\r\n                        });\r\n                      }, 3000);\r\n                    } else {\r\n                      setActiveStep(activeStep + 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n              <div\r\n                hidden={activeStep === 2 ? false : true}\r\n                style={{ marginTop: \"10%\" }}\r\n              >\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                    float: \"left\",\r\n                    marginBottom: \"30px\",\r\n                  }}\r\n                >\r\n                  SELECT SIGNER TO SIGN INVOICE\r\n                </Label>\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={listSinger}\r\n                  getOptionLabel={(option) => option.name}\r\n                  onChange={(event, newValue) => {\r\n                    setDataUpload({ ...dataUpload, signer: newValue });\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Signer name\"\r\n                      variant=\"outlined\"\r\n                      name=\"signer\"\r\n                      error={alert.signer}\r\n                    />\r\n                  )}\r\n                />\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  hidden={activeStep === 0 ? true : false}\r\n                  color=\"primary\"\r\n                  style={{ marginTop: \"30px\" }}\r\n                  onClick={() => setActiveStep(activeStep - 1)}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    if (dataUpload.signer === null) {\r\n                      setAlert({\r\n                        ...alert,\r\n                        signer: true,\r\n                      });\r\n                      setTimeout(() => {\r\n                        setAlert({\r\n                          ...alert,\r\n                          signer: false,\r\n                        });\r\n                      }, 3000);\r\n                    } else {\r\n                      setActiveStep(activeStep + 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n              <div\r\n                hidden={activeStep === 3 ? false : true}\r\n                style={{ marginTop: \"10%\" }}\r\n              >\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                    float: \"left\",\r\n                    marginBottom: \"30px\",\r\n                  }}\r\n                >\r\n                  VIEWER CAN VIEW INVOICE\r\n                </Label>\r\n                <Autocomplete\r\n                  multiple\r\n                  id=\"tags-outlined\"\r\n                  options={listSinger}\r\n                  getOptionLabel={(option) => option.name}\r\n                  filterSelectedOptions\r\n                  onChange={(event, newValue) => {\r\n                    setViewer(newValue);\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      variant=\"outlined\"\r\n                      label=\"Select viewer\"\r\n                      placeholder=\"Viewer\"\r\n                    />\r\n                  )}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  hidden={activeStep === 0 ? true : false}\r\n                  color=\"primary\"\r\n                  style={{ marginTop: \"30px\" }}\r\n                  onClick={() => setActiveStep(activeStep - 1)}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setActiveStep(activeStep + 1);\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n              <div\r\n                hidden={activeStep === 4 ? false : true}\r\n                style={{ marginTop: \"10%\" }}\r\n              >\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                    float: \"left\",\r\n                  }}\r\n                >\r\n                  DATE EXPIRATION INVOICE\r\n                </Label>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid container justify=\"space-around\">\r\n                    <KeyboardDatePicker\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      id=\"date-picker-dialog\"\r\n                      label=\"Date expiration\"\r\n                      format=\"MM/dd/yyyy\"\r\n                      value={selectedDate}\r\n                      name=\"date\"\r\n                      error={alert.hidden}\r\n                      helperText={alert.text}\r\n                      onChange={handleDateChange}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  hidden={activeStep === 0 ? true : false}\r\n                  color=\"primary\"\r\n                  style={{ marginTop: \"30px\" }}\r\n                  onClick={() => setActiveStep(activeStep - 1)}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\r\n                  color=\"primary\"\r\n                  onClick={handleContent}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Form className=\"form-doc\">\r\n                <FormGroup row>\r\n                  <div hidden={show} style={{ marginTop: \"4rem\" }}>\r\n                    <img src={demo} alt=\"demo\" width=\"600\" height=\"600\" />\r\n                  </div>\r\n\r\n                  <Paper elevation={3}>\r\n                    <Document\r\n                      file={file[0]}\r\n                      onLoadSuccess={onDocumentLoadSuccess}\r\n                      onClick={(e) => {\r\n                        if (locaA === false) {\r\n                          getLocation(e);\r\n                          setColor(\"#3541da\");\r\n                        }\r\n                      }}\r\n                      noData={false}\r\n                    >\r\n                      <Page pageNumber={pageNumber} />\r\n                    </Document>\r\n                  </Paper>\r\n                  <div\r\n                    hidden={pageNumber === 0 ? true : false}\r\n                    style={{ marginLeft: \"30%\" }}\r\n                  >\r\n                    <Typography\r\n                      style={{\r\n                        marginTop: \"5px\",\r\n                      }}\r\n                    >\r\n                      Page: {pageNumber}/{numPages}\r\n                    </Typography>\r\n                    <Pagination\r\n                      variant=\"outlined\"\r\n                      count={numPages}\r\n                      page={pageNumber}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n                </FormGroup>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CreateInvoice;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Notification\\Notification.js",["276","277"],"import { Container, Input, Row, Table } from \"reactstrap\";\r\nimport Header from \"../Nav/Header\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../../css/Notification.css\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport notiAPI from \"../../api/notiAPI\";\r\nimport moment from \"moment\";\r\n\r\nfunction Notification() {\r\n  const [all, setAll] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage] = useState(15);\r\n  const indexOfLastPost = (page + 1) * rowsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\r\n  var listNoti = all\r\n    .sort((a, b) => {\r\n      return (\r\n        new Date(a.dateCreate).getTime() - new Date(b.dateCreate).getTime()\r\n      );\r\n    })\r\n    .reverse();\r\n  const currentPost = all.slice(indexOfFirstPost, indexOfLastPost);\r\n  useEffect(() => {\r\n    async function fetListNoti() {\r\n      try {\r\n        const res = await notiAPI.getAll();\r\n        setAll(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetListNoti();\r\n  }, []);\r\n  function changePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  return (\r\n    <div>\r\n      <Sidebar />\r\n      <div className=\"main-panel\">\r\n        <Header />\r\n        <Container fluid={true}>\r\n          <Row>\r\n            <p\r\n              style={{\r\n                float: \"left\",\r\n                fontSize: \"18px\",\r\n                marginTop: \"20px\",\r\n                marginLeft: 10,\r\n              }}\r\n            >\r\n              Notification management\r\n            </p>\r\n            <Button\r\n              style={{ position: \"absolute\", right: 0, marginTop: \"20px\" }}\r\n              color=\"primary\"\r\n            >\r\n              Mark all announcements as read\r\n            </Button>\r\n          </Row>\r\n          <Row>\r\n            <Input\r\n              style={{ width: 160, marginLeft: 10 }}\r\n              type=\"select\"\r\n              name=\"filter-type\"\r\n            >\r\n              <option>-Filter by type-</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </Input>\r\n            <Input\r\n              style={{ width: 160, marginLeft: 10 }}\r\n              type=\"select\"\r\n              name=\"filter-status\"\r\n            >\r\n              <option>-Filter by status-</option>\r\n              <option>All</option>\r\n              <option>Seen</option>\r\n              <option>Not seen</option>\r\n            </Input>\r\n            <TablePagination\r\n              component=\"div\"\r\n              style={{ position: \"absolute\", right: 0 }}\r\n              count={all.length}\r\n              page={page}\r\n              rowsPerPage={rowsPerPage}\r\n              onChangePage={changePage}\r\n              labelRowsPerPage=\"\"\r\n              rowsPerPageOptions={[]}\r\n            />\r\n          </Row>\r\n          <Table style={{ marginTop: 20 }}>\r\n            <tbody>\r\n              {all.map((row) => (\r\n                <tr\r\n                  key={row.id}\r\n                  style={{\r\n                    background: row.status === 0 ? \"#b3aeae75\" : \"white\",\r\n                  }}\r\n                >\r\n                  <td>\r\n                    <Row style={{ fontWeight: \"bold\", marginLeft: 1 }}>\r\n                      {row.content}\r\n                    </Row>\r\n                    <Row style={{ marginLeft: 10 }}>{row.title}</Row>\r\n                    <Row style={{ marginLeft: 10 }}>\r\n                      <Link to=\"/\">View detail</Link>\r\n                    </Row>\r\n                  </td>\r\n                  <td style={{ position: \"absolute\", right: 10 }}>\r\n                    {moment(row.createdDate).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Notification;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Profile\\Profile.js",["278"],"import { Button, Col, Container, Form, FormGroup, Label, Row} from \"reactstrap\";\r\nimport Header from \"../Nav/Header\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport companyListAPI from '../../api/companyListAPI';\r\nimport '../../css/Profile.css';\r\nimport { getUser, removeUserSession } from \"../../utils/Common\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport departmentAPI from \"../../api/departmentAPI\";\r\n\r\nconst user = getUser();\r\nfunction Profile() {\r\n    const history = useHistory();\r\n    const [avatar, setAvatar] = useState(getUser().Avatar);\r\n    const [company, setCompany] = useState('');\r\n    const [department, setDepartment] = useState('');\r\n    function logout() {\r\n        removeUserSession();\r\n        history.push('/');\r\n    }\r\n    useEffect(()=>{\r\n        async function fetCompany() {\r\n            const companyId = user.CompanyId;\r\n            try {\r\n                const response = await companyListAPI.getCompanyById(companyId);\r\n                setCompany(response.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetCompany();\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        async function fetDepartment() {\r\n            const id = user.DepartmentId;\r\n            try {\r\n                const response = await departmentAPI.getDepartmentById(id);\r\n                setDepartment(response.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetDepartment();\r\n    },[]);\r\n    return(\r\n        <div>\r\n            <Sidebar/>\r\n            <div className=\"main-panel\">\r\n                <Header/>\r\n                <Container fluid={true}>\r\n                    <Row className=\"roww\">\r\n                        <Col>\r\n                            <img style={{borderRadius:'50%'}} src={avatar} alt=\"\" width=\"150px\" height=\"150px\"/>\r\n                            <br/>\r\n                            <Button color=\"link\">Change Password</Button>\r\n                            <br/>\r\n                            <Button color=\"link\" onClick={logout}>Logout</Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form className=\"infor\">\r\n                                <FormGroup row>\r\n                                    <Label style={{float:'left',fontSize:'25px', fontWeight:'bold'}}>Personal information</Label>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label>Name</Label>\r\n                                    <Col style={{marginLeft:'185px'}}>\r\n                                        <Label style={{float:'left'}}>{user.Name}</Label>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label>Phone number</Label>\r\n                                    <Col style={{marginLeft:'121px'}}>\r\n                                        <Label style={{float:'left'}}>{user.Phone}</Label>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label>Email</Label>\r\n                                    <Col style={{marginLeft:'185px'}}>\r\n                                        <Label style={{float:'left'}}>{user.Email}</Label>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label>Company name</Label>\r\n                                    <Col style={{marginLeft:'111px'}}>\r\n                                        <Label style={{float:'left'}}>{company.name}</Label>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label style={{float:'left'}}>Department</Label>\r\n                                    <Col style={{marginLeft:'138px'}}>\r\n                                        <Label style={{float:'left'}}>{department.name}</Label>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label>Address</Label>\r\n                                    <Col style={{marginLeft:'164px'}}>\r\n                                        <Label style={{float:'left'}}>{user.Address}</Label>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                \r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Dashboard\\Dashboard.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\DetailDocument\\InvoiceDetail.js",["279","280"],"import { Container, Form, FormGroup, Row, Col, Label} from \"reactstrap\";\r\nimport Header from \"../Nav/Header\";\r\nimport StepDetail from \"../Sidebar/StepDetail\";\r\nimport PDF from \"../PDF/PDF\";\r\nimport notsigned from \"../../images/status.png\";\r\nimport done from \"../../images/invoicecompleted.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {useParams } from \"react-router-dom\";\r\nimport userListAPI from \"../../api/userListAPI\";\r\nimport invoiceAPI from \"../../api/invoiceAPI\";\r\nimport GetCreater from \"../GetData/GetCreater\";\r\nimport fileDownload from \"js-file-download\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport { InputAdornment, TablePagination } from \"@material-ui/core\";\r\nimport TitleIcon from \"@material-ui/icons/Title\";\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport \"date-fns\";\r\nimport Moment from \"moment\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport GetEmail from \"../GetData/GetEmail\";\r\nimport GetPhone from \"../GetData/GetPhone\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: theme.palette.common.black,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction InvoiceDetail() {\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const [document, setDocument] = useState([]);\r\n  const [signer, setSigner] = useState([]);\r\n  const [viewer, setViewer] = useState([]);\r\n  const [signerId, setSignerId] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage] = useState(2);\r\n  const indexOfLastPost = (page + 1) * rowsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\r\n  const currentPosts = viewer.slice(indexOfFirstPost, indexOfLastPost);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const param = useParams();\r\n  useEffect(() => {\r\n    async function getInvoiceById() {\r\n      try {\r\n        const res = await invoiceAPI.getInvoiceById(param.id);\r\n        setDocument(res.data);\r\n        setViewer(res.data.viewers);\r\n        setActiveStep(res.data.status + 1);\r\n        setSignerId(res.data.signerId);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getInvoiceById();\r\n  }, []);\r\n  useEffect(() => {\r\n    async function getSigner() {\r\n      try {\r\n        const res = await userListAPI.getUserById(signerId);\r\n        setSigner(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getSigner();\r\n  }, [signerId]);\r\n\r\n  return (\r\n    <div>\r\n      <StepDetail activeStep={activeStep} />\r\n      <div className=\"main-panel\">\r\n        <Header />\r\n        <Container fluid={true}>\r\n          <Row>\r\n            <Col>\r\n              <Paper style={{ marginTop: \"20px\" }} elevation={3}>\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                  }}\r\n                >\r\n                  Invoice Content\r\n                </Label>\r\n                <br/>\r\n                <Label style={{marginTop:'10px'}}>\r\n                  <img hidden={document.status===3 ? false : true} src={done} alt=\"\" />\r\n                  <img hidden={document.status!==3 ? false : true} src={notsigned} alt=\"\" />\r\n                </Label>\r\n\r\n                <TextField               \r\n                  variant=\"standard\"\r\n                  value={document.title}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <TitleIcon color=\"primary\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  \r\n                  value={signer.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BorderColorIcon color=\"primary\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n\r\n                <TableContainer style={{ marginTop: \"20px\", padding: \"10px\" }}>\r\n                  <Table aria-label=\"customized table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell>Viewer name</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">Email</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">\r\n                          Phone number\r\n                        </StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {currentPosts.map((row) => (\r\n                        <StyledTableRow key={row.viewerId}>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            <GetCreater id={row.viewerId} />\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            <GetEmail id={row.viewerId} />\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            <GetPhone id={row.viewerId} />\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={viewer.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  labelRowsPerPage=\"\"\r\n                  onChangePage={handleChangePage}\r\n                  rowsPerPageOptions={[]}\r\n                />\r\n                <TextField\r\n                  label=\"Date expiration\"\r\n                  value={Moment(document.dateSign).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <EventAvailableIcon color=\"primary\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </Paper>\r\n              <Button\r\n                hidden={activeStep >= 3 ? false : true}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                style={{ marginTop: \"20px\", marginRight: \"10px\" }}\r\n                startIcon={<SaveIcon />}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  axios\r\n                    .get(document.invoiceURL, {\r\n                      responseType: \"blob\",\r\n                    })\r\n                    .then(function (res) {\r\n                      fileDownload(res.data, document.title + \".pdf\");\r\n                    })\r\n                    .catch(function (error) {\r\n                      console.log(error);\r\n                    });\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button\r\n                hidden={activeStep >= 3 ? false : true}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                style={{ marginTop: \"20px\" }}\r\n                startIcon={<PrintIcon />}\r\n              >\r\n                Print\r\n              </Button>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form className=\"form-doc\">\r\n                <FormGroup row>\r\n                  <div>\r\n                    <PDF pdf={document.invoiceURL} />\r\n                  </div>\r\n                </FormGroup>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default InvoiceDetail;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\DetailDocument\\ContractDetail.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Login\\Login.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CompanyRegister\\CompanyRegister.js",["281","282","283","284","285","286","287","288","289","290","291","292","293","294","295"],"import React, { useState } from \"react\";\r\nimport \"../../css/CompanyRegister.css\";\r\nimport register from \"../../images/register.png\";\r\nimport { Col, Container, Form, Label, Row } from \"reactstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SidebarAdmin from \"../Sidebar/SidebarAdmin\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Slide,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport Moment from \"moment\";\r\nimport md5 from \"md5\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { getUser } from \"../../utils/Common\";\r\nimport companyListAPI from \"../../api/companyListAPI\";\r\nimport departmentAPI from \"../../api/departmentAPI\";\r\nimport userListAPI from \"../../api/userListAPI\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router\";\r\nimport validateAPI from \"../../api/validateAPI\";\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"right\" />;\r\n}\r\n\r\nfunction CompanyRegister() {\r\n  const [companyRegister, setCompanyRegister] = useState({\r\n    company_name: \"\",\r\n    address: \"\",\r\n    phone: null,\r\n    manager_name: \"\",\r\n    manager_email: \"\",\r\n  });\r\n  const history = useHistory();\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [error, setError] = useState({\r\n    company_name: false,\r\n    address: false,\r\n    phone: false,\r\n    manager_name: false,\r\n    email: false,\r\n    message: \"\",\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setCompanyRegister({\r\n      ...companyRegister,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const company = {\r\n      name: companyRegister.company_name,\r\n      phone: \"+84\" + companyRegister.phone.substring(1),\r\n      address: companyRegister.address,\r\n      dateCreate: Moment(new Date()).format(\r\n        \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\r\n      ),\r\n      creatorId: getUser().Id,\r\n      status: 1,\r\n    };\r\n    companyListAPI\r\n      .addCompany(company)\r\n      .then(function (res) {\r\n        const param = {\r\n          name: \"Manager\",\r\n          companyId: res.data.id,\r\n          creatorId: getUser().Id,\r\n          dateCreate: Moment(new Date()).format(\r\n            \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\r\n          ),\r\n        };\r\n        departmentAPI\r\n          .addDepartment(param)\r\n          .then(function (department) {\r\n            const sub = {\r\n              name: \"Admin\",\r\n              departmentId: department.data.id,\r\n              companyId: res.data.id,\r\n              creatorId: getUser().Id,\r\n              dateCreate: Moment(new Date()).format(\r\n                \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\r\n              ),\r\n            };\r\n            departmentAPI.addSubDepartment(sub).then(function (subdepartment) {\r\n              const user = {\r\n                name: companyRegister.manager_name,\r\n                avatar: \"\",\r\n                email: companyRegister.manager_email,\r\n                password: md5(\"123Aabc\").trim().toString(),\r\n                phone: \"+84\" + companyRegister.phone.substring(1),\r\n                address: companyRegister.address,\r\n                dateCreate: Moment(new Date()).format(\r\n                  \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\r\n                ),\r\n                creatorId: getUser().Id,\r\n                subDepartmentId: subdepartment.data.id,\r\n                departmentId: department.data.id,\r\n                companyId: res.data.id,\r\n                role: \"1\",\r\n                status: 1,\r\n              };\r\n              userListAPI\r\n                .addUser(user)\r\n                .then(function (newUser) {\r\n                  const data = {\r\n                    id: res.data.id,\r\n                    phone: \"+84\" + companyRegister.phone.substring(1),\r\n                    address: companyRegister.address,\r\n                    dateCreate: Moment(new Date()).format(\r\n                      \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\r\n                    ),\r\n                    adminId: newUser.data.id,\r\n                    status: 1,\r\n                  };\r\n                  companyListAPI.updateCompany(data).then(function () {\r\n                    toast.success(\"Add department successfully\", {\r\n                      position: toast.POSITION.TOP_CENTER,\r\n                    });\r\n                    history.push(\"/company-list\");\r\n                  });\r\n                })\r\n                .catch(function (error) {\r\n                  console.log(error);\r\n                });\r\n            });\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n  function handleConfirm(e) {\r\n    e.preventDefault();\r\n    var pattern = new RegExp(\r\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n    );\r\n    if (companyRegister.company_name.length > 255) {\r\n      setError({\r\n        ...error,\r\n        company_name: true,\r\n        message: \"Company name max length 255 characters\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          company_name: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (companyRegister.company_name === \"\") {\r\n      setError({\r\n        ...error,\r\n        company_name: true,\r\n        message: \"Company name must not empty\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          company_name: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (companyRegister.address.length > 255) {\r\n      setError({\r\n        ...error,\r\n        address: true,\r\n        message: \"Address max length 255 characters\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          address: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (companyRegister.phone === null) {\r\n      setError({\r\n        ...error,\r\n        phone: true,\r\n        message: \"Phone number must not empty\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          phone: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (!companyRegister.phone.trim().match(\"^[0-9]{10}$\")) {\r\n      setError({\r\n        ...error,\r\n        phone: true,\r\n        message: \"Invalid phone number\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          phone: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (!pattern.test(companyRegister.manager_email)) {\r\n      setError({\r\n        ...error,\r\n        email: true,\r\n        message: \"Invalid email\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          email: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (companyRegister.manager_email === \"\") {\r\n      setError({\r\n        ...error,\r\n        email: true,\r\n        message: \"Please enter email\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          email: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (companyRegister.manager_name.length > 255) {\r\n      setError({\r\n        ...error,\r\n        manager_name: true,\r\n        message: \"Manager name max length 255 characters\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          manager_name: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (companyRegister.manager_name === \"\") {\r\n      setError({\r\n        ...error,\r\n        manager_name: true,\r\n        message: \"Manager name must not empty\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          manager_name: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else {\r\n      const phone = \"84\" + companyRegister.phone.substring(1);\r\n      validateAPI\r\n        .checkEmail(companyRegister.manager_email)\r\n        .then(function () {\r\n          validateAPI\r\n            .checkPhone(phone)\r\n            .then(function () {\r\n              setConfirm(true);\r\n            })\r\n            .catch(function () {\r\n              setError({\r\n                ...error,\r\n                phone: true,\r\n                message: \"Phone number is exist in system\",\r\n              });\r\n              setTimeout(() => {\r\n                setError({\r\n                  ...error,\r\n                  phone: false,\r\n                  message: \"\",\r\n                });\r\n              }, 3000);\r\n            });\r\n        })\r\n        .catch(function () {\r\n          setError({\r\n            ...error,\r\n            email: true,\r\n            message: \"Email is exist in system\",\r\n          });\r\n          setTimeout(() => {\r\n            setError({\r\n              ...error,\r\n              email: false,\r\n              message: \"\",\r\n            });\r\n          }, 3000);\r\n        });\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <SidebarAdmin />\r\n      <div className=\"main-panel\">\r\n        <Container fluid={true}>\r\n          <Snackbar\r\n            open={error.company_name}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            TransitionComponent={TransitionLeft}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error.message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <Snackbar\r\n            open={error.address}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            TransitionComponent={TransitionLeft}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error.message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <Snackbar\r\n            open={error.phone}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            TransitionComponent={TransitionLeft}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error.message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <Snackbar\r\n            open={error.manager_name}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            TransitionComponent={TransitionLeft}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error.message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <Snackbar\r\n            open={error.email}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            TransitionComponent={TransitionLeft}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error.message}\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          <div>\r\n            <img style={{ marginTop: \"20px\" }} src={register} alt=\"\" />\r\n          </div>\r\n          <Form\r\n            style={{\r\n              width: \"60%\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              marginTop: 50,\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            <Row>\r\n              <Col sm={3}>\r\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\r\n                  Company Name\r\n                </Label>\r\n              </Col>\r\n              <Col>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  name=\"company_name\"\r\n                  required\r\n                  size=\"small\"\r\n                  error={error.company_name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 20 }}>\r\n              <Col sm={3}>\r\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\r\n                  Manager Name\r\n                </Label>\r\n              </Col>\r\n              <Col>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  name=\"manager_name\"\r\n                  required\r\n                  error={error.manager_name}\r\n                  size=\"small\"\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 20 }}>\r\n              <Col sm={3}>\r\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\r\n                  Phone Number\r\n                </Label>\r\n              </Col>\r\n              <Col>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  type=\"phone\"\r\n                  name=\"phone\"\r\n                  required\r\n                  size=\"small\"\r\n                  error={error.phone}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 20 }}>\r\n              <Col sm={3}>\r\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\r\n                  Manager Email\r\n                </Label>\r\n              </Col>\r\n              <Col>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  type=\"email\"\r\n                  name=\"manager_email\"\r\n                  required\r\n                  error={error.email}\r\n                  size=\"small\"\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 20 }}>\r\n              <Col sm={3}>\r\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\r\n                  Street Address\r\n                </Label>\r\n              </Col>\r\n              <Col>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  required\r\n                  error={error.address}\r\n                  size=\"small\"\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Button\r\n            style={{ marginTop: 20 }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={handleConfirm}\r\n          >\r\n            Verification\r\n          </Button>\r\n          <Dialog open={confirm} fullWidth>\r\n            <DialogTitle>Confirm Information</DialogTitle>\r\n            <DialogContent>\r\n              <Form style={{ textAlign: \"left\", fontSize: 18 }}>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <Label>Company Name:</Label>\r\n                  </Col>\r\n                  <Col>\r\n                    <Label>{companyRegister.company_name}</Label>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <Label>Manager Name:</Label>\r\n                  </Col>\r\n                  <Col>\r\n                    <Label>{companyRegister.manager_name}</Label>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <Label>Phone Number:</Label>\r\n                  </Col>\r\n                  <Col>\r\n                    <Label>{companyRegister.phone}</Label>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <Label>Manager Email:</Label>\r\n                  </Col>\r\n                  <Col>\r\n                    <Label>{companyRegister.manager_email}</Label>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <Label>Street Address:</Label>\r\n                  </Col>\r\n                  <Col>\r\n                    <Label>{companyRegister.address}</Label>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={() => setConfirm(false)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyRegister;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CompanyList\\CompanyList.js",["296","297","298"],"import {\r\n  Container,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Table,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport companyListAPI from \"../../api/companyListAPI\";\r\nimport SidebarAdmin from \"../Sidebar/SidebarAdmin\";\r\nimport \"../../css/CompanyList.css\";\r\nimport GetAdminCompany from \"../GetAdminCompany/GetAdminCompany\";\r\nimport Moment from \"moment\";\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\r\n\r\nfunction CompanyList() {\r\n  const [filter, setFilter] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const toggle = () => setFilter((prevState) => !prevState);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [postList, setPostList] = useState([]);\r\n  const indexOfLastPost = (page + 1) * rowsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\r\n  const currentPosts = postList.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  function changePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  useEffect(() => {\r\n    async function fetListData() {\r\n      try {\r\n        const response = await companyListAPI.getAll();\r\n        setPostList(response.data);\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetListData();\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2000);\r\n  }, []);\r\n  function Active() {\r\n    setPostList(\r\n      data.filter((data) => {\r\n        if (data.status === 1) {\r\n          return data;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  function listDeactive() {\r\n    setPostList(\r\n      data.filter((data) => {\r\n        if (data.status !== 1) {\r\n          return data;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  function All() {\r\n    setPostList(data);\r\n  }\r\n  return (\r\n    <div>\r\n      <SidebarAdmin />\r\n      <div className=\"main-panel\">\r\n        <Container fluid={true}>\r\n          <div className=\"search_form\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col xs={10}>\r\n                    <Input\r\n                      type=\"search\"\r\n                      className=\"form-control rounded\"\r\n                      value={search}\r\n                      onChange={(event) => {\r\n                        setSearch(event.target.value);\r\n                      }}\r\n                      placeholder=\"Search by name company\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs={2}>\r\n                    <Dropdown isOpen={filter} toggle={toggle}>\r\n                      <DropdownToggle color=\"primary\" caret>\r\n                        Filter\r\n                      </DropdownToggle>\r\n                      <DropdownMenu>\r\n                        <DropdownItem onClick={All}>All</DropdownItem>\r\n                        <DropdownItem onClick={Active}>Active</DropdownItem>\r\n                        <DropdownItem onClick={listDeactive}>\r\n                          Deactive\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n          {loading ? (\r\n            <ScaleLoader color={\"#2512DF\"} loading={loading} size={35} />\r\n          ) : (\r\n            <div hidden={search !== \"\" ? true : false}>\r\n              <TablePagination\r\n                component=\"div\"\r\n                count={postList.length}\r\n                page={page}\r\n                onChangePage={changePage}\r\n                rowsPerPage={rowsPerPage}\r\n                labelRowsPerPage=\"\"\r\n                rowsPerPageOptions={[]}\r\n              />\r\n              <Table hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>No</th>\r\n                    <th>Company Name</th>\r\n                    <th>Manager Name</th>\r\n                    <th>Date Created</th>\r\n                    <th>Status</th>\r\n                    <th>Phone Number</th>\r\n                    <th>Edits/Details</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentPosts.map((data, key) => (\r\n                    <tr key={key}>\r\n                      <th>{data.id}</th>\r\n                      <td>{data.name}</td>\r\n                      <td>\r\n                        <GetAdminCompany id={data.adminId} />\r\n                      </td>\r\n                      <td>\r\n                        {Moment(data.dateCreate).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                      </td>\r\n                      <td>\r\n                        {data.status === 1 ? (\r\n                          <p style={{ color: \"green\" }}>Active</p>\r\n                        ) : (\r\n                          <p style={{ color: \"red\" }}>Deactive</p>\r\n                        )}\r\n                      </td>\r\n                      <td>{data.phone}</td>\r\n                      <td>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/edit-company\",\r\n                            state: data,\r\n                          }}\r\n                        >\r\n                          Edit/Detail\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n          <Table hidden={search === \"\" ? true : false}>\r\n            <thead>\r\n              <tr>\r\n                <th>No</th>\r\n                <th>Company Name</th>\r\n                <th>Manager Name</th>\r\n                <th>Date Created</th>\r\n                <th>Status</th>\r\n                <th>Phone Number</th>\r\n                <th>Edits/Details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data\r\n                .filter((data) => {\r\n                  if (data.name.toLowerCase().includes(search.toLowerCase())) {\r\n                    return data;\r\n                  }\r\n                })\r\n                .map((data) => (\r\n                  <tr key={data.id}>\r\n                    <th>{data.id}</th>\r\n                    <td>{data.name}</td>\r\n                    <td>\r\n                      <GetAdminCompany id={data.adminId} />\r\n                    </td>\r\n                    <td>{data.dateCreate}</td>\r\n                    <td>\r\n                      {data.status === 1 ? (\r\n                        <p style={{ color: \"green\" }}>Active</p>\r\n                      ) : (\r\n                        <p style={{ color: \"red\" }}>Deactive</p>\r\n                      )}\r\n                    </td>\r\n                    <td>{data.phone}</td>\r\n                    <td>\r\n                      <Link\r\n                        to={{\r\n                          pathname: \"/edit-company\",\r\n                          state: data,\r\n                        }}\r\n                      >\r\n                        Edit/Detail\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CompanyList;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Document\\Document.js",["299","300","301","302","303","304","305","306","307"],"import {\r\n  Container,\r\n  Row,\r\n  FormGroup,\r\n  Col,\r\n  Table,\r\n  Label,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport Header from \"../Nav/Header\";\r\nimport \"../../css/Document.css\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport { forwardRef, useEffect, useState } from \"react\";\r\nimport notsigned from \"../../images/status.png\";\r\nimport done from \"../../images/true.png\";\r\nimport invoicecompleted from \"../../images/invoicecompleted.png\";\r\nimport choo from \"../../images/choo.png\";\r\nimport StepDoc from \"../Sidebar/StepDoc\";\r\nimport invoiceAPI from \"../../api/invoiceAPI\";\r\nimport GetCreater from \"../GetData/GetCreater\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport contractAPI from \"../../api/contractAPI\";\r\nimport { getUser } from \"../../utils/Common\";\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Moment from \"moment\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { InputAdornment } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport StepDoc2 from \"../Sidebar/StepDoc2\";\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\nfunction Document() {\r\n  const history = useHistory();\r\n  let [loading, setLoading] = useState(true);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [dele, setDel] = useState(false);\r\n  const toogle = () => setIsOpen(!isOpen);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [postList, setPostList] = useState([]);\r\n  const [listAllDocument, setListAllDocument] = useState([]);\r\n  const [listInvoice, setListInvoice] = useState([]);\r\n  const [listContract, setListContract] = useState([]);\r\n  const [find, setFind] = useState(\"\");\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage] = useState(10);\r\n  const indexOfLastPost = (page + 1) * rowsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\r\n  var post = postList\r\n    .sort((a, b) => {\r\n      return (\r\n        new Date(a.dateCreate).getTime() - new Date(b.dateCreate).getTime()\r\n      );\r\n    })\r\n    .reverse();\r\n  const currentPosts = post.slice(indexOfFirstPost, indexOfLastPost);\r\n  function changePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const [value, setValue] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getListDocument() {\r\n      try {\r\n        if (getUser().Role === \"1\") {\r\n          await contractAPI\r\n            .getContractByCompanyId(getUser().CompanyId)\r\n            .then(function (contract) {\r\n              invoiceAPI\r\n                .getInvoiceByCompanyId(getUser().CompanyId)\r\n                .then(function (invoice) {\r\n                  const list = [...contract.data, ...invoice.data];\r\n                  setListAllDocument(list);\r\n                  setPostList(list);\r\n                  setListInvoice(invoice.data);\r\n                  setListContract(contract.data);\r\n                })\r\n                .catch(function (error) {\r\n                  console.log(error);\r\n                });\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else {\r\n          await invoiceAPI\r\n            .getInvoiceByViewerId(getUser().Id)\r\n            .then(function (res1) {\r\n              invoiceAPI\r\n                .getInvoiceBySignerId(getUser().Id)\r\n                .then(function (res2) {\r\n                  contractAPI\r\n                    .getContractByViewerId(getUser().Id)\r\n                    .then(function (res3) {\r\n                      contractAPI\r\n                        .getContractBySignerId(getUser().Id)\r\n                        .then(function (res4) {\r\n                          const list = [\r\n                            ...res1.data,\r\n                            ...res2.data,\r\n                            ...res3.data,\r\n                            ...res4.data,\r\n                          ];\r\n                          const listInvoice1 = [...res1.data, ...res2.data];\r\n                          const listContract1 = [...res3.data, ...res4.data];\r\n                          setListAllDocument(list);\r\n                          setPostList(list);\r\n                          setListInvoice(listInvoice1);\r\n                          setListContract(listContract1);\r\n                        })\r\n                        .catch(function (error) {\r\n                          console.log(error);\r\n                        });\r\n                    })\r\n                    .catch(function (error) {\r\n                      console.log(error);\r\n                    });\r\n                })\r\n                .catch(function (error) {\r\n                  console.log(error);\r\n                });\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getListDocument();\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  function AddContract() {\r\n    history.push(\"/contract\");\r\n  }\r\n  function AddInvoice() {\r\n    history.push(\"/invoice\");\r\n  }\r\n\r\n  function All() {\r\n    setPage(0);\r\n    setPostList(listAllDocument);\r\n    setValue(0);\r\n  }\r\n  function Invoice() {\r\n    setPage(0);\r\n    setPostList(\r\n      listAllDocument.filter((data) => {\r\n        if (data.invoiceURL) {\r\n          return data;\r\n        }\r\n      })\r\n    );\r\n    setValue(0);\r\n  }\r\n  function Contract() {\r\n    setPage(0);\r\n    setPostList(\r\n      listAllDocument.filter((data) => {\r\n        if (data.contractUrl) {\r\n          return data;\r\n        }\r\n      })\r\n    );\r\n\r\n    setValue(0);\r\n  }\r\n  function Signed() {\r\n    setPage(0);\r\n    if (filter === \"1\") {\r\n      setPostList(\r\n        listAllDocument.filter((data) => {\r\n          if (data.status === 3) {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n    } else if (filter === \"2\") {\r\n      setPostList(\r\n        listContract.filter((data) => {\r\n          if (data.status === 3) {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      setPostList(\r\n        listInvoice.filter((data) => {\r\n          if (data.status === 3) {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n  function NotSigned() {\r\n    setPage(0);\r\n    if (filter === \"1\") {\r\n      setPostList(\r\n        listAllDocument.filter((data) => {\r\n          if (data.status < 3) {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n    } else if (filter === \"2\") {\r\n      setPostList(\r\n        listContract.filter((data) => {\r\n          if (data.status < 3) {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      setPostList(\r\n        listInvoice.filter((data) => {\r\n          if (data.status < 3) {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Sidebar />\r\n      <Dialog open={isOpen} onClose={toogle} TransitionComponent={Transition}>\r\n        <DialogContent>\r\n          <img\r\n            style={{ marginLeft: \"20%\" }}\r\n            src={choo}\r\n            alt=\"\"\r\n            width=\"280px\"\r\n            height=\"280px\"\r\n          />\r\n        </DialogContent>\r\n        <DialogTitle>\r\n          Please select the type of document you want create?\r\n        </DialogTitle>\r\n        <DialogActions style={{ paddingBottom: \"30px\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ marginRight: \"15%\" }}\r\n            onClick={AddContract}\r\n          >\r\n            Contract\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ marginRight: \"20%\", width: \"104px\" }}\r\n            onClick={AddInvoice}\r\n          >\r\n            Invoice\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"main-content\">\r\n        <Header />\r\n        <Container fluid={true}>\r\n          <div className=\"form-create\">\r\n            <FormGroup row>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                onClick={toogle}\r\n              >\r\n                +Create\r\n              </Button>\r\n              <Col>\r\n                <Row>\r\n                  <TextField\r\n                    name=\"search\"\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    value={find}\r\n                    placeholder=\"Search by name document\"\r\n                    onChange={(event) => {\r\n                      setFind(event.target.value);\r\n                    }}\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    style={{ marginLeft: 20 }}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <SearchIcon color=\"primary\" />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                </Row>\r\n              </Col>\r\n\r\n              <FormControl\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                style={{ marginLeft: 20 }}\r\n              >\r\n                <Select\r\n                  defaultValue={1}\r\n                  onChange={(e) => setFilter(e.target.value)}\r\n                >\r\n                  <MenuItem onClick={All} value=\"1\">\r\n                    All\r\n                  </MenuItem>\r\n                  <MenuItem onClick={Contract} value=\"2\">\r\n                    Contract\r\n                  </MenuItem>\r\n                  <MenuItem onClick={Invoice} value=\"3\">\r\n                    Invoice\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <Col>\r\n                <Row>\r\n                  <Paper\r\n                    square\r\n                    elevation={0}\r\n                    style={{ position: \"absolute\", right: 0, height: 40 }}\r\n                  >\r\n                    <Tabs\r\n                      value={value}\r\n                      indicatorColor=\"none\"\r\n                      textColor=\"primary\"\r\n                      onChange={handleChange}\r\n                    >\r\n                      <Tab value={3} onClick={Signed} label=\"Signed\" />\r\n                      <Tab value={2} onClick={NotSigned} label=\"Not signed\" />\r\n                    </Tabs>\r\n                  </Paper>\r\n                </Row>\r\n              </Col>\r\n            </FormGroup>\r\n            <TablePagination\r\n              hidden={find !== \"\" ? true : false}\r\n              component=\"div\"\r\n              count={postList.length}\r\n              page={page}\r\n              onChangePage={changePage}\r\n              rowsPerPage={rowsPerPage}\r\n              labelRowsPerPage=\"\"\r\n              rowsPerPageOptions={[]}\r\n            />\r\n          </div>\r\n          {loading ? (\r\n            <ScaleLoader color={\"#2512DF\"} loading={loading} size={40} />\r\n          ) : (\r\n            <Table hidden={find !== \"\" ? true : false} hover>\r\n              <tbody>\r\n                {currentPosts.map((doc, key) => (\r\n                  <tr key={key}>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (doc.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        } else if (doc.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}>Creator name</Label>\r\n                      <br />\r\n                      <Label>\r\n                        <GetCreater id={doc.creatorId} />\r\n                      </Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (doc.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        } else if (doc.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}>\r\n                        Title document\r\n                      </Label>\r\n                      <br />\r\n                      <Label className=\"demo\">{doc.title}</Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (doc.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        } else if (doc.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}>Status</Label>\r\n                      <br />\r\n                      <Label className=\"step\">\r\n                        {doc.contractUrl ? (\r\n                          <StepDoc activeStep={doc.status + 1} />\r\n                        ) : (\r\n                          <StepDoc2 activeStep={doc.status + 1} />\r\n                        )}\r\n                      </Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (doc.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        } else if (doc.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label></Label>\r\n                      <br />\r\n                      <Label>\r\n                        {doc.invoiceURL ? (\r\n                          <img\r\n                            hidden={doc.status >= 3 ? false : true}\r\n                            src={invoicecompleted}\r\n                            alt=\"\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            hidden={doc.status >= 3 ? false : true}\r\n                            src={done}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        <img\r\n                          hidden={doc.status < 3 ? false : true}\r\n                          src={notsigned}\r\n                          alt=\"\"\r\n                        />\r\n                      </Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (doc.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        } else if (doc.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}></Label>\r\n                      <br />\r\n                      <Label>\r\n                        {Moment(doc.dateCreate).format(\"DD/MM/YYYY\")}\r\n                      </Label>\r\n                    </td>\r\n                    <td>\r\n                      <Label></Label>\r\n                      <br />\r\n                      <Label hidden={doc.status < 3 ? false : true}>\r\n                        <DeleteIcon\r\n                          onClick={() => setDel(true)}\r\n                          fontSize=\"default\"\r\n                        />\r\n                      </Label>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n          <Table hover hidden={find === \"\" ? true : false}>\r\n            <tbody>\r\n              {postList\r\n                .filter((data) => {\r\n                  if (data.title.toLowerCase().includes(find.toLowerCase())) {\r\n                    return data;\r\n                  }\r\n                })\r\n                .map((data, key) => (\r\n                  <tr key={key}>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (data.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        } else if (data.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}>Creator name</Label>\r\n                      <br />\r\n                      <Label>\r\n                        <GetCreater id={data.creatorId} />\r\n                      </Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (data.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        } else if (data.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}>\r\n                        Title document\r\n                      </Label>\r\n                      <br />\r\n                      <Label className=\"demo\">{data.title}</Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (data.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        } else if (data.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}>Status</Label>\r\n                      <br />\r\n                      <Label className=\"step\">\r\n                        <StepDoc activeStep={data.status + 1} />\r\n                      </Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (data.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        } else if (data.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label></Label>\r\n                      <br />\r\n                      <Label>\r\n                        <img\r\n                          hidden={data.status >= 3 ? false : true}\r\n                          src={done}\r\n                          alt=\"\"\r\n                        />\r\n                        <img\r\n                          hidden={data.status < 3 ? false : true}\r\n                          src={notsigned}\r\n                          alt=\"\"\r\n                        />\r\n                      </Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (data.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        } else if (data.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}></Label>\r\n                      <br />\r\n                      <Label>\r\n                        {Moment(data.dateCreate).format(\"DD/MM/YYYY\")}\r\n                      </Label>\r\n                    </td>\r\n                    <td>\r\n                      <Label></Label>\r\n                      <br />\r\n                      <Label hidden={data.status < 3 ? false : true}>\r\n                        <DeleteIcon\r\n                          onClick={() => setDel(true)}\r\n                          fontSize=\"default\"\r\n                        />\r\n                      </Label>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n          <Modal isOpen={dele}>\r\n            <ModalHeader>Are you sure delete document?</ModalHeader>\r\n            <ModalFooter>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                style={{ marginRight: \"5px\" }}\r\n                onClick={() => setDel(!dele)}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button color=\"primary\" variant=\"contained\">\r\n                Yes\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Document;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminCompany\\UserManagement\\UserManagement.js",["308","309","310","311","312","313","314","315","316"],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminCompany\\DepartmentManagement\\DepartmentManagement.js",["317","318","319","320","321","322","323","324","325","326"],"import { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  FormGroup,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport Header from \"../../Nav/Header\";\r\nimport Sidebar from \"../../Sidebar/Sidebar\";\r\nimport \"../../../css/Department.css\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport { Autocomplete, createFilterOptions, TreeItem } from \"@material-ui/lab\";\r\nimport departmentAPI from \"../../../api/departmentAPI\";\r\nimport { getUser } from \"../../../utils/Common\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport GetSubDepartment from \"../../GetData/GetSubDepartment\";\r\nimport {\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nconst filter = createFilterOptions();\r\nfunction DepartmentManagerment() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [listDepartment, setListDepartment] = useState([]);\r\n  const [value, setValue] = useState(null);\r\n  const [sub_department, setSubDepartment] = useState(null);\r\n  const [checkDepart, setCheckDepart] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n  const [checkSubDepart, setSubCheckDepart] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n\r\n  function toogle() {\r\n    setIsOpen(!isOpen);\r\n  }\r\n  useEffect(() => {\r\n    async function getDepartment() {\r\n      const id = getUser().CompanyId;\r\n      try {\r\n        const response = await departmentAPI.getDepartmentByCompanyId(id);\r\n        setListDepartment(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getDepartment();\r\n  }, [isOpen]);\r\n\r\n  function addDepartment(e) {\r\n    e.preventDefault();\r\n    if (value === null) {\r\n      setCheckDepart({\r\n        error: true,\r\n        message: \"choose one department or input new\",\r\n      });\r\n    } else if (value !== Object && value.name.length > 255) {\r\n      setCheckDepart({\r\n        error: true,\r\n        message: \"Department name max length 255 characters\",\r\n      });\r\n    } else if (sub_department === null) {\r\n      setSubCheckDepart({\r\n        error: true,\r\n        message: \"Please input subdepartment\",\r\n      });\r\n    } else if (sub_department.length > 255) {\r\n      setSubCheckDepart({\r\n        error: true,\r\n        message: \"Subdepartment name max length 255 characters\",\r\n      });\r\n    } else if (value !== Object) {\r\n      const params = {\r\n        name: value.name,\r\n        companyId: getUser().CompanyId,\r\n        creatorId: getUser().Id,\r\n        dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\r\n      };\r\n      departmentAPI\r\n        .addDepartment(params)\r\n        .then(function (res) {\r\n          const params = {\r\n            name: sub_department,\r\n            departmentId: res.data.id,\r\n            companyId: getUser().CompanyId,\r\n            creatorId: getUser().Id,\r\n            dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\r\n          };\r\n          departmentAPI\r\n            .addSubDepartment(params)\r\n            .then(function (res) {\r\n              toast.success(\"Add department successfully\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n              });\r\n              setIsOpen(false)\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      const params = {\r\n        name: sub_department,\r\n        departmentId: value.id,\r\n        companyId: getUser().CompanyId,\r\n        creatorId: getUser().Id,\r\n        dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\r\n      };\r\n      departmentAPI\r\n        .addSubDepartment(params)\r\n        .then(function (res) {\r\n          toast.success(\"Add department successfully\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n          setIsOpen(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Sidebar />\r\n      <div className=\"main-panel\">\r\n        <Header />\r\n        <Container fluid={true}>\r\n          <div className=\"add\">\r\n            <FormGroup row>\r\n              <Button variant=\"contained\" onClick={toogle} color=\"primary\">\r\n                Add department\r\n              </Button>\r\n            </FormGroup>\r\n          </div>\r\n          <div>\r\n            <TreeView\r\n              className=\"tree\"\r\n              defaultCollapseIcon={<ExpandMoreIcon />}\r\n              defaultExpandIcon={<ChevronRightIcon />}\r\n            >\r\n              {listDepartment.map((department) => (\r\n                <TreeItem\r\n                  key={department.id}\r\n                  nodeId={department.id}\r\n                  label={department.name}\r\n                >\r\n                  <GetSubDepartment id={department.id}/>\r\n                </TreeItem>\r\n              ))}\r\n            </TreeView>\r\n          </div>\r\n        </Container>\r\n        <Dialog\r\n          onClose={toogle}\r\n          open={isOpen}\r\n          fullWidth\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n        >\r\n          <DialogTitle>Add Department</DialogTitle>\r\n          <DialogContent>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Autocomplete\r\n                  value={value}\r\n                  onChange={(event, newValue) => {\r\n                    if (typeof newValue === \"string\") {\r\n                      setValue({\r\n                        name: newValue,\r\n                      });\r\n                    } else if (newValue && newValue.inputValue) {\r\n                      setValue({\r\n                        name: newValue.inputValue,\r\n                      });\r\n                    } else {\r\n                      setValue(newValue);\r\n                    }\r\n                  }}\r\n                  filterOptions={(options, params) => {\r\n                    const filtered = filter(options, params);\r\n                    if (params.inputValue !== \"\") {\r\n                      filtered.push({\r\n                        inputValue: params.inputValue,\r\n                        name: `Add \"${params.inputValue}\"`,\r\n                      });\r\n                    }\r\n\r\n                    return filtered;\r\n                  }}\r\n                  selectOnFocus\r\n                  clearOnBlur\r\n                  handleHomeEndKeys\r\n                  id=\"free-solo-with-text-demo\"\r\n                  options={listDepartment}\r\n                  getOptionLabel={(option) => {\r\n                    if (typeof option === \"string\") {\r\n                      return option;\r\n                    }\r\n                    if (option.inputValue) {\r\n                      return option.inputValue;\r\n                    }\r\n                    return option.name;\r\n                  }}\r\n                  renderOption={(option) => option.name}\r\n                  style={{ width: 260 }}\r\n                  freeSolo\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Department\"\r\n                      variant=\"outlined\"\r\n                      error={checkDepart.error}\r\n                      helperText={checkDepart.message}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col sm={5}>\r\n                <TextField\r\n                  style={{ width: \"250px\" }}\r\n                  error={checkSubDepart.error}\r\n                  helperText={checkSubDepart.message}\r\n                  label=\"Sub Department\"\r\n                  name=\"sub_department\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(e) => setSubDepartment(e.target.value)}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={() => setIsOpen(!isOpen)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ marginRight: \"29px\" }}\r\n              onClick={addDepartment}\r\n            >\r\n              Create\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default DepartmentManagerment;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\App\\firebase.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\userListAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\loginAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\invoiceAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\contractAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepDetailContract.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepInvoice.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\SidebarAdmin.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Validation\\ValidateCompany.js",[],["327","328"],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Validation\\ValidateEmail.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Validation\\ValidatePhone.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Nav\\Header.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Validation\\ValidateAddress.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Validation\\ValidateName.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\PDF\\PDF.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetPhone.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepDoc2.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetEmail.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetCreater.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\companyListAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetSubDepartment.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\departmentAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetDepartment.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\axiosClient.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepDoc.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetAdminCompany\\GetAdminCompany.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\notiAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepDetail.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\Stepper.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\validateAPI.js",[],{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","severity":1,"message":"334","line":2,"column":20,"nodeType":"335","messageId":"336","endLine":2,"endColumn":26},{"ruleId":"333","severity":1,"message":"337","line":16,"column":8,"nodeType":"335","messageId":"336","endLine":16,"endColumn":17},{"ruleId":"333","severity":1,"message":"338","line":20,"column":10,"nodeType":"335","messageId":"336","endLine":20,"endColumn":20},{"ruleId":"333","severity":1,"message":"339","line":80,"column":9,"nodeType":"335","messageId":"336","endLine":80,"endColumn":17},{"ruleId":"340","severity":1,"message":"341","line":123,"column":57,"nodeType":"342","messageId":"343","endLine":123,"endColumn":58},{"ruleId":"340","severity":1,"message":"341","line":123,"column":61,"nodeType":"342","messageId":"343","endLine":123,"endColumn":62},{"ruleId":"340","severity":1,"message":"341","line":123,"column":76,"nodeType":"342","messageId":"343","endLine":123,"endColumn":77},{"ruleId":"340","severity":1,"message":"341","line":136,"column":57,"nodeType":"342","messageId":"343","endLine":136,"endColumn":58},{"ruleId":"340","severity":1,"message":"341","line":136,"column":61,"nodeType":"342","messageId":"343","endLine":136,"endColumn":62},{"ruleId":"340","severity":1,"message":"341","line":136,"column":76,"nodeType":"342","messageId":"343","endLine":136,"endColumn":77},{"ruleId":"344","severity":1,"message":"345","line":166,"column":43,"nodeType":"346","messageId":"347","endLine":166,"endColumn":45},{"ruleId":"333","severity":1,"message":"348","line":3,"column":31,"nodeType":"335","messageId":"336","endLine":3,"endColumn":38},{"ruleId":"340","severity":1,"message":"341","line":165,"column":47,"nodeType":"342","messageId":"343","endLine":165,"endColumn":48},{"ruleId":"340","severity":1,"message":"341","line":165,"column":51,"nodeType":"342","messageId":"343","endLine":165,"endColumn":52},{"ruleId":"340","severity":1,"message":"341","line":165,"column":66,"nodeType":"342","messageId":"343","endLine":165,"endColumn":67},{"ruleId":"340","severity":1,"message":"341","line":166,"column":45,"nodeType":"342","messageId":"343","endLine":166,"endColumn":46},{"ruleId":"340","severity":1,"message":"341","line":166,"column":49,"nodeType":"342","messageId":"343","endLine":166,"endColumn":50},{"ruleId":"340","severity":1,"message":"341","line":166,"column":64,"nodeType":"342","messageId":"343","endLine":166,"endColumn":65},{"ruleId":"340","severity":1,"message":"341","line":220,"column":57,"nodeType":"342","messageId":"343","endLine":220,"endColumn":58},{"ruleId":"340","severity":1,"message":"341","line":220,"column":61,"nodeType":"342","messageId":"343","endLine":220,"endColumn":62},{"ruleId":"340","severity":1,"message":"341","line":220,"column":76,"nodeType":"342","messageId":"343","endLine":220,"endColumn":77},{"ruleId":"349","severity":1,"message":"350","line":257,"column":6,"nodeType":"351","endLine":257,"endColumn":8,"suggestions":"352"},{"ruleId":"344","severity":1,"message":"345","line":98,"column":23,"nodeType":"346","messageId":"347","endLine":98,"endColumn":25},{"ruleId":"340","severity":1,"message":"341","line":115,"column":47,"nodeType":"342","messageId":"343","endLine":115,"endColumn":48},{"ruleId":"340","severity":1,"message":"341","line":115,"column":51,"nodeType":"342","messageId":"343","endLine":115,"endColumn":52},{"ruleId":"340","severity":1,"message":"341","line":115,"column":66,"nodeType":"342","messageId":"343","endLine":115,"endColumn":67},{"ruleId":"340","severity":1,"message":"341","line":116,"column":45,"nodeType":"342","messageId":"343","endLine":116,"endColumn":46},{"ruleId":"340","severity":1,"message":"341","line":116,"column":49,"nodeType":"342","messageId":"343","endLine":116,"endColumn":50},{"ruleId":"340","severity":1,"message":"341","line":116,"column":64,"nodeType":"342","messageId":"343","endLine":116,"endColumn":65},{"ruleId":"340","severity":1,"message":"341","line":147,"column":57,"nodeType":"342","messageId":"343","endLine":147,"endColumn":58},{"ruleId":"340","severity":1,"message":"341","line":147,"column":61,"nodeType":"342","messageId":"343","endLine":147,"endColumn":62},{"ruleId":"340","severity":1,"message":"341","line":147,"column":76,"nodeType":"342","messageId":"343","endLine":147,"endColumn":77},{"ruleId":"349","severity":1,"message":"350","line":186,"column":6,"nodeType":"351","endLine":186,"endColumn":8,"suggestions":"353"},{"ruleId":"333","severity":1,"message":"354","line":18,"column":7,"nodeType":"335","messageId":"336","endLine":18,"endColumn":15},{"ruleId":"333","severity":1,"message":"355","line":25,"column":9,"nodeType":"335","messageId":"336","endLine":25,"endColumn":20},{"ruleId":"333","severity":1,"message":"356","line":14,"column":20,"nodeType":"335","messageId":"336","endLine":14,"endColumn":29},{"ruleId":"333","severity":1,"message":"357","line":18,"column":8,"nodeType":"335","messageId":"336","endLine":18,"endColumn":27},{"ruleId":"349","severity":1,"message":"358","line":82,"column":6,"nodeType":"351","endLine":82,"endColumn":8,"suggestions":"359"},{"ruleId":"340","severity":1,"message":"341","line":67,"column":22,"nodeType":"342","messageId":"343","endLine":67,"endColumn":23},{"ruleId":"340","severity":1,"message":"341","line":67,"column":28,"nodeType":"342","messageId":"343","endLine":67,"endColumn":29},{"ruleId":"340","severity":1,"message":"341","line":67,"column":45,"nodeType":"342","messageId":"343","endLine":67,"endColumn":46},{"ruleId":"340","severity":1,"message":"341","line":80,"column":26,"nodeType":"342","messageId":"343","endLine":80,"endColumn":27},{"ruleId":"340","severity":1,"message":"341","line":80,"column":32,"nodeType":"342","messageId":"343","endLine":80,"endColumn":33},{"ruleId":"340","severity":1,"message":"341","line":80,"column":49,"nodeType":"342","messageId":"343","endLine":80,"endColumn":50},{"ruleId":"340","severity":1,"message":"341","line":92,"column":30,"nodeType":"342","messageId":"343","endLine":92,"endColumn":31},{"ruleId":"340","severity":1,"message":"341","line":92,"column":36,"nodeType":"342","messageId":"343","endLine":92,"endColumn":37},{"ruleId":"340","severity":1,"message":"341","line":92,"column":53,"nodeType":"342","messageId":"343","endLine":92,"endColumn":54},{"ruleId":"340","severity":1,"message":"341","line":104,"column":32,"nodeType":"342","messageId":"343","endLine":104,"endColumn":33},{"ruleId":"340","severity":1,"message":"341","line":104,"column":38,"nodeType":"342","messageId":"343","endLine":104,"endColumn":39},{"ruleId":"340","severity":1,"message":"341","line":104,"column":55,"nodeType":"342","messageId":"343","endLine":104,"endColumn":56},{"ruleId":"340","severity":1,"message":"341","line":121,"column":36,"nodeType":"342","messageId":"343","endLine":121,"endColumn":37},{"ruleId":"340","severity":1,"message":"341","line":121,"column":42,"nodeType":"342","messageId":"343","endLine":121,"endColumn":43},{"ruleId":"340","severity":1,"message":"341","line":121,"column":59,"nodeType":"342","messageId":"343","endLine":121,"endColumn":60},{"ruleId":"344","severity":1,"message":"360","line":57,"column":26,"nodeType":"346","messageId":"361","endLine":57,"endColumn":28},{"ruleId":"344","severity":1,"message":"360","line":66,"column":26,"nodeType":"346","messageId":"361","endLine":66,"endColumn":28},{"ruleId":"344","severity":1,"message":"360","line":188,"column":32,"nodeType":"346","messageId":"361","endLine":188,"endColumn":34},{"ruleId":"344","severity":1,"message":"360","line":172,"column":37,"nodeType":"346","messageId":"361","endLine":172,"endColumn":39},{"ruleId":"344","severity":1,"message":"360","line":183,"column":37,"nodeType":"346","messageId":"361","endLine":183,"endColumn":39},{"ruleId":"344","severity":1,"message":"360","line":196,"column":39,"nodeType":"346","messageId":"361","endLine":196,"endColumn":41},{"ruleId":"344","severity":1,"message":"360","line":204,"column":36,"nodeType":"346","messageId":"361","endLine":204,"endColumn":38},{"ruleId":"344","severity":1,"message":"360","line":212,"column":35,"nodeType":"346","messageId":"361","endLine":212,"endColumn":37},{"ruleId":"344","severity":1,"message":"360","line":224,"column":39,"nodeType":"346","messageId":"361","endLine":224,"endColumn":41},{"ruleId":"344","severity":1,"message":"360","line":232,"column":36,"nodeType":"346","messageId":"361","endLine":232,"endColumn":38},{"ruleId":"344","severity":1,"message":"360","line":240,"column":35,"nodeType":"346","messageId":"361","endLine":240,"endColumn":37},{"ruleId":"344","severity":1,"message":"360","line":533,"column":32,"nodeType":"346","messageId":"361","endLine":533,"endColumn":34},{"ruleId":"344","severity":1,"message":"360","line":122,"column":30,"nodeType":"346","messageId":"361","endLine":122,"endColumn":32},{"ruleId":"344","severity":1,"message":"360","line":129,"column":30,"nodeType":"346","messageId":"361","endLine":129,"endColumn":32},{"ruleId":"344","severity":1,"message":"360","line":136,"column":30,"nodeType":"346","messageId":"361","endLine":136,"endColumn":32},{"ruleId":"340","severity":1,"message":"341","line":313,"column":24,"nodeType":"342","messageId":"343","endLine":313,"endColumn":25},{"ruleId":"340","severity":1,"message":"341","line":313,"column":30,"nodeType":"342","messageId":"343","endLine":313,"endColumn":31},{"ruleId":"340","severity":1,"message":"341","line":313,"column":47,"nodeType":"342","messageId":"343","endLine":313,"endColumn":48},{"ruleId":"344","severity":1,"message":"360","line":851,"column":33,"nodeType":"346","messageId":"361","endLine":851,"endColumn":35},{"ruleId":"362","severity":1,"message":"363","line":1068,"column":19,"nodeType":"364","endLine":1068,"endColumn":49},{"ruleId":"362","severity":1,"message":"363","line":1070,"column":19,"nodeType":"364","endLine":1070,"endColumn":47},{"ruleId":"333","severity":1,"message":"365","line":22,"column":8,"nodeType":"335","messageId":"336","endLine":22,"endColumn":15},{"ruleId":"340","severity":1,"message":"341","line":89,"column":59,"nodeType":"342","messageId":"343","endLine":89,"endColumn":60},{"ruleId":"340","severity":1,"message":"341","line":89,"column":63,"nodeType":"342","messageId":"343","endLine":89,"endColumn":64},{"ruleId":"340","severity":1,"message":"341","line":89,"column":78,"nodeType":"342","messageId":"343","endLine":89,"endColumn":79},{"ruleId":"340","severity":1,"message":"341","line":99,"column":63,"nodeType":"342","messageId":"343","endLine":99,"endColumn":64},{"ruleId":"340","severity":1,"message":"341","line":99,"column":67,"nodeType":"342","messageId":"343","endLine":99,"endColumn":68},{"ruleId":"340","severity":1,"message":"341","line":99,"column":82,"nodeType":"342","messageId":"343","endLine":99,"endColumn":83},{"ruleId":"340","severity":1,"message":"341","line":122,"column":59,"nodeType":"342","messageId":"343","endLine":122,"endColumn":60},{"ruleId":"340","severity":1,"message":"341","line":122,"column":63,"nodeType":"342","messageId":"343","endLine":122,"endColumn":64},{"ruleId":"340","severity":1,"message":"341","line":122,"column":78,"nodeType":"342","messageId":"343","endLine":122,"endColumn":79},{"ruleId":"329","replacedBy":"366"},{"ruleId":"331","replacedBy":"367"},"no-native-reassign",["368"],"no-negated-in-lhs",["369"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'CountDown' is defined but never used.","'useHistory' is defined but never used.","'renderer' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useMemo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addEventListeners' and 'removeEventListeners'. Either include them or remove the dependency array.","ArrayExpression",["370"],["371"],"'listNoti' is assigned a value but never used.","'currentPost' is assigned a value but never used.","'setAvatar' is assigned a value but never used.","'InsertDriveFileIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'param.id'. Either include it or remove the dependency array.",["372"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'AddIcon' is defined but never used.",["368"],["369"],"no-global-assign","no-unsafe-negation",{"desc":"373","fix":"374"},{"desc":"373","fix":"375"},{"desc":"376","fix":"377"},"Update the dependencies array to be: [addEventListeners, removeEventListeners]",{"range":"378","text":"379"},{"range":"380","text":"379"},"Update the dependencies array to be: [param.id]",{"range":"381","text":"382"},[7379,7381],"[addEventListeners, removeEventListeners]",[5506,5508],[3117,3119],"[param.id]"]