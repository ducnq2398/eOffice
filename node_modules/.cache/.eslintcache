[{"/Users/macos/Desktop/EOfficeWeb/src/index.js":"1","/Users/macos/Desktop/EOfficeWeb/src/components/App/App.js":"2","/Users/macos/Desktop/EOfficeWeb/src/components/RouterURL/RouterURL.js":"3","/Users/macos/Desktop/EOfficeWeb/src/components/AdminLogin/AdminLogin.js":"4","/Users/macos/Desktop/EOfficeWeb/src/components/AdminManager/AdminManager.js":"5","/Users/macos/Desktop/EOfficeWeb/src/components/CompanyRegister/CompanyRegister.js":"6","/Users/macos/Desktop/EOfficeWeb/src/components/EditCompany/EditCompany.js":"7","/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js":"8","/Users/macos/Desktop/EOfficeWeb/src/components/CompanyList/CompanyList.js":"9","/Users/macos/Desktop/EOfficeWeb/src/components/CreateDocument/CreateInvoice.js":"10","/Users/macos/Desktop/EOfficeWeb/src/components/CreateDocument/CreateContract.js":"11","/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ForgotPassword.js":"12","/Users/macos/Desktop/EOfficeWeb/src/components/Document/Document.js":"13","/Users/macos/Desktop/EOfficeWeb/src/components/Dashboard/Dashboard.js":"14","/Users/macos/Desktop/EOfficeWeb/src/components/CreateDocument/ContractContent.js":"15","/Users/macos/Desktop/EOfficeWeb/src/components/CreateDocument/InvoiceContent.js":"16","/Users/macos/Desktop/EOfficeWeb/src/components/Notification/Notification.js":"17","/Users/macos/Desktop/EOfficeWeb/src/components/Profile/Profile.js":"18","/Users/macos/Desktop/EOfficeWeb/src/components/DetailDocument/InvoiceDetail.js":"19","/Users/macos/Desktop/EOfficeWeb/src/utils/Common.js":"20","/Users/macos/Desktop/EOfficeWeb/src/components/Login/Login.js":"21","/Users/macos/Desktop/EOfficeWeb/src/components/Error/Error.js":"22","/Users/macos/Desktop/EOfficeWeb/src/components/DetailDocument/ContractDetail.js":"23","/Users/macos/Desktop/EOfficeWeb/src/components/AdminCompany/UserManagement/UserManagement.js":"24","/Users/macos/Desktop/EOfficeWeb/src/components/AdminCompany/DepartmentManagement/DepartmentManagement.js":"25","/Users/macos/Desktop/EOfficeWeb/src/components/App/firebase.js":"26","/Users/macos/Desktop/EOfficeWeb/src/api/companyListAPI.js":"27","/Users/macos/Desktop/EOfficeWeb/src/api/loginAPI.js":"28","/Users/macos/Desktop/EOfficeWeb/src/api/userListAPI.js":"29","/Users/macos/Desktop/EOfficeWeb/src/api/contractAPI.js":"30","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/StepInvoice.js":"31","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/SidebarAdmin.js":"32","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/StepDetailContract.js":"33","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateCompany.js":"34","/Users/macos/Desktop/EOfficeWeb/src/components/Nav/Header.js":"35","/Users/macos/Desktop/EOfficeWeb/src/components/GetAdminCompany/GetAdminCompany.js":"36","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateAddress.js":"37","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePhone.js":"38","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateEmail.js":"39","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateName.js":"40","/Users/macos/Desktop/EOfficeWeb/src/components/GetData/GetCreater.js":"41","/Users/macos/Desktop/EOfficeWeb/src/components/GetData/GetPhone.js":"42","/Users/macos/Desktop/EOfficeWeb/src/components/GetData/GetEmail.js":"43","/Users/macos/Desktop/EOfficeWeb/src/components/GetData/GetSubDepartment.js":"44","/Users/macos/Desktop/EOfficeWeb/src/components/PDF/PDF.js":"45","/Users/macos/Desktop/EOfficeWeb/src/api/departmentAPI.js":"46","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/Sidebar.js":"47","/Users/macos/Desktop/EOfficeWeb/src/components/GetData/GetDepartment.js":"48","/Users/macos/Desktop/EOfficeWeb/src/api/axiosClient.js":"49","/Users/macos/Desktop/EOfficeWeb/src/api/invoiceAPI.js":"50","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/StepDetail.js":"51","/Users/macos/Desktop/EOfficeWeb/src/api/notiAPI.js":"52","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/Stepper.js":"53","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/StepDoc2.js":"54","/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/StepDoc.js":"55"},{"size":277,"mtime":1615867032613,"results":"56","hashOfConfig":"57"},{"size":294,"mtime":1615899968847,"results":"58","hashOfConfig":"57"},{"size":4092,"mtime":1615867032572,"results":"59","hashOfConfig":"57"},{"size":2702,"mtime":1615867032566,"results":"60","hashOfConfig":"57"},{"size":618,"mtime":1615867032567,"results":"61","hashOfConfig":"57"},{"size":14553,"mtime":1615893509935,"results":"62","hashOfConfig":"57"},{"size":7428,"mtime":1615867032569,"results":"63","hashOfConfig":"57"},{"size":2611,"mtime":1615867032570,"results":"64","hashOfConfig":"57"},{"size":7358,"mtime":1615895719167,"results":"65","hashOfConfig":"57"},{"size":22868,"mtime":1615867032568,"results":"66","hashOfConfig":"57"},{"size":32045,"mtime":1615867032568,"results":"67","hashOfConfig":"57"},{"size":4763,"mtime":1615867032570,"results":"68","hashOfConfig":"57"},{"size":25396,"mtime":1615879188945,"results":"69","hashOfConfig":"57"},{"size":11065,"mtime":1615867032568,"results":"70","hashOfConfig":"57"},{"size":13387,"mtime":1615867032568,"results":"71","hashOfConfig":"57"},{"size":10705,"mtime":1615867032568,"results":"72","hashOfConfig":"57"},{"size":3905,"mtime":1615867032571,"results":"73","hashOfConfig":"57"},{"size":4829,"mtime":1615867032572,"results":"74","hashOfConfig":"57"},{"size":8986,"mtime":1615867032569,"results":"75","hashOfConfig":"57"},{"size":525,"mtime":1615867032614,"results":"76","hashOfConfig":"57"},{"size":4780,"mtime":1615899495354,"results":"77","hashOfConfig":"57"},{"size":670,"mtime":1615867032569,"results":"78","hashOfConfig":"57"},{"size":11603,"mtime":1615867032568,"results":"79","hashOfConfig":"57"},{"size":35926,"mtime":1615897951766,"results":"80","hashOfConfig":"57"},{"size":8505,"mtime":1615869776720,"results":"81","hashOfConfig":"57"},{"size":408,"mtime":1615867032567,"results":"82","hashOfConfig":"57"},{"size":930,"mtime":1615870374529,"results":"83","hashOfConfig":"57"},{"size":327,"mtime":1615867032565,"results":"84","hashOfConfig":"57"},{"size":1557,"mtime":1615867032566,"results":"85","hashOfConfig":"57"},{"size":1627,"mtime":1615867032565,"results":"86","hashOfConfig":"57"},{"size":1197,"mtime":1615867032573,"results":"87","hashOfConfig":"57"},{"size":3073,"mtime":1615867032572,"results":"88","hashOfConfig":"57"},{"size":4505,"mtime":1615867032572,"results":"89","hashOfConfig":"57"},{"size":279,"mtime":1615867032573,"results":"90","hashOfConfig":"57"},{"size":2689,"mtime":1615879180885,"results":"91","hashOfConfig":"57"},{"size":588,"mtime":1615867032570,"results":"92","hashOfConfig":"57"},{"size":280,"mtime":1615867032573,"results":"93","hashOfConfig":"57"},{"size":442,"mtime":1615867032574,"results":"94","hashOfConfig":"57"},{"size":470,"mtime":1615867032573,"results":"95","hashOfConfig":"57"},{"size":351,"mtime":1615867032573,"results":"96","hashOfConfig":"57"},{"size":768,"mtime":1615867032570,"results":"97","hashOfConfig":"57"},{"size":764,"mtime":1615867032570,"results":"98","hashOfConfig":"57"},{"size":764,"mtime":1615867032570,"results":"99","hashOfConfig":"57"},{"size":750,"mtime":1615867032570,"results":"100","hashOfConfig":"57"},{"size":1230,"mtime":1615867032571,"results":"101","hashOfConfig":"57"},{"size":1224,"mtime":1615867032565,"results":"102","hashOfConfig":"57"},{"size":4565,"mtime":1615867032572,"results":"103","hashOfConfig":"57"},{"size":799,"mtime":1615867032570,"results":"104","hashOfConfig":"57"},{"size":153,"mtime":1615867032565,"results":"105","hashOfConfig":"57"},{"size":1367,"mtime":1615867032565,"results":"106","hashOfConfig":"57"},{"size":3630,"mtime":1615867032572,"results":"107","hashOfConfig":"57"},{"size":317,"mtime":1615867032566,"results":"108","hashOfConfig":"57"},{"size":1249,"mtime":1615867032573,"results":"109","hashOfConfig":"57"},{"size":628,"mtime":1615867032573,"results":"110","hashOfConfig":"57"},{"size":641,"mtime":1615867032573,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1yx653h",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"114"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"114"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"114"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"/Users/macos/Desktop/EOfficeWeb/src/index.js",[],["244","245"],"/Users/macos/Desktop/EOfficeWeb/src/components/App/App.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/RouterURL/RouterURL.js",["246","247","248"],"import { BrowserRouter as Router, Redirect, Route , Switch } from \"react-router-dom\";\nimport AdminLogin from \"../AdminLogin/AdminLogin\";\nimport AdminManager from \"../AdminManager/AdminManager\";\nimport Login from \"../Login/Login\";\nimport CompanyRegister from \"../CompanyRegister/CompanyRegister\";\nimport CompanyList from \"../CompanyList/CompanyList\";\nimport ForgotPassword from \"../ForgotPassword/ForgotPassword\";\nimport EditCompany from \"../EditCompany/EditCompany\";\nimport {getToken, getUser } from \"../../utils/Common\";\nimport ResetPassword from \"../ForgotPassword/ResetPassword\";\nimport UserManagement from \"../AdminCompany/UserManagement/UserManagement\";\nimport CreateContract from \"../CreateDocument/CreateContract\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport Document from \"../Document/Document\";\nimport Error from \"../Error/Error\";\nimport DepartmentManagerment from \"../AdminCompany/DepartmentManagement/DepartmentManagement\";\nimport Notification from \"../Notification/Notification\";\nimport CreateInvoice from \"../CreateDocument/CreateInvoice\";\nimport InvoiceContent from \"../CreateDocument/InvoiceContent\";\nimport Profile from \"../Profile/Profile\";\nimport ContractContent from \"../CreateDocument/ContractContent\";\nimport InvoiceDetail from \"../DetailDocument/InvoiceDetail\";\nimport ContractDetail from \"../DetailDocument/ContractDetail\";\nimport { useEffect, useState } from \"react\";\n\nfunction RouterURL(){\n    \n    const PrivateRoute = ({ component: Component, ...rest}) =>(\n        <Route {...rest} render={(props) => \n            getToken() && getUser().Role==='3'\n            ? <Component {... props}/>\n            : <Redirect to={{pathname: '/error', state:{from: props.location} }}/>}/>\n    )\n\n    const AdminRoute = ({ component: Component, ...rest}) =>(\n        <Route {...rest} render={(props) => \n            getToken() && getUser().Role==='1'\n            ? <Component {... props}/> \n            : <Redirect to={{pathname: '/error', state:{from: props.location} }}/>}/>\n    )\n    const UserRoute = ({ component: Component, ...rest}) =>(\n        <Route {...rest} render={(props) => \n            getToken() && getUser().Role !=='3'\n            ? <Component {... props}/> \n            : <Redirect to={{pathname: '/error', state:{from: props.location} }}/>}/>\n    )\n    return(\n        <div>\n            <Switch>\n                <Route path=\"/error\" component={Error}/>\n                <Route exact path=\"/\" component={Login}/>\n                <Route path=\"/login\" component={Login}/>\n                <Route path=\"/admin\" component={AdminLogin}/>\n                <Route path=\"/forgot-password\" component={ForgotPassword}/>\n                <Route path=\"/reset-password\" component={ResetPassword}/>\n                <Route path=\"/error\" component={Error}/>\n                <UserRoute path=\"/contract\" component={CreateContract}/>\n                <UserRoute path=\"/invoice\" component={CreateInvoice}/>\n                <UserRoute path=\"/dashboard\" component={Dashboard}/>\n                <UserRoute path=\"/invoice-confirm\" component={InvoiceContent}/>\n                <UserRoute path=\"/contract-confirm\" component={ContractContent}/>\n                <UserRoute path=\"/document\" component={Document}/>\n                <UserRoute path=\"/detail/invoice/:id/:name\" component={InvoiceDetail}/>\n                <UserRoute path=\"/detail/contract/:id/:name\" component={ContractDetail}/>\n                <UserRoute path=\"/notification\" component={Notification}/>\n                <AdminRoute path=\"/department\" component={DepartmentManagerment}/>\n                <AdminRoute path=\"/user-management\" component={UserManagement}/>\n                <PrivateRoute path=\"/admin-manager\" component={AdminManager}/>\n                <PrivateRoute path=\"/company-register\" component={CompanyRegister}/>\n                <PrivateRoute path=\"/company-list\" component={CompanyList}/>\n                <PrivateRoute path=\"/edit-company\" component={EditCompany}/>\n                <UserRoute path=\"/profile\" component={Profile}/>\n            </Switch>\n        </div>\n    );\n}\nexport default RouterURL;","/Users/macos/Desktop/EOfficeWeb/src/components/AdminLogin/AdminLogin.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/AdminManager/AdminManager.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/CompanyRegister/CompanyRegister.js",["249","250","251","252","253","254","255","256","257","258","259","260","261","262","263"],"import React, { useState } from \"react\";\nimport \"../../css/CompanyRegister.css\";\nimport register from \"../../images/register.png\";\nimport { Col, Container, Form, Label, Row } from \"reactstrap\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SidebarAdmin from \"../Sidebar/SidebarAdmin\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Slide,\n  Snackbar,\n} from \"@material-ui/core\";\nimport Moment from \"moment\";\nimport md5 from \"md5\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { getUser } from \"../../utils/Common\";\nimport companyListAPI from \"../../api/companyListAPI\";\nimport departmentAPI from \"../../api/departmentAPI\";\nimport userListAPI from \"../../api/userListAPI\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router\";\n\nfunction TransitionLeft(props) {\n  return <Slide {...props} direction=\"right\" />;\n}\n\nfunction CompanyRegister() {\n  const [companyRegister, setCompanyRegister] = useState({\n    company_name: \"\",\n    address: \"\",\n    phone: null,\n    manager_name: \"\",\n    manager_email: \"\",\n  });\n  const history = useHistory();\n  const [confirm, setConfirm] = useState(false);\n  const [error, setError] = useState({\n    company_name: false,\n    address: false,\n    phone: false,\n    manager_name: false,\n    email: false,\n    message: \"\",\n  });\n\n  function handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setCompanyRegister({\n      ...companyRegister,\n      [name]: value,\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const company = {\n      name: companyRegister.company_name,\n      phone: \"+84\" + companyRegister.phone.substring(1),\n      address: companyRegister.address,\n      dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\n      creatorId: getUser().Id,\n      status: 1,\n    }\n    companyListAPI.addCompany(company).then(function(res){\n      const param = {\n        name: 'Manager',\n        companyId: res.data.id,\n        creatorId: getUser().Id,\n        dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z')\n      }\n      departmentAPI.addDepartment(param).then(function(department){\n        const sub = {\n          name: 'Admin',\n          departmentId: department.data.id,\n          companyId: res.data.id,\n          creatorId: getUser().Id,\n          dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\n        }\n        departmentAPI.addSubDepartment(sub).then(function(subdepartment){\n          const user = {\n            name: companyRegister.manager_name,\n            avatar: \"\",\n            email: companyRegister.manager_email,\n            password: md5(\"123Aabc\").trim().toString(),\n            phone: \"+84\" + companyRegister.phone.substring(1),\n            address: companyRegister.address,\n            dateCreate: Moment(new Date()).format(\n              \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\n            ),\n            creatorId: getUser().Id,\n            subDepartmentId: subdepartment.data.id,\n            departmentId: department.data.id,\n            companyId: res.data.id,\n            role: \"1\",\n            status: 1,\n          }\n          userListAPI.addUser(user).then(function(newUser){\n            const data = {\n              id: res.data.id,\n              phone: \"+84\" + companyRegister.phone.substring(1),\n              address: companyRegister.address,\n              dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\n              adminId: newUser.data.id,\n              status: 1\n            }\n            companyListAPI.updateCompany(data).then(function(){\n              toast.success(\"Add department successfully\", {\n                position: toast.POSITION.TOP_CENTER,\n              });\n              history.push('/company-list');\n            })\n          }).catch(function(error){\n            console.log(error)\n          })\n        })\n      }).catch(function(error){\n        console.log(error)\n      })\n    }).catch(function(error){\n      console.log(error)\n    })\n  }\n  function handleConfirm(e) {\n    e.preventDefault();\n    var pattern = new RegExp(\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n    );\n    if (companyRegister.company_name.length > 255) {\n      setError({\n        ...error,\n        company_name: true,\n        message: \"Company name max length 255 characters\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          company_name: false,\n          message: \"\",\n        });\n      }, 3000);\n    } else if (companyRegister.company_name === \"\") {\n      setError({\n        ...error,\n        company_name: true,\n        message: \"Company name must not empty\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          company_name: false,\n          message: \"\",\n        });\n      }, 3000);\n    } else if (companyRegister.address.length > 255) {\n      setError({\n        ...error,\n        address: true,\n        message: \"Address max length 255 characters\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          address: false,\n          message: \"\",\n        });\n      }, 3000);\n    } else if (companyRegister.phone === null) {\n      setError({\n        ...error,\n        phone: true,\n        message: \"Phone number must not empty\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          phone: false,\n          message: \"\",\n        });\n      }, 3000);\n    } else if (!companyRegister.phone.trim().match(\"^[0-9]{10}$\")) {\n      setError({\n        ...error,\n        phone: true,\n        message: \"Invalid phone number\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          phone: false,\n          message: \"\",\n        });\n      }, 3000);\n    } else if (\n      !pattern.test(companyRegister.manager_email) ||\n      companyRegister.manager_email.trim() === \"\"\n    ) {\n      setError({\n        ...error,\n        email: true,\n        message: \"Invalid email\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          email: false,\n          message: \"\",\n        });\n      }, 3000);\n    } else if (companyRegister.manager_name.length > 255) {\n      setError({\n        ...error,\n        manager_name: true,\n        message: \"Manager name max length 255 characters\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          manager_name: false,\n          message: \"\",\n        });\n      }, 3000);\n    } else if (companyRegister.manager_name === \"\") {\n      setError({\n        ...error,\n        manager_name: true,\n        message: \"Manager name must not empty\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          manager_name: false,\n          message: \"\",\n        });\n      }, 3000);\n    } else {\n      setConfirm(true);\n    }\n  }\n  return (\n    <div>\n      <SidebarAdmin />\n      <div className=\"main-panel\">\n        <Container fluid={true}>\n          <Snackbar\n            open={error.company_name}\n            autoHideDuration={3000}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            TransitionComponent={TransitionLeft}\n          >\n            <Alert variant=\"filled\" severity=\"error\">\n              {error.message}\n            </Alert>\n          </Snackbar>\n          <Snackbar\n            open={error.address}\n            autoHideDuration={3000}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            TransitionComponent={TransitionLeft}\n          >\n            <Alert variant=\"filled\" severity=\"error\">\n              {error.message}\n            </Alert>\n          </Snackbar>\n          <Snackbar\n            open={error.phone}\n            autoHideDuration={3000}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            TransitionComponent={TransitionLeft}\n          >\n            <Alert variant=\"filled\" severity=\"error\">\n              {error.message}\n            </Alert>\n          </Snackbar>\n          <Snackbar\n            open={error.manager_name}\n            autoHideDuration={3000}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            TransitionComponent={TransitionLeft}\n          >\n            <Alert variant=\"filled\" severity=\"error\">\n              {error.message}\n            </Alert>\n          </Snackbar>\n          <Snackbar\n            open={error.email}\n            autoHideDuration={3000}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            TransitionComponent={TransitionLeft}\n          >\n            <Alert variant=\"filled\" severity=\"error\">\n              {error.message}\n            </Alert>\n          </Snackbar>\n\n          <div>\n            <img style={{ marginTop: \"20px\" }} src={register} alt=\"\" />\n          </div>\n          <Form\n            style={{\n              width: \"60%\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              marginTop: 50,\n              textAlign: \"left\",\n            }}\n          >\n            <Row>\n              <Col sm={3}>\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\n                  Company Name\n                </Label>\n              </Col>\n              <Col>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  type=\"text\"\n                  name=\"company_name\"\n                  required\n                  size=\"small\"\n                  error={error.company_name}\n                  onChange={handleChange}\n                />\n              </Col>\n            </Row>\n            <Row style={{ marginTop: 20 }}>\n              <Col sm={3}>\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\n                  Manager Name\n                </Label>\n              </Col>\n              <Col>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  type=\"text\"\n                  name=\"manager_name\"\n                  required\n                  error={error.manager_name}\n                  size=\"small\"\n                  onChange={handleChange}\n                />\n              </Col>\n            </Row>\n            <Row style={{ marginTop: 20 }}>\n              <Col sm={3}>\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\n                  Phone Number\n                </Label>\n              </Col>\n              <Col>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  type=\"phone\"\n                  name=\"phone\"\n                  required\n                  size=\"small\"\n                  error={error.phone}\n                  onChange={handleChange}\n                />\n              </Col>\n            </Row>\n            <Row style={{ marginTop: 20 }}>\n              <Col sm={3}>\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\n                  Manager Email\n                </Label>\n              </Col>\n              <Col>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  type=\"email\"\n                  name=\"manager_email\"\n                  required\n                  error={error.email}\n                  size=\"small\"\n                  onChange={handleChange}\n                />\n              </Col>\n            </Row>\n            <Row style={{ marginTop: 20 }}>\n              <Col sm={3}>\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\n                  Street Address\n                </Label>\n              </Col>\n              <Col>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  type=\"text\"\n                  name=\"address\"\n                  required\n                  error={error.address}\n                  size=\"small\"\n                  onChange={handleChange}\n                />\n              </Col>\n            </Row>\n          </Form>\n          <Button\n            style={{ marginTop: 20 }}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={handleConfirm}\n          >\n            Verification\n          </Button>\n          <Dialog open={confirm} fullWidth>\n            <DialogTitle>Confirm Information</DialogTitle>\n            <DialogContent>\n              <Form style={{ textAlign: \"left\", fontSize: 18 }}>\n                <Row>\n                  <Col sm={4}>\n                    <Label>Company Name:</Label>\n                  </Col>\n                  <Col>\n                    <Label>{companyRegister.company_name}</Label>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col sm={4}>\n                    <Label>Manager Name:</Label>\n                  </Col>\n                  <Col>\n                    <Label>{companyRegister.manager_name}</Label>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col sm={4}>\n                    <Label>Phone Number:</Label>\n                  </Col>\n                  <Col>\n                    <Label>{companyRegister.phone}</Label>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col sm={4}>\n                    <Label>Manager Email:</Label>\n                  </Col>\n                  <Col>\n                    <Label>{companyRegister.manager_email}</Label>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col sm={4}>\n                    <Label>Street Address:</Label>\n                  </Col>\n                  <Col>\n                    <Label>{companyRegister.address}</Label>\n                  </Col>\n                </Row>\n              </Form>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                onClick={() => setConfirm(false)}\n              >\n                Cancel\n              </Button>\n              <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\n                Create\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default CompanyRegister;\n","/Users/macos/Desktop/EOfficeWeb/src/components/EditCompany/EditCompany.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ResetPassword.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/CompanyList/CompanyList.js",["264","265","266"],"import { Container, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Table, Form, FormGroup, Input, Row, Col} from \"reactstrap\";\nimport {Link} from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport companyListAPI from \"../../api/companyListAPI\";\nimport SidebarAdmin from \"../Sidebar/SidebarAdmin\";\nimport '../../css/CompanyList.css';\nimport GetAdminCompany from \"../GetAdminCompany/GetAdminCompany\";\nimport Moment from 'moment';\n\nfunction CompanyList(){\n    const [filter, setFilter] = useState(false);\n    const toggle = () => setFilter(prevState => ! prevState);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage] = useState(15);\n    const [search, setSearch] = useState('');\n    const [data, setData] = useState([]);\n    const [postList, setPostList] = useState([]);\n    const indexOfLastPost = (page+1) * rowsPerPage;\n    const indexOfFirstPost = indexOfLastPost - rowsPerPage;\n    const currentPosts = postList.slice(indexOfFirstPost, indexOfLastPost)\n    \n    function changePage(event, newPage) {\n        setPage(newPage);\n      }\n    useEffect(()=>{\n        async function fetListData(){\n            try {\n                const response = await companyListAPI.getAll();\n                setPostList(response.data)\n                setData(response.data)\n            } catch (error) {  \n                console.log(error)\n            }\n        }\n        fetListData();\n    },[]);\n    function Active() {\n        setPostList(\n            data.filter(data =>{\n                if(data.status===1){\n                    return data\n                }\n            })    \n        )\n    }\n    function listDeactive() {\n        setPostList(\n            data.filter(data =>{\n                if(data.status!==1){\n                    return data\n                }\n            })    \n        )\n    }\n    function All(){\n        setPostList(data)\n    }\n    return(\n        <div>\n            <SidebarAdmin/>\n            <div className=\"main-panel\">\n            <Container fluid={true}>\n                <div className=\"search_form\">\n                    <Form>\n                        <FormGroup>\n                            <Row>\n                                <Col xs={10}>\n                                    <Input type=\"search\" className=\"form-control rounded\" value={search} onChange={event => {setSearch(event.target.value)}} placeholder=\"Search by name company\"/>\n                                </Col>\n                                <Col xs={2}>\n                                    <Dropdown isOpen={filter}toggle={toggle}>\n                                    <DropdownToggle color=\"primary\" caret>\n                                        Filter\n                                    </DropdownToggle>\n                                    <DropdownMenu>\n                                        <DropdownItem onClick={All}>All</DropdownItem>\n                                        <DropdownItem onClick={Active} >Active</DropdownItem>\n                                        <DropdownItem onClick={listDeactive}>Deactive</DropdownItem>\n                                    </DropdownMenu>\n                                    </Dropdown>\n                                </Col>\n                            </Row>\n                        </FormGroup>\n                        \n                    </Form>\n                </div>\n                <div hidden={search !== \"\" ? true : false}>\n              <TablePagination\n                component=\"div\"\n                count={postList.length}\n                page={page}\n                onChangePage={changePage}\n                rowsPerPage={rowsPerPage}\n                labelRowsPerPage=\"\"\n                rowsPerPageOptions={[]}\n              />\n            </div>\n                <Table hidden={search!== '' ? true : false}>\n                    <thead>\n                        <tr>\n                            <th>No</th>\n                            <th>Company Name</th>\n                            <th>Manager Name</th>\n                            <th>Date Created</th>\n                            <th>Status</th>\n                            <th>Phone Number</th>\n                            <th>Edits/Details</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {currentPosts.map((data, key) => (\n                            <tr key={key}>\n                                    <th>{data.id}</th>\n                                    <td>{data.name}</td>\n                                    <td>\n                                        <GetAdminCompany id={data.adminId}/>\n                                    </td>\n                                    <td>{Moment(data.dateCreate).format('DD/MM/YYYY HH:mm:ss')}</td>\n                                    <td>{data.status===1? <p style={{color:'green'}}>Active</p> : <p style={{color:'red'}}>Deactive</p>}</td>\n                                    <td>{data.phone}</td>\n                                    <td>\n                                        <Link to={{\n                                            pathname: '/edit-company',\n                                            state: data\n                                        }}>Edit/Detail</Link>\n                                    </td>\n                            </tr>))}  \n                    </tbody>    \n                </Table>\n                <Table hidden={search==='' ? true : false } className=\"table_css\">\n                    <thead>\n                        <tr>\n                            <th>No</th>\n                            <th>Company Name</th>\n                            <th>Manager Name</th>\n                            <th>Date Created</th>\n                            <th>Status</th>\n                            <th>Phone Number</th>\n                            <th>Edits/Details</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.filter((data) =>{\n                            if(data.name.toLowerCase().includes(search.toLowerCase())){\n                                return data\n                            }\n                        }).map(data => (\n                            <tr key={data.id}>\n                                    <th>{data.id}</th>\n                                    <td>{data.name}</td>\n                                    <td>\n                                        <GetAdminCompany id={data.adminId}/>\n                                    </td>\n                                    <td>{data.dateCreate}</td>\n                                    <td>{data.status===1? <p style={{color:'green'}}>Active</p> : <p style={{color:'red'}}>Deactive</p>}</td>\n                                    <td>{data.phone}</td>\n                                    <td>\n                                        <Link to={{\n                                            pathname: '/edit-company',\n                                            state: data\n                                        }}>Edit/Detail</Link>\n                                    </td>\n                            </tr>))}  \n                    </tbody>    \n                </Table>\n            </Container>\n            </div>\n        </div>\n    );\n}\nexport default CompanyList;","/Users/macos/Desktop/EOfficeWeb/src/components/CreateDocument/CreateInvoice.js",["267","268","269","270","271","272","273","274","275","276","277"],"import { Container, Form, FormGroup, Row, Col, Label } from \"reactstrap\";\nimport Header from \"../Nav/Header\";\nimport StepInvoice from \"../Sidebar/StepInvoice\";\nimport { useState, useEffect } from \"react\";\nimport \"../../css/CreateDoc.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { getUser } from \"../../utils/Common\";\nimport demo from \"../../images/demo.png\";\nimport userListAPI from \"../../api/userListAPI\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport EditLocationIcon from \"@material-ui/icons/EditLocation\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport BackupIcon from \"@material-ui/icons/Backup\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Moment from \"moment\";\nimport {\n  InputAdornment,\n  Slide,\n  Tooltip,\n} from \"@material-ui/core\";\nimport TitleIcon from \"@material-ui/icons/Title\";\nimport { toast } from \"react-toastify\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\ntoast.configure();\nfunction TransitionLeft(props) {\n  return <Slide {...props} direction=\"right\" />;\n}\nfunction CreateInvoice() {\n  const history = useHistory();\n  const [listSinger, setListSigner] = useState([]);\n  const [show, setShow] = useState(false);\n  const [activeStep, setActiveStep] = useState(0);\n  const [file, setFile] = useState([]);\n  const [color, setColor] = useState(\"#808080ad\");\n  const [alert, setAlert] = useState({\n    file: false,\n    title: false,\n    signer: false,\n    location: false,\n    date: false,\n    message: \"\",\n  });\n  const handleChange = (event, value) => {\n    setPageNumber(value);\n  };\n  const [fileName, setFileName] = useState(\"\");\n  const [dataUpload, setDataUpload] = useState({\n    title: \"\",\n    signer: null,\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0,\n  });\n  const [cursor, setCursor] = useState({\n    x: 0,\n    y: 0,\n  });\n  const [viewer, setViewer] = useState([]);\n  const [numPages, setNumPages] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(0);\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setPageNumber(1);\n  }\n  function handleOnChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setDataUpload({\n      ...dataUpload,\n      [name]: value,\n    });\n  }\n\n  function handleContent() {\n    const listViewerId = [getUser().Id];\n    viewer.map((view) => {\n      listViewerId.push(view.id);\n    });\n\n    if (selectedDate === null) {\n      setAlert({\n        ...alert,\n        date: true,\n        message: \"Please choose date expiration invoice\",\n      });\n      setTimeout(() => {\n        setAlert({\n          ...alert,\n          date: false,\n        });\n      }, 3000);\n    } else if (\n      Moment(selectedDate).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z') <\n      Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z')\n    ) {\n      setAlert({\n        ...alert,\n        date: true,\n        message: \"Expiration date can't less than current date\",\n      });\n      setTimeout(() => {\n        setAlert({\n          ...alert,\n          date: false,\n          message: \"\",\n        });\n      }, 3000);\n    } else if (position.x === 0 && position.y === 0) {\n      setAlert({\n        ...alert,\n        location: true,\n      });\n      setTimeout(() => {\n        setAlert({\n          ...alert,\n          location: false,\n        });\n      }, 3000);\n    } else {\n      history.push({\n        pathname: \"/invoice-confirm\",\n        state: {\n          file: file,\n          data: dataUpload,\n          date: Moment(selectedDate).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\n          viewer: viewer,\n          listViewerId: listViewerId,\n          signLocation: position,\n          numberPage: pageNumber,\n        },\n      });\n    }\n  }\n  \n  useEffect(() => {\n    const companyId = getUser().CompanyId;\n    async function fetListUser() {\n      try {\n        const response = await userListAPI.getUserByCompanyId(companyId);\n        setListSigner(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetListUser();\n  }, []);\n  const [locaA, setLocaA] = useState(true);\n  function choseLocation(e) {\n    e.preventDefault();\n    setColor(\"#808080ad\");\n    setPosition({ x: 0, y: 0 });\n    setLocaA(!locaA);\n  }\n  function getLocation(e) {\n    setPosition({\n      x: e.nativeEvent.offsetX,\n      y: e.nativeEvent.offsetY,\n    });\n    setLocaA(true);\n  }\n  useEffect(() => {\n    addEventListeners();\n    return () => removeEventListeners();\n  }, []);\n\n  const addEventListeners = () => {\n    document.addEventListener(\"mousemove\", onMouseMove);\n  };\n\n  const removeEventListeners = () => {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n  };\n  const onMouseMove = (e) => {\n    setCursor({ x: e.clientX, y: e.clientY });\n  };\n\n  return (\n    <div>\n      <StepInvoice activeStep={activeStep} />\n      <div className=\"main-panel\">\n        <Header />\n\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={alert.file}\n          TransitionComponent={TransitionLeft}\n          autoHideDuration={3000}\n        >\n          <Alert variant=\"filled\" severity=\"error\">\n            {alert.message}\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={alert.title}\n          autoHideDuration={3000}\n          TransitionComponent={TransitionLeft}\n        >\n          <Alert variant=\"filled\" severity=\"error\">\n            {alert.message}\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={alert.signer}\n          autoHideDuration={3000}\n          TransitionComponent={TransitionLeft}\n        >\n          <Alert variant=\"filled\" severity=\"error\">\n            Please select a signer to sign invoice\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={alert.date}\n          autoHideDuration={3000}\n          TransitionComponent={TransitionLeft}\n        >\n          <Alert variant=\"filled\" severity=\"error\">\n            {alert.message}\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={alert.location}\n          autoHideDuration={3000}\n          TransitionComponent={TransitionLeft}\n        >\n          <Alert variant=\"filled\" severity=\"error\">\n            Please choose location sign to continue\n          </Alert>\n        </Snackbar>\n\n        <Container fluid={true}>\n          <div\n            hidden={locaA}\n            className=\"cursor\"\n            style={{\n              left: `${cursor.x}px`,\n              top: `${cursor.y}px`,\n            }}\n          />\n          <Row>\n            <Col className=\"form-upload\">\n              <Tooltip title=\"Select location sign\" placement=\"right\">\n                <IconButton\n                  style={{ float: \"left\", background: color }}\n                  color=\"secondary\"\n                  onClick={choseLocation}\n                  hidden={pageNumber === 0 ? true : false}\n                >\n                  <EditLocationIcon color=\"error\" fontSize=\"large\" />\n                </IconButton>\n              </Tooltip>\n              <div\n                hidden={activeStep === 0 ? false : true}\n                style={{ marginTop: \"10%\" }}\n              >\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                    float: \"left\",\n                  }}\n                >\n                  DOCUMENT INFORMATION\n                </Label>\n\n                <TextField\n                  variant=\"outlined\"\n                  label=\"Document type\"\n                  value=\"Invoice\"\n                  fullWidth\n                  style={{ marginTop: \"20px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <InsertDriveFileIcon fontSize=\"large\" color=\"primary\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n\n                <input\n                  accept=\".pdf\"\n                  id=\"icon-button-file\"\n                  type=\"file\"\n                  style={{ display: \"none\", width: 0 }}\n                  onChange={(e) => {\n                    if(e.target.files.length !==0){\n                      if (e.target.files[0].type !== \"application/pdf\") {\n                        setAlert({\n                          ...alert,\n                          file: true,\n                          message: \"Please choose file PDF\",\n                        });\n                        setTimeout(() => {\n                          setAlert({\n                            ...alert,\n                            file: false,\n                            message: \"\",\n                          });\n                        }, 3000);\n                      } else if (e.target.files[0].size > 10485760) {\n                        setAlert({\n                          ...alert,\n                          file: true,\n                          message: \"File don't larger 10MB\",\n                        });\n                        setTimeout(() => {\n                          setAlert({\n                            ...alert,\n                            file: false,\n                            message: \"\",\n                          });\n                        }, 3000);\n                      } else {\n                        setFile(e.target.files);\n                        setFileName(e.target.files[0].name);\n                        setShow(true);\n                      }\n                    }\n                  }}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  label=\"Choose file\"\n                  error={alert.file}\n                  value={fileName}\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <label htmlFor=\"icon-button-file\">\n                          <IconButton color=\"primary\" component=\"span\">\n                            <BackupIcon fontSize=\"large\" />\n                          </IconButton>\n                        </label>\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                  style={{ marginTop: \"30px\" }}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    if (file.length === 0) {\n                      setAlert({\n                        ...alert,\n                        file: true,\n                        message: \"Please choose file upload !!!\",\n                      });\n                      setTimeout(() => {\n                        setAlert({\n                          ...alert,\n                          file: false,\n                          message: \"\",\n                        });\n                      }, 3000);\n                    } else {\n                      setActiveStep(activeStep + 1);\n                    }\n                  }}\n                  style={{ marginTop: \"30px\" }}\n                >\n                  Next\n                </Button>\n              </div>\n              <div\n                hidden={activeStep === 1 ? false : true}\n                style={{ marginTop: \"10%\" }}\n              >\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                    float: \"left\",\n                  }}\n                >\n                  TITLE OF INVOICE\n                </Label>\n                <TextField\n                  variant=\"outlined\"\n                  label=\"Title invoice\"\n                  type=\"text\"\n                  name=\"title\"\n                  required\n                  error={alert.title}\n                  fullWidth\n                  style={{ marginTop: \"20px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <TitleIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                  onChange={handleOnChange}\n                />\n                <Button\n                  variant=\"contained\"\n                  hidden={activeStep === 0 ? true : false}\n                  color=\"primary\"\n                  style={{ marginTop: \"30px\" }}\n                  onClick={() => setActiveStep(activeStep - 1)}\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\n                  color=\"primary\"\n                  onClick={() => {\n                    if (dataUpload.title.trim() === \"\") {\n                      setAlert({\n                        ...alert,\n                        title: true,\n                        message: \"Please input title invoice\",\n                      });\n                      setTimeout(() => {\n                        setAlert({\n                          ...alert,\n                          title: false,\n                          message: \"\",\n                        });\n                      }, 3000);\n                    } else if (dataUpload.title.length > 255) {\n                      setAlert({\n                        ...alert,\n                        title: true,\n                        message: \"Title max length 255 characters !!!\",\n                      });\n                      setTimeout(() => {\n                        setAlert({\n                          ...alert,\n                          title: false,\n                          message: \"\",\n                        });\n                      }, 3000);\n                    } else {\n                      setActiveStep(activeStep + 1);\n                    }\n                  }}\n                >\n                  Next\n                </Button>\n              </div>\n              <div\n                hidden={activeStep === 2 ? false : true}\n                style={{ marginTop: \"10%\" }}\n              >\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                    float: \"left\",\n                    marginBottom: \"30px\",\n                  }}\n                >\n                  SELECT SIGNER TO SIGN INVOICE\n                </Label>\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={listSinger}\n                  getOptionLabel={(option) => option.name}\n                  onChange={(event, newValue) => {\n                    setDataUpload({ ...dataUpload, signer: newValue });\n                  }}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Signer name\"\n                      variant=\"outlined\"\n                      name=\"signer\"\n                      error={alert.signer}\n                    />\n                  )}\n                />\n\n                <Button\n                  variant=\"contained\"\n                  hidden={activeStep === 0 ? true : false}\n                  color=\"primary\"\n                  style={{ marginTop: \"30px\" }}\n                  onClick={() => setActiveStep(activeStep - 1)}\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\n                  color=\"primary\"\n                  onClick={() => {\n                    if (dataUpload.signer === null) {\n                      setAlert({\n                        ...alert,\n                        signer: true,\n                      });\n                      setTimeout(() => {\n                        setAlert({\n                          ...alert,\n                          signer: false,\n                        });\n                      }, 3000);\n                    } else {\n                      setActiveStep(activeStep + 1);\n                    }\n                  }}\n                >\n                  Next\n                </Button>\n              </div>\n              <div\n                hidden={activeStep === 3 ? false : true}\n                style={{ marginTop: \"10%\" }}\n              >\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                    float: \"left\",\n                    marginBottom: \"30px\",\n                  }}\n                >\n                  VIEWER CAN VIEW INVOICE\n                </Label>\n                <Autocomplete\n                  multiple\n                  id=\"tags-outlined\"\n                  options={listSinger}\n                  getOptionLabel={(option) => option.name}\n                  filterSelectedOptions\n                  onChange={(event, newValue) => {\n                    setViewer(newValue);\n                  }}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      variant=\"outlined\"\n                      label=\"Select viewer\"\n                      placeholder=\"Viewer\"\n                    />\n                  )}\n                />\n                <Button\n                  variant=\"contained\"\n                  hidden={activeStep === 0 ? true : false}\n                  color=\"primary\"\n                  style={{ marginTop: \"30px\" }}\n                  onClick={() => setActiveStep(activeStep - 1)}\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\n                  color=\"primary\"\n                  onClick={() => {\n                    setActiveStep(activeStep + 1);\n                  }}\n                >\n                  Next\n                </Button>\n              </div>\n              <div\n                hidden={activeStep === 4 ? false : true}\n                style={{ marginTop: \"10%\" }}\n              >\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                    float: \"left\",\n                  }}\n                >\n                  DATE EXPIRATION INVOICE\n                </Label>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid container justify=\"space-around\">\n                    <KeyboardDatePicker\n                      fullWidth\n                      margin=\"normal\"\n                      id=\"date-picker-dialog\"\n                      label=\"Date expiration\"\n                      format=\"MM/dd/yyyy\"\n                      value={selectedDate}\n                      name=\"date\"\n                      error={alert.hidden}\n                      helperText={alert.text}\n                      onChange={handleDateChange}\n                      KeyboardButtonProps={{\n                        \"aria-label\": \"change date\",\n                      }}\n                    />\n                  </Grid>\n                </MuiPickersUtilsProvider>\n                <Button\n                  variant=\"contained\"\n                  hidden={activeStep === 0 ? true : false}\n                  color=\"primary\"\n                  style={{ marginTop: \"30px\" }}\n                  onClick={() => setActiveStep(activeStep - 1)}\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\n                  color=\"primary\"\n                  onClick={handleContent}\n                >\n                  Next\n                </Button>\n              </div>\n            </Col>\n            <Col>\n              <Form className=\"form-doc\">\n                <FormGroup row>\n                  <div hidden={show} style={{ marginTop: \"4rem\" }}>\n                    <img src={demo} alt=\"demo\" width=\"600\" height=\"600\" />\n                  </div>\n\n                  <Paper elevation={3}>\n                    <Document\n                      file={file[0]}\n                      onLoadSuccess={onDocumentLoadSuccess}\n                      onClick={(e) => {\n                        if (locaA === false) {\n                          getLocation(e);\n                          setColor(\"#3541da\");\n                        }\n                      }}\n                      noData={false}\n                    >\n                      <Page pageNumber={pageNumber} />\n                    </Document>\n                  </Paper>\n                  <div\n                    hidden={pageNumber === 0 ? true : false}\n                    style={{ marginLeft: \"30%\" }}\n                  >\n                    <Typography\n                      style={{\n                        marginTop: \"5px\",\n                      }}\n                    >\n                      Page: {pageNumber}/{numPages}\n                    </Typography>\n                    <Pagination\n                      variant=\"outlined\"\n                      count={numPages}\n                      page={pageNumber}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </FormGroup>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n}\nexport default CreateInvoice;\n","/Users/macos/Desktop/EOfficeWeb/src/components/CreateDocument/CreateContract.js",["278","279","280","281","282","283","284","285","286","287","288"],"import { Container, Form, FormGroup, Row, Col, Label } from \"reactstrap\";\nimport Header from \"../Nav/Header\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport \"../../css/CreateDoc.css\";\nimport VerticalLinearStepper from \"../Sidebar/Stepper\";\nimport { useHistory } from \"react-router-dom\";\nimport companyListAPI from \"../../api/companyListAPI\";\nimport userListAPI from \"../../api/userListAPI\";\nimport { getUser } from \"../../utils/Common\";\nimport demo from \"../../images/demo.png\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport EditLocationIcon from \"@material-ui/icons/EditLocation\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport BackupIcon from \"@material-ui/icons/Backup\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Moment from \"moment\";\nimport { InputAdornment, Slide, Snackbar, Tooltip } from \"@material-ui/core\";\nimport TitleIcon from \"@material-ui/icons/Title\";\nimport { toast } from \"react-toastify\";\nimport Alert from \"@material-ui/lab/Alert\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction TransitionLeft(props) {\n  return <Slide {...props} direction=\"right\" />;\n}\ntoast.configure();\nfunction CreateDocument() {\n  const [listCompany, setListCompany] = useState([]);\n  const [fileName, setFileName] = useState(\"\");\n  const [listSinger, setListSigner] = useState([]);\n  const [listGuest, setListGuest] = useState([]);\n  const history = useHistory();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n  const [locaA, setLocaA] = useState(true);\n  const [locaB, setLocaB] = useState(true);\n  const [show, setShow] = useState(false);\n  const [activeStep, setActiveStep] = useState(0);\n  const [file, setFile] = useState([]);\n  const [dataUpload, setDataUpload] = useState({\n    title: \"\",\n    signer: null,\n    company_guest: \"\",\n    signer_guest: null,\n  });\n  const [alert, setAlert] = useState({\n    file: false,\n    title: false,\n    signerA: false,\n    signerB: false,\n    company: false,\n    date: false,\n    location: false,\n    message: \"\",\n  });\n  const [positionA, setPositionA] = useState({\n    x: 0,\n    y: 0,\n  });\n  const [positionB, setPositionB] = useState({\n    x: 0,\n    y: 0,\n  });\n  const [cursor, setCursor] = useState({\n    x: 0,\n    y: 0,\n  });\n  const [color, setColor] = useState({\n    signerA: \"#808080ad\",\n    signerB: \"#808080ad\",\n  });\n  const [viewer, setViewer] = useState([]);\n  const [viewerGuest, setViewerGuest] = useState([]);\n  const [numPages, setNumPages] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(0);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setPageNumber(1);\n  }\n  const handleChange = (event, value) => {\n    setPageNumber(value);\n  };\n\n  function handleOnChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setDataUpload({\n      ...dataUpload,\n      [name]: value,\n    });\n  }\n\n  useEffect(() => {\n    async function fetListCompany() {\n      try {\n        const response = await companyListAPI.getAll();\n        setListCompany(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetListCompany();\n  }, []);\n\n  useEffect(() => {\n    async function fetListUser() {\n      const companyId = getUser().CompanyId;\n      try {\n        const response = await userListAPI.getUserByCompanyId(companyId);\n        setListSigner(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetListUser();\n  }, []);\n  useEffect(() => {\n    async function fetListGuest() {\n      const id = dataUpload.company_guest.id;\n      try {\n        const response = await userListAPI.getUserByCompanyId(id);\n        setListGuest(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetListGuest();\n  }, [dataUpload.company_guest]);\n\n  function handleContent() {\n    if (selectedDate === null) {\n      setAlert({\n        ...alert,\n        date: true,\n        message: \"Please select expiration date !!!\",\n      });\n      setTimeout(() => {\n        setAlert(\n          {\n            ...alert,\n            date: false,\n            message: \"\",\n          },\n          3000\n        );\n      });\n    } else if (\n      Moment(selectedDate).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z') <\n      Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z')\n    ) {\n      setAlert({\n        ...alert,\n        date: true,\n        message: \"Expiration date can't less than current date !!!\",\n      });\n      setTimeout(() => {\n        setAlert({\n          ...alert,\n          date: false,\n          message: \"\",\n        });\n      }, 3000);\n    } else if (\n      positionA.x === 0 &&\n      positionA.y === 0\n    ) {\n      setAlert({\n        ...alert,\n        location: true,\n        message: \"Please choose location sign to continue...\",\n      });\n      setTimeout(() => {\n        setAlert({\n          ...alert,\n          location: false,\n          message: \"\",\n        });\n      }, 3000);\n    }else if(positionB.x===0 && positionB.y===0){\n      setAlert({\n        ...alert,\n        location: true,\n        message: \"Please choose location sign to continue...\",\n      });\n      setTimeout(() => {\n        setAlert({\n          ...alert,\n          location: false,\n          message: \"\",\n        });\n      }, 3000);\n    } else {\n      const listViewer = [...viewer, ...viewerGuest];\n      history.push({\n        pathname: \"/contract-confirm\",\n        state: {\n          file: file,\n          data: dataUpload,\n          viewer: listViewer,\n          signLocationA: positionA,\n          signLocationB: positionB,\n          numberPage: pageNumber,\n          date: Moment(selectedDate).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\n        },\n      });\n    }\n  }\n\n  function getLocationA(e) {\n    setPositionA({\n      x: e.nativeEvent.offsetX,\n      y: e.nativeEvent.offsetY,\n    });\n    setLocaA(true);\n  }\n  function getLocationB(e) {\n    setPositionB({\n      x: e.nativeEvent.offsetX,\n      y: e.nativeEvent.offsetY,\n    });\n    setLocaB(true);\n  }\n\n  function handleA(e) {\n    e.preventDefault();\n    setColor({ ...color, signerA: \"#808080ad\" });\n    setPositionA({ x: 0, y: 0 });\n    setLocaA(!locaA);\n  }\n\n  function handleB(e) {\n    e.preventDefault();\n    setColor({ ...color, signerB: \"#808080ad\" });\n    setPositionB({ x: 0, y: 0 });\n    setLocaB(!locaB);\n  }\n  useEffect(() => {\n    addEventListeners();\n    return () => removeEventListeners();\n  }, []);\n\n  const addEventListeners = () => {\n    document.addEventListener(\"mousemove\", onMouseMove);\n  };\n\n  const removeEventListeners = () => {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n  };\n  const onMouseMove = (e) => {\n    setCursor({ x: e.clientX, y: e.clientY });\n  };\n\n  return (\n    <div>\n      <VerticalLinearStepper activeStep={activeStep} />\n      <div className=\"main-panel\">\n        <Header />\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={alert.file}\n          TransitionComponent={TransitionLeft}\n          autoHideDuration={3000}\n        >\n          <Alert variant=\"filled\" severity=\"error\">\n            {alert.message}\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={alert.title}\n          autoHideDuration={3000}\n          TransitionComponent={TransitionLeft}\n        >\n          <Alert variant=\"filled\" severity=\"error\">\n            {alert.message}\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={alert.signerA}\n          autoHideDuration={3000}\n          TransitionComponent={TransitionLeft}\n        >\n          <Alert variant=\"filled\" severity=\"error\">\n            {alert.message}\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={alert.company}\n          autoHideDuration={3000}\n          TransitionComponent={TransitionLeft}\n        >\n          <Alert variant=\"filled\" severity=\"error\">\n            Please select company guest !!!\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={alert.signerB}\n          autoHideDuration={3000}\n          TransitionComponent={TransitionLeft}\n        >\n          <Alert variant=\"filled\" severity=\"error\">\n            {alert.message}\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={alert.date}\n          autoHideDuration={3000}\n          TransitionComponent={TransitionLeft}\n        >\n          <Alert variant=\"filled\" severity=\"error\">\n            {alert.message}\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={alert.location}\n          autoHideDuration={3000}\n          TransitionComponent={TransitionLeft}\n        >\n          <Alert variant=\"filled\" severity=\"error\">\n            {alert.message}\n          </Alert>\n        </Snackbar>\n        <Container fluid={true}>\n          <div\n            hidden={locaA}\n            className=\"cursor\"\n            style={{\n              left: `${cursor.x}px`,\n              top: `${cursor.y}px`,\n            }}\n          />\n          <div\n            hidden={locaB}\n            className=\"cursor\"\n            style={{\n              left: `${cursor.x}px`,\n              top: `${cursor.y}px`,\n            }}\n          />\n          <Row>\n            <Col className=\"form-upload\">\n              <Tooltip title=\"Choose location sign A\" placement=\"top-start\">\n                <IconButton\n                  style={{\n                    float: \"left\",\n                    background: color.signerA,\n                    marginTop: \"20px\",\n                  }}\n                  color=\"secondary\"\n                  onClick={handleA}\n                  hidden={pageNumber === 0 ? true : false}\n                >\n                  <EditLocationIcon color=\"error\" fontSize=\"large\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Choose location sign B\" placement=\"top-start\">\n                <IconButton\n                  style={{\n                    float: \"left\",\n                    background: color.signerB,\n                    marginLeft: \"20px\",\n                    marginTop: \"20px\",\n                  }}\n                  color=\"secondary\"\n                  onClick={handleB}\n                  hidden={pageNumber === 0 ? true : false}\n                >\n                  <EditLocationIcon color=\"error\" fontSize=\"large\" />\n                </IconButton>\n              </Tooltip>\n\n              <div\n                hidden={activeStep === 0 ? false : true}\n                style={{ marginTop: \"15%\" }}\n              >\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                    float: \"left\",\n                  }}\n                >\n                  DOCUMENT INFORMATION\n                </Label>\n                <TextField\n                  variant=\"outlined\"\n                  label=\"Document type\"\n                  value=\"Contract\"\n                  fullWidth\n                  style={{ marginTop: \"20px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <InsertDriveFileIcon fontSize=\"large\" color=\"primary\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n\n                <input\n                  accept=\"application/pdf\"\n                  id=\"icon-button-file\"\n                  type=\"file\"\n                  style={{ display: \"none\", width: 0 }}\n                  onChange={(e) => {\n                    if(e.target.files.length!==0){\n                      if (e.target.files[0].type !== \"application/pdf\") {\n                        setAlert({\n                          ...alert,\n                          file: true,\n                          message: \"Please choose file PDF...\",\n                        });\n                        setTimeout(() => {\n                          setAlert({\n                            ...alert,\n                            file: false,\n                            message: \"\",\n                          });\n                        }, 3000);\n                      } else if (e.target.files[0].size > 10485760) {\n                        setAlert({\n                          ...alert,\n                          file: true,\n                          message: \"File don't larger 10MB\",\n                        });\n                        setTimeout(() => {\n                          setAlert({\n                            ...alert,\n                            file: false,\n                            message: \"\",\n                          });\n                        }, 3000);\n                      } else{\n                        setFile(e.target.files);\n                        setFileName(e.target.files[0].name);\n                        setShow(true);\n                      }\n                    }               \n                  }}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  label=\"Choose file\"\n                  error={alert.file}\n                  value={fileName}\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <label htmlFor=\"icon-button-file\">\n                          <IconButton color=\"primary\" component=\"span\">\n                            <BackupIcon fontSize=\"large\" />\n                          </IconButton>\n                        </label>\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                  style={{ marginTop: \"30px\" }}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    if (file.length === 0) {\n                      setAlert({\n                        ...alert,\n                        file: true,\n                        message: \"Please choose file upload !!!\",\n                      });\n                      setTimeout(() => {\n                        setAlert({\n                          ...alert,\n                          file: false,\n                          message: \"\",\n                        });\n                      }, 3000);\n                    } else {\n                      setActiveStep(activeStep + 1);\n                    }\n                  }}\n                  style={{ marginTop: \"30px\" }}\n                >\n                  Next\n                </Button>\n              </div>\n              <div\n                hidden={activeStep === 1 ? false : true}\n                style={{ marginTop: \"15%\" }}\n              >\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                    float: \"left\",\n                  }}\n                >\n                  TITLE OF CONTRACT\n                </Label>\n                <TextField\n                  variant=\"outlined\"\n                  label=\"Title Contract\"\n                  type=\"text\"\n                  name=\"title\"\n                  required\n                  error={alert.title}\n                  fullWidth\n                  style={{ marginTop: \"20px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <TitleIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                  onChange={handleOnChange}\n                />\n                <Button\n                  variant=\"contained\"\n                  hidden={activeStep === 0 ? true : false}\n                  color=\"primary\"\n                  style={{ marginTop: \"30px\" }}\n                  onClick={() => setActiveStep(activeStep - 1)}\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\n                  color=\"primary\"\n                  onClick={() => {\n                    if (dataUpload.title.trim() === \"\") {\n                      setAlert({\n                        ...alert,\n                        title: true,\n                        message: \"Please input title of contract !!!\",\n                      });\n                      setTimeout(() => {\n                        setAlert({\n                          ...alert,\n                          title: false,\n                          message: \"\",\n                        });\n                      }, 3000);\n                    } else if (dataUpload.title.length > 255) {\n                      setAlert({\n                        ...alert,\n                        title: true,\n                        message: \"Title max length 255 characters !!!\",\n                      });\n                      setTimeout(() => {\n                        setAlert({\n                          ...alert,\n                          title: false,\n                          message: \"\",\n                        });\n                      }, 3000);\n                    } else {\n                      setActiveStep(activeStep + 1);\n                    }\n                  }}\n                >\n                  Next\n                </Button>\n              </div>\n              <div\n                hidden={activeStep === 2 ? false : true}\n                style={{ marginTop: \"15%\" }}\n              >\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                    float: \"left\",\n                    marginBottom: \"30px\",\n                  }}\n                >\n                  SELECT SIGNER TO SIGN CONTRACT\n                </Label>\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={listSinger}\n                  getOptionLabel={(option) => option.name}\n                  onChange={(event, newValue) => {\n                    setDataUpload({ ...dataUpload, signer: newValue });\n                  }}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Signer name\"\n                      variant=\"outlined\"\n                      name=\"signer\"\n                      error={alert.signerA}\n                    />\n                  )}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  style={{ marginTop: \"30px\" }}\n                  onClick={() => setActiveStep(activeStep - 1)}\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\n                  color=\"primary\"\n                  onClick={() => {\n                    if (dataUpload.signer === null) {\n                      setAlert({\n                        ...alert,\n                        signerA: true,\n                        message: \"Please choose one signer contract !!!\",\n                      });\n                      setTimeout(() => {\n                        setAlert({\n                          ...alert,\n                          signerA: false,\n                          message: \"\",\n                        });\n                      }, 3000);\n                    } else {\n                      setActiveStep(activeStep + 1);\n                    }\n                  }}\n                >\n                  Next\n                </Button>\n              </div>\n              <div\n                hidden={activeStep === 3 ? false : true}\n                style={{ marginTop: \"15%\" }}\n              >\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                    float: \"left\",\n                    marginBottom: \"30px\",\n                  }}\n                >\n                  SELECT COMPANY GUEST\n                </Label>\n                <Autocomplete\n                  options={listCompany}\n                  getOptionLabel={(option) => option.name}\n                  onChange={(event, newValue) => {\n                    setDataUpload({ ...dataUpload, company_guest: newValue });\n                  }}\n                  disableClearable={true}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Company guest\"\n                      variant=\"outlined\"\n                      name=\"company_guest\"\n                      error={alert.company}\n                    />\n                  )}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  style={{ marginTop: \"30px\" }}\n                  onClick={() => setActiveStep(activeStep - 1)}\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\n                  color=\"primary\"\n                  onClick={() => {\n                    if (dataUpload.company_guest === \"\") {\n                      setAlert({\n                        ...alert,\n                        company: true,\n                      });\n                      setTimeout(() => {\n                        setAlert({\n                          ...alert,\n                          company: false,\n                        });\n                      }, 3000);\n                    } else {\n                      setActiveStep(activeStep + 1);\n                    }\n                  }}\n                >\n                  Next\n                </Button>\n              </div>\n              <div\n                hidden={activeStep === 4 ? false : true}\n                style={{ marginTop: \"15%\" }}\n              >\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                    float: \"left\",\n                    marginBottom: \"30px\",\n                  }}\n                >\n                  SELECT SIGNER GUEST\n                </Label>\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={listGuest}\n                  getOptionLabel={(option) => option.name}\n                  onChange={(event, newValue) => {\n                    setDataUpload({ ...dataUpload, signer_guest: newValue });\n                  }}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Signer guest\"\n                      variant=\"outlined\"\n                      name=\"signer_guest\"\n                      error={alert.signerB}\n                    />\n                  )}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  style={{ marginTop: \"30px\" }}\n                  onClick={() => setActiveStep(activeStep - 1)}\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\n                  color=\"primary\"\n                  onClick={(e) => {\n                    if (dataUpload.signer_guest === null) {\n                      setAlert({\n                        ...alert,\n                        signerB: true,\n                        message:\n                          \"Please choose one singer guest to sign contract !!!\",\n                      });\n                      setTimeout(() => {\n                        setAlert({\n                          ...alert,\n                          signerB: false,\n                          message: \"\",\n                        });\n                      }, 3000);\n                    } else {\n                      setActiveStep(activeStep + 1);\n                    }\n                  }}\n                >\n                  Next\n                </Button>\n              </div>\n              <div\n                hidden={activeStep === 5 ? false : true}\n                style={{ marginTop: \"15%\" }}\n              >\n                <Row>\n                  <Label\n                    style={{\n                      fontSize: \"30px\",\n                      fontWeight: \"bold\",\n                      color: \"blue\",\n                      float: \"left\",\n                      marginBottom: \"30px\",\n                      marginLeft: \"12px\",\n                    }}\n                  >\n                    VIEWER CAN VIEW CONTRACT\n                  </Label>\n                </Row>\n                <Row>\n                  <Col>\n                    <Autocomplete\n                      multiple\n                      id=\"tags-outlined\"\n                      options={listSinger}\n                      getOptionLabel={(option) => option.name}\n                      filterSelectedOptions\n                      onChange={(event, newValue) => {\n                        setViewer(newValue);\n                      }}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"Select viewer\"\n                          placeholder=\"Viewer \"\n                        />\n                      )}\n                    />\n                  </Col>\n                  <Col>\n                    <Autocomplete\n                      multiple\n                      id=\"tags-outlined\"\n                      options={listGuest}\n                      getOptionLabel={(option) => option.name}\n                      filterSelectedOptions\n                      onChange={(event, newValue) => {\n                        setViewerGuest(newValue);\n                      }}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"Select viewer\"\n                          placeholder=\"Viewer guest\"\n                        />\n                      )}\n                    />\n                  </Col>\n                </Row>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  style={{ marginTop: \"30px\" }}\n                  onClick={() => setActiveStep(activeStep - 1)}\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\n                  color=\"primary\"\n                  onClick={() => {\n                    setActiveStep(activeStep + 1);\n                  }}\n                >\n                  Next\n                </Button>\n              </div>\n              <div\n                hidden={activeStep === 6 ? false : true}\n                style={{ marginTop: \"15%\" }}\n              >\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                    float: \"left\",\n                  }}\n                >\n                  DATE EXPIRATION INVOICE\n                </Label>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid container justify=\"space-around\">\n                    <KeyboardDatePicker\n                      fullWidth\n                      margin=\"normal\"\n                      id=\"date-picker-dialog\"\n                      label=\"Date expiration\"\n                      format=\"MM/dd/yyyy\"\n                      value={selectedDate}\n                      name=\"date\"\n                      error={alert.date}\n                      onChange={handleDateChange}\n                      KeyboardButtonProps={{\n                        \"aria-label\": \"change date\",\n                      }}\n                    />\n                  </Grid>\n                </MuiPickersUtilsProvider>\n                <Button\n                  variant=\"contained\"\n                  hidden={activeStep === 0 ? true : false}\n                  color=\"primary\"\n                  style={{ marginTop: \"30px\" }}\n                  onClick={() => setActiveStep(activeStep - 1)}\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  style={{ marginTop: \"30px\", marginLeft: \"10px\" }}\n                  color=\"primary\"\n                  onClick={handleContent}\n                >\n                  Next\n                </Button>\n              </div>\n            </Col>\n            <Col>\n              <Form className=\"form-doc\">\n                <FormGroup row>\n                  <div hidden={show} style={{ marginTop: \"4rem\" }}>\n                    <img src={demo} alt=\"demo\" width=\"600\" height=\"600\" />\n                  </div>\n                  <Paper elevation={3}>\n                    <Document\n                      file={file[0]}\n                      onLoadSuccess={onDocumentLoadSuccess}\n                      noData={false}\n                      onClick={(e) => {\n                        if (locaA === false) {\n                          getLocationA(e);\n                          setColor({ ...color, signerA: \"#3541da\" });\n                        } else if (locaB === false) {\n                          getLocationB(e);\n                          setColor({ ...color, signerB: \"#3541da\" });\n                        }\n                      }}\n                    >\n                      <Page pageNumber={pageNumber} />\n                    </Document>\n                  </Paper>\n                  <div\n                    hidden={pageNumber === 0 ? true : false}\n                    style={{ marginLeft: \"30%\" }}\n                  >\n                    <Typography\n                      style={{\n                        marginTop: \"5px\",\n                      }}\n                    >\n                      Page: {pageNumber}/{numPages}\n                    </Typography>\n                    <Pagination\n                      variant=\"outlined\"\n                      count={numPages}\n                      page={pageNumber}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </FormGroup>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n}\nexport default CreateDocument;\n","/Users/macos/Desktop/EOfficeWeb/src/components/ForgotPassword/ForgotPassword.js",["289","290","291"],"import { useState } from \"react\";\nimport {\n  Col,\n  Container,\n  Form,\n  FormGroup,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row,\n} from \"reactstrap\";\nimport logo from \"../../images/logo.png\";\nimport \"../../css/ForgotPassword.css\";\nimport support from \"../../images/support.png\";\nimport CountDown from \"react-countdown\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\nimport firebase from \"../App/firebase\";\nimport { useHistory } from \"react-router\";\n\nfunction ForgotPassword() {\n  const [phone, setPhone] = useState(\"\");\n  const [check, setCheck] = useState({\n    error: false,\n    message: \"\",\n  });\n  const [opt, setOtp] = useState(null);\n  function handleOnChange(e) {\n    setPhone(e.target.value);\n  }\n  const [modal, setModal] = useState(false);\n  const toggle = () => {\n    if (!phone.trim().match(\"^[0-9]{10}$\")) {\n      setCheck({\n        error: true,\n        message: \"Invalid phone number\",\n      });\n      setTimeout(() => {\n        setCheck({\n          error: false,\n          message: \"\",\n        });\n      }, 3000);\n    } else {\n      window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\n        \"recaptcha\"\n      );\n      const appVerifier = window.recaptchaVerifier;\n      const number = \"+84\" + phone.substring(1);\n      firebase\n        .auth()\n        .signInWithPhoneNumber(number, appVerifier)\n        .then(function (confirmationResult) {\n          setModal(true);\n          // setTimeout(() => {\n          //   setModal(false);\n          // }, 59000);\n          window.confirmationResult = confirmationResult;\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n  function handleConfirm(e) {\n    e.preventDefault();\n    window.confirmationResult\n      .confirm(opt)\n      .then((result) => {\n        const user = result.user;\n        // \n        console.log(user)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  const renderer = ({ seconds }) => {\n    return <span>{seconds}</span>;\n  };\n  return (\n    <Container className=\"a\">\n      <Form className=\"forgot\">\n        <FormGroup>\n          <img src={logo} alt=\"\" />\n        </FormGroup>\n        <FormGroup>\n          <h3>Forgot Password?</h3>\n        </FormGroup>\n        <FormGroup>\n          <TextField\n            error={check.error}\n            helperText={check.message}\n            fullWidth\n            type=\"phone\"\n            required\n            variant=\"outlined\"\n            placeholder=\"Please enter phone number\"\n            onChange={handleOnChange}\n          />\n          <div\n            id=\"recaptcha\"\n            style={{ marginLeft: \"90px\", marginTop: \"10px\" }}\n          ></div>\n        </FormGroup>\n        <FormGroup className=\"next\">\n          <Button color=\"primary\" variant=\"contained\" onClick={toggle}>\n            Next\n          </Button>\n        </FormGroup>\n      </Form>\n      <Modal style={{ marginTop: \"18%\" }} isOpen={modal} toggle={toggle}>\n        <ModalHeader className=\"otp_banner\">Verifying OTP</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <span>\n                Please enter the OTP sent to Phone number to retrieve your\n                password\n              </span>\n            </FormGroup>\n            <FormGroup>\n              <Row>\n                <Col>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    name=\"otp\"\n                    onChange={(e) => setOtp(e.target.value)}\n                  />\n                </Col>\n                <Col\n                  sm={2}\n                  style={{\n                    marginTop: \"11px\",\n                    fontWeight: \"bold\",\n                    fontSize: \"20px\",\n                  }}\n                >\n                  {/* <CountDown date={Date.now() + 59000} renderer={renderer} />s */}\n                </Col>\n              </Row>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Row>\n            <Col sm={5}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => setModal(false)}\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col sm={5}>\n              <Button onClick={handleConfirm} variant=\"contained\" color=\"primary\">\n                Verifying\n              </Button>\n            </Col>\n          </Row>\n        </ModalFooter>\n      </Modal>\n      <img\n        style={{ position: \"fixed\", bottom: 0, left: 0 }}\n        src={support}\n        alt=\"\"\n        width=\"500\"\n        height=\"100\"\n      />\n    </Container>\n  );\n}\n\nexport default ForgotPassword;\n","/Users/macos/Desktop/EOfficeWeb/src/components/Document/Document.js",["292","293","294","295","296","297","298","299","300","301","302","303"],"import {\n  Container,\n  Row,\n  FormGroup,\n  Col,\n  Table,\n  Label,\n  Modal,\n  ModalHeader,\n  ModalFooter,\n} from \"reactstrap\";\nimport Header from \"../Nav/Header\";\nimport \"../../css/Document.css\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport { forwardRef, useEffect, useState } from \"react\";\nimport notsigned from \"../../images/status.png\";\nimport done from \"../../images/true.png\";\nimport invoicecompleted from \"../../images/invoicecompleted.png\";\nimport choo from \"../../images/choo.png\";\nimport StepDoc from \"../Sidebar/StepDoc\";\nimport invoiceAPI from \"../../api/invoiceAPI\";\nimport GetCreater from \"../GetData/GetCreater\";\nimport { useHistory } from \"react-router-dom\";\nimport contractAPI from \"../../api/contractAPI\";\nimport { getUser } from \"../../utils/Common\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Moment from \"moment\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Button from \"@material-ui/core/Button\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { InputAdornment } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport StepDoc2 from \"../Sidebar/StepDoc2\";\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\nfunction Document() {\n  const history = useHistory();\n  let [loading, setLoading] = useState(true);\n  const [isOpen, setIsOpen] = useState(false);\n  const [dele, setDel] = useState(false);\n  const toogle = () => setIsOpen(!isOpen);\n  const [postList, setPostList] = useState([]);\n  const [listAllDocument, setListAllDocument] = useState([]);\n  const [listDocumentById, setListDocumentById] = useState([]);\n  const [find, setFind] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage] = useState(10);\n  const indexOfLastPost = (page + 1) * rowsPerPage;\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\n  var post = postList\n    .sort((a, b) => {\n      return (\n        new Date(a.dateCreate).getTime() - new Date(b.dateCreate).getTime()\n      );\n    })\n    .reverse();\n  const currentPosts = post.slice(indexOfFirstPost, indexOfLastPost);\n  function changePage(event, newPage) {\n    setPage(newPage);\n  }\n  const [value, setValue] = useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  useEffect(() => {\n    async function getAllDocument() {\n      const id = getUser().CompanyId;\n      try {\n        await contractAPI.getContractByCompanyId(id).then(function (res) {\n          invoiceAPI.getInvoiceByCompanyId(id).then(function (res2) {\n            const list = [...res.data, ...res2.data];\n            setListAllDocument(list);\n            if (getUser().Role === \"1\") {\n              setPostList(list);\n              setData(list);\n            }\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n    getAllDocument();\n  }, []);\n\n  useEffect(() => {\n    async function getDocumentById() {\n      const id = getUser().Id;\n      try {\n        await invoiceAPI.getInvoiceByViewerId(id).then(function (res) {\n          invoiceAPI.getInvoiceBySignerId(id).then(function (res2) {\n            contractAPI.getContractByViewerId(id).then(function (res3) {\n              contractAPI.getContractBySignerId(id).then(function (res4) {\n                const list = [\n                  ...res.data,\n                  ...res2.data,\n                  ...res3.data,\n                  ...res4.data,\n                ];\n                setListDocumentById(list);\n                if (getUser().Role === \"2\") {\n                  setPostList(list);\n                  setData(list);\n                }\n              });\n            });\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getDocumentById();\n  }, [getUser().Id]);\n\n  function AddContract() {\n    history.push(\"/contract\");\n  }\n  function AddInvoice() {\n    history.push(\"/invoice\");\n  }\n  const [data, setData] = useState([]);\n  function All() {\n    setPage(0)\n    if (getUser().Role === \"1\") {\n      setPostList(listAllDocument);\n      setData(listAllDocument);\n    } else if (getUser().Role === \"2\") {\n      setPostList(listDocumentById);\n      setData(listDocumentById);\n    }\n    setValue(0);\n  }\n  function Invoice() {\n    setPage(0)\n    if (getUser().Role === \"1\") {\n      setPostList(\n        listAllDocument.filter((data) => {\n          if (data.invoiceURL) {\n            return data;\n          }\n        })\n      );\n      setData(\n        listAllDocument.filter((data) => {\n          if (data.invoiceURL) {\n            return data;\n          }\n        })\n      );\n    } else if (getUser().Role === \"2\") {\n      setPostList(\n        listDocumentById.filter((data) => {\n          if (data.invoiceURL) {\n            return data;\n          }\n        })\n      );\n      setData(\n        listDocumentById.filter((data) => {\n          if (data.invoiceURL) {\n            return data;\n          }\n        })\n      );\n    }\n    setValue(0);\n  }\n  function Contract() {\n    setPage(0)\n    if (getUser().Role === \"1\") {\n      setPostList(\n        listAllDocument.filter((data) => {\n          if (data.contractUrl) {\n            return data;\n          }\n        })\n      );\n      setData(\n        listAllDocument.filter((data) => {\n          if (data.contractUrl) {\n            return data;\n          }\n        })\n      );\n    } else if (getUser().Role === \"2\") {\n      setPostList(\n        listDocumentById.filter((data) => {\n          if (data.contractUrl) {\n            return data;\n          }\n        })\n      );\n      setData(\n        listDocumentById.filter((data) => {\n          if (data.contractUrl) {\n            return data;\n          }\n        })\n      );\n    }\n    setValue(0);\n  }\n  function Signed() {\n    setPage(0);\n    setPostList(\n      data.filter((data) => {\n        if (data.status === 3) {\n          return data;\n        }\n      })\n    );\n  }\n  function NotSigned() {\n    setPage(0);\n    setPostList(\n      data.filter((data) => {\n        if (data.status < 3) {\n          return data;\n        }\n      })\n    );\n  }\n\n  return (\n    <div>\n      <Sidebar />\n      <Dialog\n                open={isOpen}\n                onClose={toogle}\n                TransitionComponent={Transition}\n              >\n                <DialogContent>\n                  <img\n                    style={{ marginLeft: \"20%\" }}\n                    src={choo}\n                    alt=\"\"\n                    width=\"280px\"\n                    height=\"280px\"\n                  />\n                </DialogContent>\n                <DialogTitle>\n                  Please select the type of document you want create?\n                </DialogTitle>\n                <DialogActions style={{paddingBottom: '30px'}}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{ marginRight: \"15%\" }}\n                    onClick={AddContract}\n                  >\n                    Contract\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{ marginRight: \"20%\", width: \"104px\" }}\n                    onClick={AddInvoice}\n                  >\n                    Invoice\n                  </Button>\n                </DialogActions>\n              </Dialog>\n      <div className=\"main-content\">\n        <Header />\n        <Container fluid={true}>\n          <div className=\"form-create\">\n            <FormGroup row>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                onClick={toogle}\n              >\n                +Create\n              </Button>\n              <Col>\n                <Row>\n                  <TextField\n                    name=\"search\"\n                    type=\"text\"\n                    variant=\"outlined\"\n                    value={find}\n                    placeholder=\"Search by name document\"\n                    onChange={(event) => {\n                      setFind(event.target.value);\n                    }}\n                    size=\"small\"\n                    fullWidth\n                    style={{marginLeft:20}}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <SearchIcon color=\"primary\" />\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Row>\n              </Col>\n              \n                <FormControl\n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginLeft: 20}}\n                >\n                  <Select defaultValue={1}>\n                    <MenuItem onClick={All} value=\"1\">\n                      All\n                    </MenuItem>\n                    <MenuItem onClick={Contract} value=\"2\">\n                      Contract\n                    </MenuItem>\n                    <MenuItem onClick={Invoice} value=\"3\">\n                      Invoice\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              <Col>\n                <Row>\n                  <Paper square elevation={0} style={{ position: \"absolute\", right: 0, height:40}}>\n                    <Tabs\n                      value={value}\n                      indicatorColor=\"none\"\n                      textColor=\"primary\"\n                      onChange={handleChange}\n                    >\n                      <Tab value={3} onClick={Signed} label=\"Signed\" />\n                      <Tab value={2} onClick={NotSigned} label=\"Not signed\" />\n                    </Tabs>\n                  </Paper>\n                </Row>\n              </Col>\n            </FormGroup>\n            <TablePagination\n              hidden={find !== \"\" ? true : false}\n              component=\"div\"\n              count={postList.length}\n              page={page}\n              onChangePage={changePage}\n              rowsPerPage={rowsPerPage}\n              labelRowsPerPage=\"\"\n              rowsPerPageOptions={[]}\n            />\n          </div>\n          {loading ? (\n            <ScaleLoader color={\"#2512DF\"} loading={loading} size={40} />\n          ) : (\n            <Table hidden={find !== \"\" ? true : false} hover>\n              <tbody>\n                {currentPosts.map((doc, key) => (\n                  <tr key={key}>\n                    <td\n                      onClick={() => {\n                        if (doc.contractUrl) {\n                          history.push({\n                            pathname:\n                              \"/detail/contract/\" +\n                              doc.id +\n                              \"/\" +\n                              doc.title,\n                            state: doc,\n                          });\n                        } else if (doc.invoiceURL) {\n                          history.push({\n                            pathname:\n                              \"/detail/invoice/\" +\n                              doc.id +\n                              \"/\" +\n                              doc.title,\n                            state: doc,\n                          });\n                        }\n                      }}\n                    >\n                      <Label style={{ fontWeight: \"bold\" }}>Creator name</Label>\n                      <br />\n                      <Label>\n                        <GetCreater id={doc.creatorId} />\n                      </Label>\n                    </td>\n                    <td\n                      onClick={() => {\n                        if (doc.contractUrl) {\n                          history.push({\n                            pathname:\n                              \"/detail/contract/\" +\n                              doc.id +\n                              \"/\" +\n                              doc.title,\n                            state: doc,\n                          });\n                        } else if (doc.invoiceURL) {\n                          history.push({\n                            pathname:\n                              \"/detail/invoice/\" +\n                              doc.id +\n                              \"/\" +\n                              doc.title,\n                            state: doc,\n                          });\n                        }\n                      }}\n                    >\n                      <Label style={{ fontWeight: \"bold\" }}>\n                        Title document\n                      </Label>\n                      <br />\n                      <Label className=\"demo\">{doc.title}</Label>\n                    </td>\n                    <td\n                      onClick={() => {\n                        if (doc.contractUrl) {\n                          history.push({\n                            pathname:\n                              \"/detail/contract/\" +\n                              doc.id +\n                              \"/\" +\n                              doc.title,\n                            state: doc,\n                          });\n                        } else if (doc.invoiceURL) {\n                          history.push({\n                            pathname:\n                              \"/detail/invoice/\" +\n                              doc.id +\n                              \"/\" +\n                              doc.title,\n                            state: doc,\n                          });\n                        }\n                      }}\n                    >\n                      <Label style={{ fontWeight: \"bold\" }}>Status</Label>\n                      <br />\n                      <Label className=\"step\">\n                        {doc.contractUrl ? (\n                          <StepDoc activeStep={doc.status + 1} />\n                        ) : (\n                          <StepDoc2 activeStep={doc.status + 1} />\n                        )}\n                      </Label>\n                    </td>\n                    <td\n                      onClick={() => {\n                        if (doc.contractUrl) {\n                          history.push({\n                            pathname:\n                              \"/detail/contract/\" +\n                              doc.id +\n                              \"/\" +\n                              doc.title,\n                            state: doc,\n                          });\n                        } else if (doc.invoiceURL) {\n                          history.push({\n                            pathname:\n                              \"/detail/invoice/\" +\n                              doc.id +\n                              \"/\" +\n                              doc.title,\n                            state: doc,\n                          });\n                        }\n                      }}\n                    >\n                      <Label></Label>\n                      <br />\n                      <Label>\n                        {doc.invoiceURL ? (\n                          <img\n                            hidden={doc.status >= 3 ? false : true}\n                            src={invoicecompleted}\n                            alt=\"\"\n                          />\n                        ) : (\n                          <img\n                            hidden={doc.status >= 3 ? false : true}\n                            src={done}\n                            alt=\"\"\n                          />\n                        )}\n                        <img\n                          hidden={doc.status < 3 ? false : true}\n                          src={notsigned}\n                          alt=\"\"\n                        />\n                      </Label>\n                    </td>\n                    <td\n                      onClick={() => {\n                        if (doc.contractUrl) {\n                          history.push({\n                            pathname:\n                              \"/detail/contract/\" +\n                              doc.id +\n                              \"/\" +\n                              doc.title,\n                            state: doc,\n                          });\n                        } else if (doc.invoiceURL) {\n                          history.push({\n                            pathname:\n                              \"/detail/invoice/\" +\n                              doc.id +\n                              \"/\" +\n                              doc.title,\n                            state: doc,\n                          });\n                        }\n                      }}\n                    >\n                      <Label style={{ fontWeight: \"bold\" }}></Label>\n                      <br />\n                      <Label>\n                        {Moment(doc.dateCreate).format(\"DD/MM/YYYY\")}\n                      </Label>\n                    </td>\n                    <td>\n                      <Label></Label>\n                      <br />\n                      <Label hidden={doc.status < 3 ? false : true}>\n                        <DeleteIcon\n                          onClick={() => setDel(true)}\n                          fontSize=\"default\"\n                        />\n                      </Label>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n          <Table hover hidden={find === \"\" ? true : false}>\n            <tbody>\n              {postList\n                .filter((data) => {\n                  if (\n                    data.title.toLowerCase().includes(find.toLowerCase())\n                  ) {\n                    return data;\n                  }\n                })\n                .map((data, key) => (\n                  <tr key={key}>\n                    <td\n                      onClick={() => {\n                        if (data.contractUrl) {\n                          history.push({\n                            pathname:\n                              \"/detail/contract/\" +\n                              data.id +\n                              \"/\" +\n                              data.title,\n                            state: data,\n                          });\n                        } else if (data.invoiceURL) {\n                          history.push({\n                            pathname:\n                              \"/detail/invoice/\" +\n                              data.id +\n                              \"/\" +\n                              data.title,\n                            state: data,\n                          });\n                        }\n                      }}\n                    >\n                      <Label style={{ fontWeight: \"bold\" }}>Creator name</Label>\n                      <br />\n                      <Label>\n                        <GetCreater id={data.creatorId} />\n                      </Label>\n                    </td>\n                    <td\n                      onClick={() => {\n                        if (data.contractUrl) {\n                          history.push({\n                            pathname:\n                              \"/detail/contract/\" +\n                              data.id +\n                              \"/\" +\n                              data.title,\n                            state: data,\n                          });\n                        } else if (data.invoiceURL) {\n                          history.push({\n                            pathname:\n                              \"/detail/invoice/\" +\n                              data.id +\n                              \"/\" +\n                              data.title,\n                            state: data,\n                          });\n                        }\n                      }}\n                    >\n                      <Label style={{ fontWeight: \"bold\" }}>\n                        Title document\n                      </Label>\n                      <br />\n                      <Label className=\"demo\">{data.title}</Label>\n                    </td>\n                    <td\n                      onClick={() => {\n                        if (data.contractUrl) {\n                          history.push({\n                            pathname:\n                              \"/detail/contract/\" +\n                              data.id +\n                              \"/\" +\n                              data.title,\n                            state: data,\n                          });\n                        } else if (data.invoiceURL) {\n                          history.push({\n                            pathname:\n                              \"/detail/invoice/\" +\n                              data.id +\n                              \"/\" +\n                              data.title,\n                            state: data,\n                          });\n                        }\n                      }}\n                    >\n                      <Label style={{ fontWeight: \"bold\" }}>Status</Label>\n                      <br />\n                      <Label className=\"step\">\n                        <StepDoc activeStep={data.status + 1} />\n                      </Label>\n                    </td>\n                    <td\n                      onClick={() => {\n                        if (data.contractUrl) {\n                          history.push({\n                            pathname:\n                              \"/detail/contract/\" +\n                              data.id +\n                              \"/\" +\n                              data.title,\n                            state: data,\n                          });\n                        } else if (data.invoiceURL) {\n                          history.push({\n                            pathname:\n                              \"/detail/invoice/\" +\n                              data.id +\n                              \"/\" +\n                              data.title,\n                            state: data,\n                          });\n                        }\n                      }}\n                    >\n                      <Label></Label>\n                      <br />\n                      <Label>\n                        <img\n                          hidden={data.status >= 3 ? false : true}\n                          src={done}\n                          alt=\"\"\n                        />\n                        <img\n                          hidden={data.status < 3 ? false : true}\n                          src={notsigned}\n                          alt=\"\"\n                        />\n                      </Label>\n                    </td>\n                    <td\n                      onClick={() => {\n                        if (data.contractUrl) {\n                          history.push({\n                            pathname:\n                              \"/detail/contract/\" +\n                              data.id +\n                              \"/\" +\n                              data.title,\n                            state: data,\n                          });\n                        } else if (data.invoiceURL) {\n                          history.push({\n                            pathname:\n                              \"/detail/invoice/\" +\n                              data.id +\n                              \"/\" +\n                              data.title,\n                            state: data,\n                          });\n                        }\n                      }}\n                    >\n                      <Label style={{ fontWeight: \"bold\" }}></Label>\n                      <br />\n                      <Label>\n                        {Moment(data.dateCreate).format(\"DD/MM/YYYY\")}\n                      </Label>\n                    </td>\n                    <td>\n                      <Label></Label>\n                      <br />\n                      <Label hidden={data.status < 3 ? false : true}>\n                        <DeleteIcon\n                          onClick={() => setDel(true)}\n                          fontSize=\"default\"\n                        />\n                      </Label>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n          <Modal isOpen={dele}>\n            <ModalHeader>Are you sure delete document?</ModalHeader>\n            <ModalFooter>\n              <Button color=\"secondary\" variant=\"contained\" style={{marginRight:'5px'}} onClick={() => setDel(!dele)}>\n                No\n              </Button>\n              <Button color=\"primary\" variant=\"contained\">Yes</Button>\n            </ModalFooter>\n          </Modal>\n        </Container>\n      </div>\n    </div>\n  );\n}\nexport default Document;\n","/Users/macos/Desktop/EOfficeWeb/src/components/Dashboard/Dashboard.js",["304","305","306","307"],"import { Container, Form, FormGroup, Label, Row, Col, Table } from \"reactstrap\";\nimport Header from \"../Nav/Header\";\nimport \"../../css/Dashboard.css\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport notsigned from \"../../images/status.png\";\nimport doneinvoice from \"../../images/invoicecompleted.png\";\nimport done from \"../../images/true.png\";\nimport invoiceAPI from \"../../api/invoiceAPI\";\nimport { getUser } from \"../../utils/Common\";\nimport contractAPI from \"../../api/contractAPI\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport moment from \"moment\";\nimport notiAPI from \"../../api/notiAPI\";\n\nfunction Dashboard() {\n  const history = useHistory();\n  const [listAllInvoice, setListAllInvoice] = useState([]);\n  const [listAllContract, setListAllContract] = useState([]);\n  const [listContractById, setListContractById] = useState([]);\n  const [listInvoiceById, setListInvoiceById] = useState([]);\n  const [noti, setNoti] = useState([]);\n  const [currentPage] = useState(1);\n  const [postPerPage] = useState(5);\n  const indexOfLastPost = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n  const currentPostsContract = [];\n  const currentPostsInvoice = [];\n  let [loadingInvoice, setLoadingInvoice] = useState(true);\n  let [loadingContract, setLoadingContract] = useState(true);\n  var listNoti = noti\n    .sort((a, b) => {\n      return (\n        new Date(a.createdDate).getTime() - new Date(b.createdDate).getTime()\n      );\n    })\n    .reverse();\n  const currentPostsNoti = listNoti.slice(indexOfFirstPost, indexOfLastPost);\n  useEffect(() => {\n    async function fetListNoti() {\n      try {\n        const res = await notiAPI.getAll();\n        setNoti(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetListNoti();\n  }, []);\n\n  useEffect(() => {\n    async function getAllContrac() {\n      try {\n        await contractAPI\n          .getContractByCompanyId(getUser().CompanyId)\n          .then(function (res) {\n            setListAllContract(res.data);\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    setTimeout(() => {\n      setLoadingContract(false);\n    }, 1000);\n    getAllContrac();\n  }, []);\n\n  useEffect(() => {\n    async function getAllInvoice() {\n      try {\n        await invoiceAPI\n          .getInvoiceByCompanyId(getUser().CompanyId)\n          .then(function (res) {\n            setListAllInvoice(res.data);\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    setTimeout(() => {\n      setLoadingInvoice(false);\n    }, 1000);\n    getAllInvoice();\n  }, []);\n  \n  useEffect(() => {\n    async function getInvoiceById() {\n      try {\n        await invoiceAPI\n          .getInvoiceByViewerId(getUser().Id)\n          .then(function (res) {\n            invoiceAPI.getInvoiceBySignerId(getUser().Id).then(function (res2) {\n              const list = [...res.data, ...res2.data];\n              setListInvoiceById(list);\n            });\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getInvoiceById();\n  }, [getUser().Id]);\n\n  useEffect(() => {\n    async function getContractById() {\n      try {\n        await contractAPI\n          .getContractBySignerId(getUser().Id)\n          .then(function (res) {\n            contractAPI\n              .getContractByViewerId(getUser().Id)\n              .then(function (res2) {\n                const list = [...res.data, ...res2.data];\n                setListContractById(list);\n              });\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getContractById();\n  }, [getUser().Id]);\n\n  if (getUser().Role === \"1\") {\n    var postContract = listAllContract\n      .sort((a, b) => {\n        return (\n          new Date(a.dateCreate).getTime() - new Date(b.dateCreate).getTime()\n        );\n      })\n      .reverse();\n    var postInvoice = listAllInvoice\n      .sort((a, b) => {\n        return (\n          new Date(a.dateCreate).getTime() - new Date(b.dateCreate).getTime()\n        );\n      })\n      .reverse();\n    currentPostsContract.push(\n      postContract.slice(indexOfFirstPost, indexOfLastPost)\n    );\n    currentPostsInvoice.push(\n      postInvoice.slice(indexOfFirstPost, indexOfLastPost)\n    );\n  }\n  if (getUser().Role === \"2\") {\n    var postContract = listContractById\n      .sort((a, b) => {\n        return (\n          new Date(a.dateCreate).getTime() - new Date(b.dateCreate).getTime()\n        );\n      })\n      .reverse();\n    var postInvoice = listInvoiceById\n      .sort((a, b) => {\n        return (\n          new Date(a.dateCreate).getTime() - new Date(b.dateCreate).getTime()\n        );\n      })\n      .reverse();\n    currentPostsContract.push(\n      postContract.slice(indexOfFirstPost, indexOfLastPost)\n    );\n    currentPostsInvoice.push(\n      postInvoice.slice(indexOfFirstPost, indexOfLastPost)\n    );\n  }\n\n  return (\n    <div>\n      <Sidebar />\n      <div className=\"main-panel\">\n        <Header />\n        <Container fluid={true}>\n          <div>\n            <Row>\n              <Col>\n                <Form>\n                  <FormGroup>\n                    <Label className=\"title\">Contract</Label>\n                  </FormGroup>\n                  <FormGroup>\n                    {loadingContract ? (\n                      <ScaleLoader\n                        color={\"#2512DF\"}\n                        loading={loadingContract}\n                        size={35}\n                      />\n                    ) : (\n                      <Table hover>\n                        <tbody style={{ textAlign: \"left\" }}>\n                          {currentPostsContract[0].map((data) => (\n                            <tr\n                              key={data.id}\n                              onClick={() =>\n                                history.push({\n                                  pathname:\n                                    \"/detail/contract/\" +\n                                    data.id +\n                                    \"/\" +\n                                    data.title,\n                                  state: data,\n                                })\n                              }\n                            >\n                              <td>\n                                <p className=\"demo-2\">{data.title}</p>\n                              </td>\n                              <td>\n                                {data.status < 3 ? (\n                                  <img src={notsigned} alt=\"\" />\n                                ) : (\n                                  <img src={done} alt=\"\" />\n                                )}\n                              </td>\n                              <td>\n                                {moment(data.dateCreate).format(\"DD/MM/YYYY\")}\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    )}\n                  </FormGroup>\n                </Form>\n                <div>\n                  <Link to=\"/document\">See more</Link>\n                </div>\n              </Col>\n              <Col>\n                <Form>\n                  <FormGroup>\n                    <Label className=\"title\">Invoice</Label>\n                  </FormGroup>\n                  <FormGroup>\n                    {loadingInvoice ? (\n                      <ScaleLoader\n                        color={\"#2512DF\"}\n                        loading={loadingInvoice}\n                        size={35}\n                      />\n                    ) : (\n                      <Table hover>\n                        <tbody style={{ textAlign: \"left\" }}>\n                          {currentPostsInvoice[0].map((data) => (\n                            <tr\n                              key={data.id}\n                              onClick={() =>\n                                history.push({\n                                  pathname:\n                                    \"/detail/invoice/\" +\n                                    data.id +\n                                    \"/\" +\n                                    data.title,\n                                  state: data,\n                                })\n                              }\n                            >\n                              <td>\n                                <p className=\"demo-2\">{data.title}</p>\n                              </td>\n                              <td>\n                                {data.status < 3 ? (\n                                  <img src={notsigned} alt=\"\" />\n                                ) : (\n                                  <img src={doneinvoice} alt=\"\" />\n                                )}\n                              </td>\n                              <td>\n                                {moment(data.dateCreate).format(\"DD/MM/YYYY\")}\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    )}\n                  </FormGroup>\n                </Form>\n                <div>\n                  <Link to=\"/document\">See more</Link>\n                </div>\n              </Col>\n            </Row>\n            <Col>\n              <Form>\n                <FormGroup>\n                  <Label className=\"title\">Activity Log</Label>\n                </FormGroup>\n                <FormGroup>\n                  <Table hover style={{ marginTop: 20 }}>\n                    <tbody>\n                      {currentPostsNoti.map((row) => (\n                        <tr\n                          key={row.id}\n                          style={{\n                            background:\n                              row.status === 0 ? \"#b3aeae75\" : \"white\",\n                          }}\n                        >\n                          <td>\n                            <Row style={{ fontWeight: \"bold\", marginLeft: 1 }}>\n                              {row.content}\n                            </Row>\n                            <Row style={{ marginLeft: 10 }}>{row.title}</Row>\n                            <Row style={{ marginLeft: 10 }}>\n                              <Link to=\"/\">View detail</Link>\n                            </Row>\n                          </td>\n                          <td style={{ position: \"absolute\", right: 10 }}>\n                            {moment(row.createdDate).format(\n                              \"DD/MM/YYYY HH:mm:ss\"\n                            )}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </FormGroup>\n              </Form>\n              <div>\n                <Link to=\"/notification\">See more</Link>\n              </div>\n            </Col>\n          </div>\n        </Container>\n      </div>\n    </div>\n  );\n}\nexport default Dashboard;\n","/Users/macos/Desktop/EOfficeWeb/src/components/CreateDocument/ContractContent.js",["308","309","310","311","312","313"],"import { Container, Form, FormGroup, Row, Col, Label } from \"reactstrap\";\nimport Header from \"../Nav/Header\";\nimport StepContract from \"../Sidebar/Stepper\";\nimport PDF from \"../PDF/PDF\";\nimport \"../../css/CreateDoc.css\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { forwardRef, useEffect, useState } from \"react\";\nimport userListAPI from \"../../api/userListAPI\";\nimport companyListAPI from \"../../api/companyListAPI\";\nimport { getUser } from \"../../utils/Common\";\nimport contractAPI from \"../../api/contractAPI\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\nimport Button from \"@material-ui/core/Button\";\nimport TitleIcon from \"@material-ui/icons/Title\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport {\n  InputAdornment,\n  Paper,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Table,\n  TextField,\n  withStyles,\n  TablePagination,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  Slide,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction ContractContent() {\n  const location = useLocation();\n  const history = useHistory();\n  const [create, setCreate] = useState(false);\n  const [signer, setSigner] = useState(\"\");\n  const [guest, setGuest] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage] = useState(2);\n  const indexOfLastPost = (page + 1) * rowsPerPage;\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\n  const viewer = location.state.viewer;\n  const currentPosts = viewer.slice(indexOfFirstPost, indexOfLastPost);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  function toogle() {\n    setCreate(!create);\n  }\n  useEffect(() => {\n    async function getSigner() {\n      try {\n        const res = await userListAPI.getUserById(\n          location.state.data.signer.id\n        );\n        setSigner(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getSigner();\n  }, []);\n  useEffect(() => {\n    async function getCompany() {\n      try {\n        const res = await companyListAPI.getCompanyById(getUser().CompanyId);\n        setCompany(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getCompany();\n  }, []);\n  useEffect(() => {\n    async function getGuest() {\n      try {\n        const res = await userListAPI.getUserById(\n          location.state.data.signer_guest.id\n        );\n        setGuest(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getGuest();\n  }, []);\n\n  async function handleCreated(e) {\n    e.preventDefault();\n    const file = location.state.file[0];\n    const convertBase64 = await base64(file);\n    const url = convertBase64.slice(28);\n    const position =\n      \"page=\" +\n      location.state.numberPage +\n      \",x=\" +\n      location.state.signLocationA.x +\n      \",y=\" +\n      location.state.signLocationA.y +\n      \"|page=\" +\n      location.state.numberPage +\n      \",x=\" +\n      location.state.signLocationB.x +\n      \",y=\" +\n      location.state.signLocationB.y;\n    const params = {\n      dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\n      creatorId: getUser().Id,\n      dateExpire: location.state.date,\n      title: location.state.data.title,\n      contractURL: url,\n      signLocation: position,\n    };\n    contractAPI\n      .addContract(params)\n      .then(function (res) {\n        const contractId = res.data.id;\n        const listSigner = [];\n        listSigner.push(location.state.data.signer.id);\n        listSigner.push(location.state.data.signer_guest.id);\n        const data = {\n          contractId: contractId,\n          listSignersId: listSigner,\n        };\n        axios\n          .put(\n            \"https://datnxeoffice.azurewebsites.net/api/contracts/addsignertocontract\",\n            data,\n            {\n              headers: {\n                Authorization: `Bearer ${getUser().IdToken}`,\n              },\n            }\n          )\n          .then(function (res) {\n            const listViewerId = [];\n            location.state.viewer.map((v) => {\n              listViewerId.push(v.id);\n            });\n            listViewerId.push(getUser().Id);\n            const viewer = {\n              contractId: contractId,\n              listViewersId: listViewerId,\n            };\n            axios\n              .put(\n                \"https://datnxeoffice.azurewebsites.net/api/contracts/addviewertocontract\",\n                viewer,\n                {\n                  headers: {\n                    Authorization: `Bearer ${getUser().IdToken}`,\n                  },\n                }\n              )\n              .then(function (res) {\n                toast.success(\"You has created contract successfully\", {\n                  position: toast.POSITION.TOP_CENTER,\n                });\n                history.push({\n                  pathname:\n                    \"/detail/contract/\" +\n                    contractId +\n                    \"/\" +\n                    location.state.data.title,\n                });\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  function base64(file) {\n    return new Promise((resolve) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n    });\n  }\n  return (\n    <div>\n      <StepContract activeStep={7} />\n      <div className=\"main-panel\">\n        <Header />\n        <Container fluid={true}>\n          <Row>\n            <Col>\n              <Paper style={{ marginTop: \"20px\" }} elevation={3}>\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                  }}\n                >\n                  Contract Content\n                </Label>\n                <TextField\n                  \n                  variant=\"standard\"\n                  value={location.state.data.title}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <TitleIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n                <TextField\n                  \n                  variant=\"standard\"\n                  value={company.name}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <BusinessIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n                <TextField\n                  \n                  variant=\"standard\"\n                  value={signer.name}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <BorderColorIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n                <TextField\n                  \n                  variant=\"standard\"\n                  value={location.state.data.company_guest.name}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <BusinessIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n                <TextField\n                  \n                  variant=\"standard\"\n                  value={guest.name}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <BorderColorIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n                <TableContainer>\n                  <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                      <TableRow>\n                        <StyledTableCell>Viewer name</StyledTableCell>\n                        <StyledTableCell align=\"center\">Email</StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          Phone number\n                        </StyledTableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {currentPosts.map((row) => (\n                        <StyledTableRow key={row.name}>\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                          </StyledTableCell>\n                          <StyledTableCell align=\"center\">\n                            {row.email}\n                          </StyledTableCell>\n                          <StyledTableCell align=\"center\">\n                            {row.phone}\n                          </StyledTableCell>\n                        </StyledTableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <TablePagination\n                  component=\"div\"\n                  count={viewer.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  labelRowsPerPage=\"\"\n                  onChangePage={handleChangePage}\n                  rowsPerPageOptions={[]}\n                />\n\n                <TextField\n                  label=\"Date expiration\"\n                  value={moment(location.state.date).format('DD/MM/YYYY HH:mm:ss')}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <EventAvailableIcon color=\"primary\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n              </Paper>\n              <Button\n                style={{ marginTop: \"20px\", marginRight: \"10px\" }}\n                color=\"secondary\"\n                variant=\"contained\"\n                onClick={() => history.push(\"/document\")}\n              >\n                Cancel\n              </Button>\n              <Button\n                style={{ marginTop: \"20px\" }}\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={toogle}\n              >\n                Create\n              </Button>\n            </Col>\n            <Col>\n              <Form className=\"form-doc\">\n                <FormGroup row>\n                  <div>\n                    <PDF pdf={location.state.file[0]} />\n                  </div>\n                </FormGroup>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n\n        <Dialog\n          open={create}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={toogle}\n          disableBackdropClick\n          disableEscapeKeyDown\n          fullWidth\n        >\n          <DialogTitle>{\"Do you want create Contract?\"}</DialogTitle>\n          <DialogActions>\n            <Button onClick={toogle} color=\"secondary\" variant=\"contained\">\n              No\n            </Button>\n            <Button onClick={handleCreated} color=\"primary\" variant=\"contained\">\n              Yes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </div>\n  );\n}\nexport default ContractContent;\n","/Users/macos/Desktop/EOfficeWeb/src/components/CreateDocument/InvoiceContent.js",["314","315","316","317"],"import {\n  Container,\n  Form,\n  FormGroup,\n  Row,\n  Col,\n  Label,\n} from \"reactstrap\";\nimport Header from \"../Nav/Header\";\nimport StepInvoice from \"../Sidebar/StepInvoice\";\nimport PDF from \"../PDF/PDF\";\nimport \"../../css/CreateDoc.css\";\nimport userListAPI from \"../../api/userListAPI\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { forwardRef, useEffect, useState } from \"react\";\nimport { getUser } from \"../../utils/Common\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast } from \"react-toastify\";\nimport invoiceAPI from \"../../api/invoiceAPI\";\nimport axios from \"axios\";\nimport Moment from \"moment\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  InputAdornment,\n  Slide,\n  TablePagination,\n} from \"@material-ui/core\";\nimport TitleIcon from \"@material-ui/icons/Title\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport Table from \"@material-ui/core/Table\";\nimport \"date-fns\";\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport moment from \"moment\";\nimport { makeStyles } from '@material-ui/core/styles';\n\ntoast.configure();\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\nfunction InvoiceContent() {\n  const location = useLocation();\n  const history = useHistory();\n  const [create, setCreate] = useState(false);\n  function toogle() {\n    setCreate(!create);\n  }\n  const [loading, setLoading] = useState(false);\n  const [signer, setSigner] = useState(\"\");\n  const viewer = location.state.viewer;\n  const [page, setPage] = useState(0);\n  const [rowsPerPage] = useState(4);\n  const indexOfLastPost = (page + 1) * rowsPerPage;\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\n  const currentPosts = viewer.slice(indexOfFirstPost, indexOfLastPost);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  useEffect(() => {\n    async function getSigner() {\n      try {\n        const res = await userListAPI.getUserById(\n          location.state.data.signer.id\n        );\n        setSigner(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getSigner();\n  }, []);\n\n  async function handleCreated(e) {\n    e.preventDefault();\n    setLoading(true);\n    const file = location.state.file[0];\n    const convertBase64 = await base64(file);\n    const url = convertBase64.slice(28);\n    const position =\n      \"page=\" +\n      location.state.numberPage +\n      \",x=\" +\n      location.state.signLocation.x +\n      \",y=\" +\n      location.state.signLocation.y;\n    const params = {\n      dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\n      creatorId: getUser().Id,\n      dateExpire: location.state.date,\n      title: location.state.data.title,\n      signerId: location.state.data.signer.id,\n      signLocation: position,\n      invoiceURL: url,\n    };\n    invoiceAPI\n      .addInvoice(params)\n      .then(function (res) {\n        const invoiceId = res.data.id;\n        const viewer = {\n          invoiceId: invoiceId,\n          listViewersId: location.state.listViewerId,\n        };\n        axios\n          .put(\n            \"https://datnxeoffice.azurewebsites.net/api/invoices/addviewertoinvoice\",\n            viewer,\n            {\n              headers: {\n                Authorization: `Bearer ${getUser().IdToken}`,\n              },\n            }\n          )\n          .then(function (res) {\n            toast.success(\"You has created invoice successfully\", {\n              position: toast.POSITION.TOP_CENTER,\n            });\n            history.push({\n              pathname:\n                \"/detail/invoice/\" +\n                invoiceId +\n                \"/\" +\n                location.state.data.title,\n            });\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  function base64(file) {\n    return new Promise((resolve) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n    });\n  }\n  return (\n    <div>\n      <StepInvoice activeStep={5} />\n      <div className=\"main-panel\">\n        <Header />\n        <Container fluid={true}>\n          <Row>\n            <Col>\n              <Paper style={{ marginTop: \"20px\" }} elevation={3}>\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                  }}\n                >\n                  Invoice Content\n                </Label>\n                <TextField\n                  variant=\"standard\"\n                  value={location.state.data.title}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <TitleIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n                <TextField\n                  value={signer.name}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <BorderColorIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n\n                <TableContainer style={{ marginTop: \"20px\", padding: \"10px\" }}>\n                  <Table aria-label=\"customized table\">\n                    <TableHead>\n                      <TableRow>\n                        <StyledTableCell>Viewer name</StyledTableCell>\n                        <StyledTableCell align=\"center\">Email</StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          Phone number\n                        </StyledTableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {currentPosts.map((row) => (\n                        <StyledTableRow key={row.name}>\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                          </StyledTableCell>\n                          <StyledTableCell align=\"center\">\n                            {row.email}\n                          </StyledTableCell>\n                          <StyledTableCell align=\"center\">\n                            {row.phone}\n                          </StyledTableCell>\n                        </StyledTableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <TablePagination\n                  component=\"div\"\n                  count={viewer.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  labelRowsPerPage=\"\"\n                  onChangePage={handleChangePage}\n                  rowsPerPageOptions={[]}\n                />\n                <TextField\n                  label=\"Date expiration\"\n                  value={moment(location.state.date).format('DD/MM/YYYY HH:mm:ss')}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <EventAvailableIcon color=\"primary\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n              </Paper>\n              <Button\n                style={{ marginTop: \"20px\", marginRight: \"10px\" }}\n                color=\"secondary\"\n                variant=\"contained\"\n                onClick={() => history.push(\"/document\")}\n              >\n                Cancel\n              </Button>\n              <Button\n                style={{ marginTop: \"20px\" }}\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={toogle}\n              >\n                Create\n              </Button>\n            </Col>\n            <Col>\n              <Form className=\"form-doc\">\n                <FormGroup row>\n                  <div>\n                    <PDF pdf={location.state.file[0]} />\n                  </div>\n                </FormGroup>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n        <Dialog\n          open={create}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={toogle}\n          disableBackdropClick\n          disableEscapeKeyDown\n          fullWidth\n        >\n          <DialogTitle>{\"Do you want create Invoice?\"}</DialogTitle>\n          <DialogActions>\n            <Button onClick={toogle} color=\"secondary\" variant=\"contained\">\n              No\n            </Button>\n            <Button onClick={handleCreated} color=\"primary\" variant=\"contained\">\n              Yes\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Backdrop className={useStyles().backdrop} open={loading}>\n          <CircularProgress color=\"inherit\"/>\n        </Backdrop>\n      </div>\n    </div>\n  );\n}\nexport default InvoiceContent;\n","/Users/macos/Desktop/EOfficeWeb/src/components/Notification/Notification.js",["318","319"],"import { Container, Input, Row, Table } from \"reactstrap\";\nimport Header from \"../Nav/Header\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport Button from \"@material-ui/core/Button\";\nimport \"../../css/Notification.css\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport notiAPI from \"../../api/notiAPI\";\nimport moment from \"moment\";\n\nfunction Notification() {\n  const [all, setAll] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage] = useState(15);\n  const indexOfLastPost = (page + 1) * rowsPerPage;\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\n  var listNoti = all\n    .sort((a, b) => {\n      return (\n        new Date(a.dateCreate).getTime() - new Date(b.dateCreate).getTime()\n      );\n    })\n    .reverse();\n  const currentPost = all.slice(indexOfFirstPost, indexOfLastPost);\n  useEffect(() => {\n    async function fetListNoti() {\n      try {\n        const res = await notiAPI.getAll();\n        setAll(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetListNoti();\n  }, []);\n  function changePage(event, newPage) {\n    setPage(newPage);\n  }\n  return (\n    <div>\n      <Sidebar />\n      <div className=\"main-panel\">\n        <Header />\n        <Container fluid={true}>\n          <Row>\n            <p\n              style={{\n                float: \"left\",\n                fontSize: \"18px\",\n                marginTop: \"20px\",\n                marginLeft: 10,\n              }}\n            >\n              Notification management\n            </p>\n            <Button\n              style={{ position: \"absolute\", right: 0, marginTop: \"20px\" }}\n              color=\"primary\"\n            >\n              Mark all announcements as read\n            </Button>\n          </Row>\n          <Row>\n            <Input\n              style={{ width: 160, marginLeft: 10 }}\n              type=\"select\"\n              name=\"filter-type\"\n            >\n              <option>-Filter by type-</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Input>\n            <Input\n              style={{ width: 160, marginLeft: 10 }}\n              type=\"select\"\n              name=\"filter-status\"\n            >\n              <option>-Filter by status-</option>\n              <option>All</option>\n              <option>Seen</option>\n              <option>Not seen</option>\n            </Input>\n            <TablePagination\n              component=\"div\"\n              style={{ position: \"absolute\", right: 0 }}\n              count={all.length}\n              page={page}\n              rowsPerPage={rowsPerPage}\n              onChangePage={changePage}\n              labelRowsPerPage=\"\"\n              rowsPerPageOptions={[]}\n            />\n          </Row>\n          <Table style={{ marginTop: 20 }}>\n            <tbody>\n              {all.map((row) => (\n                <tr\n                  key={row.id}\n                  style={{\n                    background: row.status === 0 ? \"#b3aeae75\" : \"white\",\n                  }}\n                >\n                  <td>\n                    <Row style={{ fontWeight: \"bold\", marginLeft: 1 }}>\n                      {row.content}\n                    </Row>\n                    <Row style={{ marginLeft: 10 }}>{row.title}</Row>\n                    <Row style={{ marginLeft: 10 }}>\n                      <Link to=\"/\">View detail</Link>\n                    </Row>\n                  </td>\n                  <td style={{ position: \"absolute\", right: 10 }}>\n                    {moment(row.createdDate).format(\"DD/MM/YYYY HH:mm:ss\")}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </div>\n    </div>\n  );\n}\nexport default Notification;\n","/Users/macos/Desktop/EOfficeWeb/src/components/Profile/Profile.js",["320"],"import { Button, Col, Container, Form, FormGroup, Label, Row} from \"reactstrap\";\nimport Header from \"../Nav/Header\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport companyListAPI from '../../api/companyListAPI';\nimport '../../css/Profile.css';\nimport { getUser, removeUserSession } from \"../../utils/Common\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport departmentAPI from \"../../api/departmentAPI\";\n\nconst user = getUser();\nfunction Profile() {\n    const history = useHistory();\n    const [avatar, setAvatar] = useState(getUser().Avatar);\n    const [company, setCompany] = useState('');\n    const [department, setDepartment] = useState('');\n    function logout() {\n        removeUserSession();\n        history.push('/');\n    }\n    useEffect(()=>{\n        async function fetCompany() {\n            const companyId = user.CompanyId;\n            try {\n                const response = await companyListAPI.getCompanyById(companyId);\n                setCompany(response.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetCompany();\n    },[]);\n\n    useEffect(()=>{\n        async function fetDepartment() {\n            const id = user.DepartmentId;\n            try {\n                const response = await departmentAPI.getDepartmentById(id);\n                setDepartment(response.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetDepartment();\n    },[]);\n    return(\n        <div>\n            <Sidebar/>\n            <div className=\"main-panel\">\n                <Header/>\n                <Container fluid={true}>\n                    <Row className=\"roww\">\n                        <Col>\n                            <img style={{borderRadius:'50%'}} src={avatar} alt=\"\" width=\"150px\" height=\"150px\"/>\n                            <br/>\n                            <Button color=\"link\">Change Password</Button>\n                            <br/>\n                            <Button color=\"link\" onClick={logout}>Logout</Button>\n                        </Col>\n                        <Col>\n                            <Form className=\"infor\">\n                                <FormGroup row>\n                                    <Label style={{float:'left',fontSize:'25px', fontWeight:'bold'}}>Personal information</Label>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Name</Label>\n                                    <Col style={{marginLeft:'185px'}}>\n                                        <Label style={{float:'left'}}>{user.Name}</Label>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Phone number</Label>\n                                    <Col style={{marginLeft:'121px'}}>\n                                        <Label style={{float:'left'}}>{user.Phone}</Label>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Email</Label>\n                                    <Col style={{marginLeft:'185px'}}>\n                                        <Label style={{float:'left'}}>{user.Email}</Label>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Company name</Label>\n                                    <Col style={{marginLeft:'111px'}}>\n                                        <Label style={{float:'left'}}>{company.name}</Label>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label style={{float:'left'}}>Department</Label>\n                                    <Col style={{marginLeft:'138px'}}>\n                                        <Label style={{float:'left'}}>{department.name}</Label>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label>Address</Label>\n                                    <Col style={{marginLeft:'164px'}}>\n                                        <Label style={{float:'left'}}>{user.Address}</Label>\n                                    </Col>\n                                </FormGroup>\n                                \n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    )\n}\nexport default Profile;","/Users/macos/Desktop/EOfficeWeb/src/components/DetailDocument/InvoiceDetail.js",["321","322"],"import { Container, Form, FormGroup, Row, Col, Label} from \"reactstrap\";\nimport Header from \"../Nav/Header\";\nimport StepDetail from \"../Sidebar/StepDetail\";\nimport PDF from \"../PDF/PDF\";\nimport notsigned from \"../../images/status.png\";\nimport done from \"../../images/invoicecompleted.png\";\nimport { useEffect, useState } from \"react\";\nimport {useParams } from \"react-router-dom\";\nimport userListAPI from \"../../api/userListAPI\";\nimport invoiceAPI from \"../../api/invoiceAPI\";\nimport GetCreater from \"../GetData/GetCreater\";\nimport fileDownload from \"js-file-download\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport { InputAdornment, TablePagination } from \"@material-ui/core\";\nimport TitleIcon from \"@material-ui/icons/Title\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport Table from \"@material-ui/core/Table\";\nimport \"date-fns\";\nimport Moment from \"moment\";\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport GetEmail from \"../GetData/GetEmail\";\nimport GetPhone from \"../GetData/GetPhone\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport PrintIcon from \"@material-ui/icons/Print\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction InvoiceDetail() {\n  const [activeStep, setActiveStep] = useState(1);\n  const [document, setDocument] = useState([]);\n  const [signer, setSigner] = useState([]);\n  const [viewer, setViewer] = useState([]);\n  const [signerId, setSignerId] = useState();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage] = useState(2);\n  const indexOfLastPost = (page + 1) * rowsPerPage;\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\n  const currentPosts = viewer.slice(indexOfFirstPost, indexOfLastPost);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const param = useParams();\n  useEffect(() => {\n    async function getInvoiceById() {\n      try {\n        const res = await invoiceAPI.getInvoiceById(param.id);\n        setDocument(res.data);\n        setViewer(res.data.viewers);\n        setActiveStep(res.data.status + 1);\n        setSignerId(res.data.signerId);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getInvoiceById();\n  }, []);\n  useEffect(() => {\n    async function getSigner() {\n      try {\n        const res = await userListAPI.getUserById(signerId);\n        setSigner(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getSigner();\n  }, [signerId]);\n\n  return (\n    <div>\n      <StepDetail activeStep={activeStep} />\n      <div className=\"main-panel\">\n        <Header />\n        <Container fluid={true}>\n          <Row>\n            <Col>\n              <Paper style={{ marginTop: \"20px\" }} elevation={3}>\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                  }}\n                >\n                  Invoice Content\n                </Label>\n                <br/>\n                <Label style={{marginTop:'10px'}}>\n                  <img hidden={document.status===3 ? false : true} src={done} alt=\"\" />\n                  <img hidden={document.status!==3 ? false : true} src={notsigned} alt=\"\" />\n                </Label>\n\n                <TextField               \n                  variant=\"standard\"\n                  value={document.title}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <TitleIcon color=\"primary\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n                <TextField\n                  \n                  value={signer.name}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <BorderColorIcon color=\"primary\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n\n                <TableContainer style={{ marginTop: \"20px\", padding: \"10px\" }}>\n                  <Table aria-label=\"customized table\">\n                    <TableHead>\n                      <TableRow>\n                        <StyledTableCell>Viewer name</StyledTableCell>\n                        <StyledTableCell align=\"center\">Email</StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          Phone number\n                        </StyledTableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {currentPosts.map((row) => (\n                        <StyledTableRow key={row.viewerId}>\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            <GetCreater id={row.viewerId} />\n                          </StyledTableCell>\n                          <StyledTableCell align=\"center\">\n                            <GetEmail id={row.viewerId} />\n                          </StyledTableCell>\n                          <StyledTableCell align=\"center\">\n                            <GetPhone id={row.viewerId} />\n                          </StyledTableCell>\n                        </StyledTableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <TablePagination\n                  component=\"div\"\n                  count={viewer.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  labelRowsPerPage=\"\"\n                  onChangePage={handleChangePage}\n                  rowsPerPageOptions={[]}\n                />\n                <TextField\n                  label=\"Date expiration\"\n                  value={Moment(document.dateSign).format(\"DD/MM/YYYY HH:mm:ss\")}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <EventAvailableIcon color=\"primary\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n              </Paper>\n              <Button\n                hidden={activeStep >= 3 ? false : true}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                style={{ marginTop: \"20px\", marginRight: \"10px\" }}\n                startIcon={<SaveIcon />}\n                onClick={(e) => {\n                  e.preventDefault();\n                  axios\n                    .get(document.invoiceURL, {\n                      responseType: \"blob\",\n                    })\n                    .then(function (res) {\n                      fileDownload(res.data, document.description + \".pdf\");\n                    })\n                    .catch(function (error) {\n                      console.log(error);\n                    });\n                }}\n              >\n                Save\n              </Button>\n              <Button\n                hidden={activeStep >= 3 ? false : true}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                style={{ marginTop: \"20px\" }}\n                startIcon={<PrintIcon />}\n              >\n                Print\n              </Button>\n            </Col>\n\n            <Col>\n              <Form className=\"form-doc\">\n                <FormGroup row>\n                  <div>\n                    <PDF pdf={document.invoiceURL} />\n                  </div>\n                </FormGroup>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n}\nexport default InvoiceDetail;\n","/Users/macos/Desktop/EOfficeWeb/src/utils/Common.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Login/Login.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Error/Error.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/DetailDocument/ContractDetail.js",["323","324"],"import { Container, Form, FormGroup, Row, Col, Label } from \"reactstrap\";\nimport Header from \"../Nav/Header\";\nimport PDF from \"../PDF/PDF\";\nimport notsigned from \"../../images/status.png\";\nimport done from \"../../images/true.png\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport userListAPI from \"../../api/userListAPI\";\nimport GetCreater from \"../GetData/GetCreater\";\nimport fileDownload from \"js-file-download\";\nimport contractAPI from \"../../api/contractAPI\";\nimport StepDetailContract from \"../Sidebar/StepDetailContract\";\nimport companyListAPI from \"../../api/companyListAPI\";\nimport axios from \"axios\";\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\nimport Button from \"@material-ui/core/Button\";\nimport TitleIcon from \"@material-ui/icons/Title\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport {\n  InputAdornment,\n  Paper,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Table,\n  TextField,\n  withStyles,\n  TablePagination,\n} from \"@material-ui/core\";\nimport GetEmail from \"../GetData/GetEmail\";\nimport GetPhone from \"../GetData/GetPhone\";\nimport moment from \"moment\";\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction ContractDetail() {\n  const location = useLocation();\n  const [activeStep, setActiveStep] = useState(1);\n  const [signer1, setSigner1] = useState([]);\n  const [signer2, setSigner2] = useState([]);\n  const [company1, setCompany1] = useState([]);\n  const [company2, setCompany2] = useState([]);\n  const [document, setDocument] = useState([]);\n  const [viewer, setViewer] = useState([]);\n  const [id1, setId1] = useState();\n  const [id2, setId2] = useState();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage] = useState(2);\n  const indexOfLastPost = (page + 1) * rowsPerPage;\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\n  const currentPosts = viewer.slice(indexOfFirstPost, indexOfLastPost);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const par = useParams();\n  useEffect(() => {\n    async function getDocument() {\n      try {\n        const res = await contractAPI.getContractById(par.id);\n        setDocument(res.data);\n        setViewer(res.data.contractViewers);\n        setId1(res.data.contractSigners[0].signerId);\n        setId2(res.data.contractSigners[1].signerId);\n        setActiveStep(res.data.status);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getDocument();\n  }, []);\n\n  useEffect(() => {\n    async function getSigner1() {\n      try {\n        const res = await userListAPI.getUserById(id1);\n        setSigner1(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getSigner1();\n  }, [id1]);\n  useEffect(() => {\n    async function getSigner2() {\n      try {\n        const res = await userListAPI.getUserById(id2);\n        setSigner2(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getSigner2();\n  }, [id2]);\n  useEffect(() => {\n    async function getCompany1() {\n      try {\n        const res = await companyListAPI.getCompanyById(signer1.companyId);\n        setCompany1(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getCompany1();\n  }, [signer1.companyId]);\n  useEffect(() => {\n    async function getCompany2() {\n      try {\n        const res = await companyListAPI.getCompanyById(signer2.companyId);\n        setCompany2(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getCompany2();\n  }, [signer2.companyId]);\n\n  return (\n    <div>\n      <StepDetailContract activeStep={activeStep} />\n      <div className=\"main-panel\">\n        <Header />\n        <Container fluid={true}>\n          <Row>\n            <Col>\n              <Paper style={{ marginTop: \"20px\" }} elevation={3}>\n                <Label\n                  style={{\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    color: \"blue\",\n                  }}\n                >\n                  Contract Content\n                </Label>\n                <br/>\n                <Label style={{marginTop:'10px'}}>\n                  <img\n                    hidden={document.status === 3 ? false : true}\n                    src={done}\n                    alt=\"\"\n                  />\n                  <img\n                    hidden={document.status !== 3 ? false : true}\n                    src={notsigned}\n                    alt=\"\"/>\n                </Label>\n                \n                <TextField\n                  variant=\"standard\"\n                  value={document.title}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <TitleIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n                <TextField\n                  variant=\"standard\"\n                  value={company1.name}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <BusinessIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n                <TextField\n                  variant=\"standard\"\n                  value={signer1.name}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <BorderColorIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n                <TextField\n                  \n                  variant=\"standard\"\n                  value={company2.name}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <BusinessIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n                <TextField\n                  \n                  variant=\"standard\"\n                  value={signer2.name}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <BorderColorIcon color=\"primary\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n                <TableContainer>\n                  <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                      <TableRow>\n                        <StyledTableCell>Viewer name</StyledTableCell>\n                        <StyledTableCell align=\"center\">Email</StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          Phone number\n                        </StyledTableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {currentPosts.map((row) => (\n                        <StyledTableRow key={row.name}>\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            <GetCreater id={row.viewerId} />\n                          </StyledTableCell>\n                          <StyledTableCell align=\"center\">\n                            <GetEmail id={row.viewerId} />\n                          </StyledTableCell>\n                          <StyledTableCell align=\"center\">\n                            <GetPhone id={row.viewerId} />\n                          </StyledTableCell>\n                        </StyledTableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <TablePagination\n                  component=\"div\"\n                  count={viewer.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  labelRowsPerPage=\"\"\n                  onChangePage={handleChangePage}\n                  rowsPerPageOptions={[]}\n                />\n\n                <TextField\n                  label=\"Date expiration\"\n                  value={moment(document.dateExpire).format(\"DD/MM/YYYY HH:mm:ss\")}\n                  fullWidth\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <EventAvailableIcon color=\"primary\" />\n                      </InputAdornment>\n                    ),\n                    readOnly: true,\n                  }}\n                />\n              </Paper>\n              <Button\n                hidden={activeStep >= 3 ? false : true}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                style={{ marginTop: \"20px\", marginRight: \"10px\" }}\n                startIcon={<SaveIcon />}\n                onClick={(e) => {\n                  e.preventDefault();\n                  axios\n                    .get(document.contractUrl, {\n                      responseType: \"blob\",\n                    })\n                    .then(function (res) {\n                      fileDownload(res.data, document.description + \".pdf\");\n                    })\n                    .catch(function (error) {\n                      console.log(error);\n                    });\n                }}\n              >\n                Save\n              </Button>\n              <Button\n                hidden={activeStep >= 3 ? false : true}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                style={{ marginTop: \"20px\" }}\n                startIcon={<PrintIcon />}\n              >\n                Print\n              </Button>\n            </Col>\n            <Col>\n              <Form className=\"form-doc\">\n                <FormGroup row>\n                  <div>\n                    <PDF pdf={document.contractUrl} />\n                  </div>\n                </FormGroup>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n}\nexport default ContractDetail;\n","/Users/macos/Desktop/EOfficeWeb/src/components/AdminCompany/UserManagement/UserManagement.js",["325","326","327","328","329","330","331","332","333"],"import { forwardRef, useEffect, useState } from \"react\";\nimport {\n  FormGroup,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  Container,\n  ModalFooter,\n  Row,\n} from \"reactstrap\";\nimport userListAPI from \"../../../api/userListAPI\";\nimport Header from \"../../Nav/Header\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Sidebar from \"../../Sidebar/Sidebar\";\nimport \"./../../../css/UserManagement.css\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { getUser } from \"../../../utils/Common\";\nimport GetDepartment from \"../../GetData/GetDepartment\";\nimport Switch from \"@material-ui/core/Switch\";\nimport departmentAPI from \"../../../api/departmentAPI\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast } from \"react-toastify\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { InputAdornment } from \"@material-ui/core\";\nimport Moment from \"moment\";\nimport md5 from \"md5\";\n\nconst TransitionAdd = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"right\" ref={ref} {...props} />;\n});\nconst TransitionDetail = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nfunction UserManagement() {\n  const [userList, setUserList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [listActive, setListActive] = useState([]);\n  const [listDeactive, setListDeactive] = useState([]);\n  const [postList, setPostList] = useState([]);\n  const [department, setDepartment] = useState([]);\n  const [subdepartment, setSubDepartment] = useState([]);\n  const [subdepartment2, setSubDepartment2] = useState([]);\n  const [checkAcitve, setCheckActive] = useState(true);\n  const [user, setUser] = useState({\n    username: \"\",\n    department: \"\",\n    subdepartment: \"\",\n    phone: \"\",\n    email: \"\",\n    address: \"\",\n  });\n  const [detail, setDetail] = useState({\n    id: \"\",\n    username: \"\",\n    department: \"\",\n    subdepartment: \"\",\n    phone: \"\",\n    email: \"\",\n    address: \"\",\n    status: \"\",\n  });\n  const [isOpen, setIsOpen] = useState(false);\n  const [del, setDel] = useState(false);\n  const [reload, setReload] = useState({\n    add: 0,\n    edit: 0,\n  })\n  const [page, setPage] = useState(0);\n  const [rowsPerPage] = useState(15);\n  const indexOfLastPost = (page + 1) * rowsPerPage;\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\n  const currentPosts = postList.slice(indexOfFirstPost, indexOfLastPost);\n  const add = () => setIsOpen(!isOpen);\n  const [openEdit, setOpenEdit] = useState(false);\n  const edit = () => setOpenEdit(!openEdit);\n  const [search, setSearch] = useState(\"\");\n  const [error, setError] = useState({\n    name: false,\n    phone: false,\n    email: false,\n    depart: false,\n    subdepart: false,\n    message_name: \"\",\n    message_phone: \"\",\n    message_email: \"\",\n    message_depart: \"\",\n    message_subdepart: \"\",\n  });\n  useEffect(() => {\n    async function fetchUserList() {\n      try {\n        const response = await userListAPI.getUserByCompanyId(\n          getUser().CompanyId\n        );\n        var list = response.data\n          .sort((a, b) => {\n            return (\n              new Date(a.dateCreate).getTime() -\n              new Date(b.dateCreate).getTime()\n            );\n          })\n          .reverse();\n        setUserList(list);\n        setListActive(\n          list.filter((data) => {\n            if (data.status === 1) {\n              return data;\n            }\n          })\n        );\n        setListDeactive(\n          list.filter((data) => {\n            if (data.status === 0) {\n              return data;\n            }\n          })\n        );\n        setPostList(\n          list.filter((data) => {\n            if (data.status === 1) {\n              return data;\n            }\n          })\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n    fetchUserList();\n  }, [reload.add, reload.edit]);\n\n  useEffect(() => {\n    async function getDepartment() {\n      try {\n        const res = await departmentAPI.getDepartmentByCompanyId(getUser().CompanyId);\n        setDepartment(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getDepartment();\n  }, []);\n\n  useEffect(() => {\n    async function getSubDepartment() {\n      try {\n        const res = await departmentAPI.getSubDepartment(user.department);\n        setSubDepartment(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getSubDepartment();\n  }, [user.department]);\n\n  useEffect(() => {\n    async function getSubDepartment() {\n      try {\n        const res = await departmentAPI.getSubDepartment(detail.department);\n        setSubDepartment2(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getSubDepartment();\n  }, [detail.department]);\n\n  function handleOnInput(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setUser({\n      ...user,\n      [name]: value,\n    });\n  }\n  function handleOnDetail(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setDetail({\n      ...detail,\n      [name]: value,\n    });\n  }\n\n  function addUser(event) {\n    event.preventDefault();\n    var pattern = new RegExp(\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n    );\n    if (user.username.trim() === \"\") {\n      setError({\n        ...error,\n        name: true,\n        message_name: \"Please input user name\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          name: false,\n          message_name: \"\",\n        });\n      }, 5000);\n    } else if (user.username.length > 255) {\n      setError({\n        ...error,\n        name: true,\n        message_name: \"User name max length 255 characters\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          name: false,\n          message_name: \"\",\n        });\n      }, 5000);\n    } else if (!user.phone.trim().match(\"^[0-9]{10}$\")) {\n      setError({\n        ...error,\n        phone: true,\n        message_phone: \"Phone number is incorrect\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          phone: false,\n          message_phone: \"\",\n        });\n      }, 5000);\n    } else if (user.department === \"\") {\n      setError({\n        ...error,\n        depart: true,\n        message_depart: \"Select department\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          depart: false,\n          message_depart: \"\",\n        });\n      }, 5000);\n    } else if (user.subdepartment === \"\") {\n      setError({\n        ...error,\n        subdepart: true,\n        message_subdepart: \"Select sub department\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          subdepart: false,\n          message_subdepart: \"\",\n        });\n      }, 5000);\n    } else if (!pattern.test(user.email) || user.email.trim() === \"\") {\n      setError({\n        ...error,\n        email: true,\n        message_email: \"Email is incorrect\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          email: false,\n          message_email: \"\",\n        });\n      }, 5000);\n    } else {\n      const tel = \"+84\" + user.phone.substring(1);\n      const params = {\n        name: user.username,\n        avatar: \"\",\n        email: user.email,\n        password: md5(\"123Aabc\").trim().toString(),\n        phone: tel,\n        address: user.address,\n        dateCreate: Moment(new Date()).format(\n          \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\n        ),\n        creatorId: getUser().Id,\n        subDepartmentId: user.subdepartment,\n        departmentId: user.department,\n        companyId: getUser().CompanyId,\n        role: \"2\",\n        status: 1,\n      };\n      userListAPI\n        .addUser(params)\n        .then(function (res) {\n          add();\n          setValue(1);\n          setUser({\n            username: \"\",\n            department: \"\",\n            subdepartment: \"\",\n            phone: \"\",\n            email: \"\",\n            address: \"\",\n          });\n          setReload({\n            ...reload,\n            add: reload.add+1\n          })\n          toast.success(\"You has created user successfully\", {\n            position: toast.POSITION.TOP_CENTER,\n          });\n        })\n        .catch(function (error) {\n          if (\n            error.response.data.Message ===\n            \"The user with the provided phone number already exists (PHONE_NUMBER_EXISTS).\"\n          ) {\n            setError({\n              ...error,\n              phone: true,\n              message_phone: \"Phone number is already exists\",\n            });\n            setTimeout(() => {\n              setError({\n                ...error,\n                phone: false,\n                message_phone: \"\",\n              });\n            }, 5000);\n          } else if (\n            error.response.data.Message ===\n            \"The user with the provided email already exists (EMAIL_EXISTS).\"\n          ) {\n            setError({\n              ...error,\n              email: true,\n              message_email: \"Phone number is already exists\",\n            });\n            setTimeout(() => {\n              setError({\n                ...error,\n                email: false,\n                message_email: \"\",\n              });\n            }, 5000);\n          }\n          console.log(error);\n        });\n    }\n  }\n  function updateUser(event) {\n    event.preventDefault();\n    var pattern = new RegExp(\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n    );\n    if (detail.username.trim() === \"\") {\n      setError({\n        ...error,\n        name: true,\n        message_name: \"Please input user name\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          name: false,\n          message_name: \"\",\n        });\n      }, 5000);\n    } else if (!detail.phone.trim().match(\"^[0-9]{10}$\")) {\n      setError({\n        ...error,\n        phone: true,\n        message_phone: \"Phone number is incorrect\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          phone: false,\n          message_phone: \"\",\n        });\n      }, 5000);\n    } else if (detail.department === \"\") {\n      setError({\n        ...error,\n        depart: true,\n        message_depart: \"Select department\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          depart: false,\n          message_depart: \"\",\n        });\n      }, 5000);\n    } else if (detail.subdepartment === \"\") {\n      setError({\n        ...error,\n        subdepart: true,\n        message_subdepart: \"Select sub department\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          subdepart: false,\n          message_subdepart: \"\",\n        });\n      }, 5000);\n    } else if (!pattern.test(detail.email) || detail.email.trim() === \"\") {\n      setError({\n        ...error,\n        email: true,\n        message_email: \"Email is incorrect\",\n      });\n      setTimeout(() => {\n        setError({\n          ...error,\n          email: false,\n          message_email: \"\",\n        });\n      }, 5000);\n    } else {\n      const tel = \"+84\" + detail.phone.substring(1);\n      const params = {\n        id: detail.id,\n        name: detail.username,\n        avatar: \"\",\n        email: detail.email,\n        phone: tel,\n        address: detail.address,\n        dateCreate: Moment(new Date()).format(\"DD/MM/YYYY\"),\n        creatorId: getUser().Id,\n        subDepartmentId: detail.subdepartment,\n        departmentId: detail.department,\n        companyId: getUser().CompanyId,\n        role: \"2\",\n      };\n      userListAPI\n        .updateUser(params)\n        .then(function (res) {\n          if (detail.status === 1) {\n            userListAPI\n              .activeUser(res.data.id)\n              .then(() => {\n                edit();\n                setReload({\n                  ...reload,\n                  edit: reload.edit + 1,\n                })\n                setValue(1);\n                activeList();\n                toast.success(\"You has updated user successfully\", {\n                  position: toast.POSITION.TOP_CENTER,\n                });\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n          } else {\n            userListAPI.deActiveUser(res.data.id).then(() => {\n              edit();\n              setValue(1);\n              activeList();\n              toast.success(\"You has updated user successfully\", {\n                position: toast.POSITION.TOP_CENTER,\n              });\n            });\n          }\n        })\n        .catch(function (error) {\n          console.log(error.response.data.Message);\n        });\n    }\n  }\n\n  function changePage(event, newPage) {\n    setPage(newPage);\n  }\n  const [value, setValue] = useState(1);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  function activeList(e) {\n    setPage(0);\n    setPostList(listActive);\n  }\n  function deActiveList(e) {\n    setPage(0);\n    setPostList(listDeactive);\n  }\n  return (\n    <div>\n      <Sidebar />\n      <div className=\"main-panel1\">\n        <Header />\n        <Container fluid={true}>\n          <Dialog\n            open={isOpen}\n            onClose={add}\n            aria-labelledby=\"form-dialog-title\"\n            TransitionComponent={TransitionAdd}\n            keepMounted\n            disableBackdropClick\n            disableEscapeKeyDown\n            fullWidth\n          >\n            <DialogTitle id=\"form-dialog-title\">Add User</DialogTitle>\n            <DialogContent>\n              <TextField\n                error={error.name}\n                helperText={error.message_name}\n                label=\"User name\"\n                value={user.username}\n                name=\"username\"\n                variant=\"outlined\"\n                required\n                onChange={handleOnInput}\n                style={{ width: \"270px\" }}\n              />\n              <TextField\n                error={error.phone}\n                helperText={error.message_phone}\n                value={user.phone}\n                label=\"User phone number\"\n                name=\"phone\"\n                type=\"phone\"\n                variant=\"outlined\"\n                required\n                onChange={handleOnInput}\n                style={{ marginLeft: \"10px\", width: \"270px\" }}\n              />\n            </DialogContent>\n            <DialogContent>\n              <FormControl variant=\"outlined\" style={{ width: \"270px\" }}>\n                <InputLabel id=\"demo\">Department</InputLabel>\n                <Select\n                  name=\"department\"\n                  value={user.department}\n                  onChange={handleOnInput}\n                  label=\"Department\"\n                  error={error.depart}\n                  required\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  {department.map((depart) => (\n                    <MenuItem key={depart.id} value={depart.id}>\n                      {depart.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"outlined\"\n                style={{ marginLeft: \"10px\", width: \"270px\" }}\n              >\n                <InputLabel id=\"demo\">Sub Department</InputLabel>\n                <Select\n                  name=\"subdepartment\"\n                  value={user.subdepartment}\n                  onChange={handleOnInput}\n                  label=\"Sub Department\"\n                  error={error.subdepart}\n                  required\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  {subdepartment.map((depart) => (\n                    <MenuItem key={depart.id} value={depart.id}>\n                      {depart.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </DialogContent>\n            <DialogContent>\n              <TextField\n                error={error.email}\n                helperText={error.message_email}\n                label=\"Email\"\n                value={user.email}\n                name=\"email\"\n                type=\"email\"\n                required\n                variant=\"outlined\"\n                onChange={handleOnInput}\n                style={{ width: \"270px\" }}\n              />\n              <TextField\n                error={false}\n                label=\"Address\"\n                value={user.address}\n                name=\"address\"\n                variant=\"outlined\"\n                onChange={handleOnInput}\n                style={{ marginLeft: \"10px\", width: \"270px\" }}\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                  setUser({\n                    username: \"\",\n                    department: \"\",\n                    subdepartment: \"\",\n                    phone: \"\",\n                    email: \"\",\n                    address: \"\",\n                  });\n                  add();\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ marginRight: \"20px\" }}\n                onClick={addUser}\n              >\n                Create\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <div className=\"form-search\">\n            <FormGroup row>\n              <Button variant=\"contained\" color=\"primary\" onClick={add}>\n                +Add user\n              </Button>\n              <Col>\n                <Row>\n                  <TextField\n                    name=\"search\"\n                    variant=\"outlined\"\n                    placeholder=\"Search by account name\"\n                    onChange={(event) => {\n                      setSearch(event.target.value);\n                    }}\n                    size=\"small\"\n                    fullWidth\n                    style={{ marginLeft: \"10px\" }}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <SearchIcon color=\"primary\" />\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Row>\n              </Col>\n              <Col>\n                <Row>\n                  <Paper square elevation={0} style={{ position: \"absolute\", right: 0 }}>\n                    <Tabs\n                      value={value}\n                      indicatorColor=\"none\"\n                      textColor=\"primary\"\n                      onChange={handleChange}\n                    >\n                      <Tab value={1} onClick={activeList} label=\"Active\" />\n                      <Tab value={0} onClick={deActiveList} label=\"Deactive\" />\n                    </Tabs>\n                  </Paper>\n                </Row>\n                <Row></Row>\n              </Col>\n            </FormGroup>\n            <div hidden={search !== \"\" ? true : false}>\n              <TablePagination\n                component=\"div\"\n                count={postList.length}\n                page={page}\n                onChangePage={changePage}\n                rowsPerPage={rowsPerPage}\n                labelRowsPerPage=\"\"\n                rowsPerPageOptions={[]}\n              />\n            </div>\n          </div>\n          {loading ? (\n            <ScaleLoader color={\"#2512DF\"} loading={loading} size={35} />\n          ) : (\n            <Table hidden={search !== \"\" ? true : false} hover>\n              <thead>\n                <tr>\n                  <th>Account name</th>\n                  <th>Department</th>\n                  <th>Phone number</th>\n                  <th>Email</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentPosts.map((user) => (\n                  <tr key={user.id} className=\"row_data\">\n                    <td\n                      onClick={() => {\n                        setDetail({\n                          id: user.id,\n                          username: user.name,\n                          phone: \"0\" + user.phone.substring(3),\n                          department: user.departmentId,\n                          subdepartment: user.subDepartmentId,\n                          email: user.email,\n                          address: user.address,\n                          status: user.status,\n                        });\n                        if (user.status === 0) {\n                          setCheckActive(false);\n                        } else {\n                          setCheckActive(true);\n                        }\n                        setOpenEdit(true);\n                      }}\n                    >\n                      {user.name}\n                    </td>\n                    <td\n                      onClick={() => {\n                        setDetail({\n                          id: user.id,\n                          username: user.name,\n                          phone: \"0\" + user.phone.substring(3),\n                          department: user.departmentId,\n                          subdepartment: user.subDepartmentId,\n                          email: user.email,\n                          address: user.address,\n                          status: user.status,\n                        });\n                        if (user.status === 0) {\n                          setCheckActive(false);\n                        } else {\n                          setCheckActive(true);\n                        }\n                        setOpenEdit(true);\n                      }}\n                    >\n                      <GetDepartment id={user.departmentId} />\n                    </td>\n                    <td\n                      onClick={() => {\n                        setDetail({\n                          id: user.id,\n                          username: user.name,\n                          phone: \"0\" + user.phone.substring(3),\n                          department: user.departmentId,\n                          subdepartment: user.subDepartmentId,\n                          email: user.email,\n                          address: user.address,\n                          status: user.status,\n                        });\n                        if (user.status === 0) {\n                          setCheckActive(false);\n                        } else {\n                          setCheckActive(true);\n                        }\n                        setOpenEdit(true);\n                      }}\n                    >\n                      {user.phone}\n                    </td>\n                    <td\n                      onClick={() => {\n                        setDetail({\n                          id: user.id,\n                          username: user.name,\n                          phone: \"0\" + user.phone.substring(3),\n                          department: user.departmentId,\n                          subdepartment: user.subDepartmentId,\n                          email: user.email,\n                          address: user.address,\n                          status: user.status,\n                        });\n                        if (user.status === 0) {\n                          setCheckActive(false);\n                        } else {\n                          setCheckActive(true);\n                        }\n                        setOpenEdit(true);\n                      }}\n                    >\n                      {user.email}\n                    </td>\n                    <td>\n                      <DeleteIcon hidden={user.status === 1 ? true : false} class=\"hide\" onClick={() => setDel(!del)} />\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n          <Table hidden={search === \"\" ? true : false} hover>\n            <thead>\n              <tr>\n                <th>Account name</th>\n                <th>Department</th>\n                <th>Phone number</th>\n                <th>Email</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {userList\n                .filter((users) => {\n                  if (users.name.toLowerCase().includes(search.toLowerCase())) {\n                    return users;\n                  }\n                })\n                .map((user) => (\n                  <tr key={user.id} className=\"row_data\">\n                    <td\n                      onClick={() => {\n                        setDetail({\n                          id: user.id,\n                          username: user.name,\n                          phone: \"0\" + user.phone.substring(3),\n                          department: user.departmentId,\n                          subdepartment: user.subDepartmentId,\n                          email: user.email,\n                          address: user.address,\n                          status: user.status,\n                        });\n                        if (user.status === 0) {\n                          setCheckActive(false);\n                        } else {\n                          setCheckActive(true);\n                        }\n                        setOpenEdit(true);\n                      }}\n                    >\n                      {user.name}\n                    </td>\n                    <td\n                      onClick={() => {\n                        setDetail({\n                          id: user.id,\n                          username: user.name,\n                          phone: \"0\" + user.phone.substring(3),\n                          department: user.departmentId,\n                          subdepartment: user.subDepartmentId,\n                          email: user.email,\n                          address: user.address,\n                          status: user.status,\n                        });\n                        if (user.status === 0) {\n                          setCheckActive(false);\n                        } else {\n                          setCheckActive(true);\n                        }\n                        setOpenEdit(true);\n                      }}\n                    >\n                      <GetDepartment id={user.departmentId} />\n                    </td>\n                    <td\n                      onClick={() => {\n                        setDetail({\n                          id: user.id,\n                          username: user.name,\n                          phone: \"0\" + user.phone.substring(3),\n                          department: user.departmentId,\n                          subdepartment: user.subDepartmentId,\n                          email: user.email,\n                          address: user.address,\n                          status: user.status,\n                        });\n                        if (user.status === 0) {\n                          setCheckActive(false);\n                        } else {\n                          setCheckActive(true);\n                        }\n                        setOpenEdit(true);\n                      }}\n                    >\n                      {user.phone}\n                    </td>\n                    <td\n                      onClick={() => {\n                        setDetail({\n                          id: user.id,\n                          username: user.name,\n                          phone: \"0\" + user.phone.substring(3),\n                          department: user.departmentId,\n                          subdepartment: user.subDepartmentId,\n                          email: user.email,\n                          address: user.address,\n                          status: user.status,\n                        });\n                        if (user.status === 0) {\n                          setCheckActive(false);\n                        } else {\n                          setCheckActive(true);\n                        }\n                        setOpenEdit(true);\n                      }}\n                    >\n                      {user.email}\n                    </td>\n                    <td hidden={user.status === 1 ? true : false}>\n                      <DeleteIcon class=\"hide\" onClick={() => setDel(true)} />\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n          <Dialog\n            open={openEdit}\n            TransitionComponent={TransitionDetail}\n            keepMounted\n            disableBackdropClick\n            disableEscapeKeyDown\n            fullWidth\n          >\n            <DialogTitle id=\"form-dialog-title\">User Detail</DialogTitle>\n            <DialogContent>\n              <TextField\n                error={error.name}\n                helperText={error.message_name}\n                label=\"User name\"\n                value={detail.username}\n                name=\"username\"\n                variant=\"outlined\"\n                required\n                onChange={handleOnDetail}\n                style={{ width: \"270px\" }}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n              <TextField\n                error={error.phone}\n                helperText={error.message_phone}\n                value={detail.phone}\n                label=\"User phone number\"\n                name=\"phone\"\n                type=\"phone\"\n                variant=\"outlined\"\n                required\n                onChange={handleOnDetail}\n                style={{ marginLeft: \"10px\", width: \"270px\" }}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n            </DialogContent>\n            <DialogContent>\n              <FormControl variant=\"outlined\" style={{ width: \"270px\" }}>\n                <InputLabel id=\"demo\">Department</InputLabel>\n                <Select\n                  name=\"department\"\n                  value={detail.department}\n                  onChange={handleOnDetail}\n                  label=\"Department\"\n                  error={error.depart}\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  {department.map((depart) => (\n                    <MenuItem key={depart.id} value={depart.id}>\n                      {depart.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"outlined\"\n                style={{ marginLeft: \"10px\", width: \"270px\" }}\n              >\n                <InputLabel id=\"demo\">Sub Department</InputLabel>\n                <Select\n                  name=\"subdepartment\"\n                  value={detail.subdepartment}\n                  onChange={handleOnDetail}\n                  label=\"Sub Department\"\n                  error={error.subdepart}\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  {subdepartment2.map((depart) => (\n                    <MenuItem key={depart.id} value={depart.id}>\n                      {depart.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </DialogContent>\n            <DialogContent>\n              <TextField\n                error={error.email}\n                helperText={error.message_email}\n                label=\"Email\"\n                value={detail.email}\n                name=\"email\"\n                type=\"email\"\n                required\n                variant=\"outlined\"\n                onChange={handleOnDetail}\n                style={{ width: \"270px\" }}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n              <TextField\n                error={false}\n                label=\"Address\"\n                value={detail.address}\n                name=\"address\"\n                variant=\"outlined\"\n                onChange={handleOnDetail}\n                style={{ marginLeft: \"10px\", width: \"270px\" }}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n            </DialogContent>\n            <DialogContent>\n              <span>\n                {checkAcitve === true ? (\n                  <a style={{ color: \"green\" }}>Active</a>\n                ) : (\n                  <a style={{ color: \"red\" }}>Deactive</a>\n                )}\n              </span>\n              <Switch\n                checked={checkAcitve}\n                onChange={() => {\n                  setCheckActive(!checkAcitve);\n                  setDetail({\n                    ...detail,\n                    status: checkAcitve === true ? 0 : 1,\n                  });\n                }}\n                name=\"active\"\n                color=\"primary\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                  setDetail({\n                    username: \"\",\n                    phone: \"\",\n                    department: \"\",\n                    subdepartment: \"\",\n                    email: \"\",\n                    address: \"\",\n                    status: \"\",\n                  });\n                  edit();\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ marginRight: \"20px\" }}\n                onClick={updateUser}\n              >\n                Update\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <Modal isOpen={del} toggle={() => setDel(!del)}>\n            <ModalHeader>Do you want delete user?</ModalHeader>\n            <ModalFooter>\n              <Button variant=\"contained\" style={{marginRight:5}}\n                color=\"secondary\"\n                onClick={() => {\n                  setDel(!del);\n                }}\n              >\n                No\n              </Button>\n              <Button variant=\"contained\" color=\"primary\">Yes</Button>\n            </ModalFooter>\n          </Modal>\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default UserManagement;\n","/Users/macos/Desktop/EOfficeWeb/src/components/AdminCompany/DepartmentManagement/DepartmentManagement.js",["334","335","336","337","338","339","340","341","342","343"],"import { useEffect, useState } from \"react\";\nimport {\n  Container,\n  FormGroup,\n  Col,\n  Row,\n} from \"reactstrap\";\nimport Header from \"../../Nav/Header\";\nimport Sidebar from \"../../Sidebar/Sidebar\";\nimport \"../../../css/Department.css\";\nimport TreeView from \"@material-ui/lab/TreeView\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { Autocomplete, createFilterOptions, TreeItem } from \"@material-ui/lab\";\nimport departmentAPI from \"../../../api/departmentAPI\";\nimport { getUser } from \"../../../utils/Common\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast } from \"react-toastify\";\nimport Moment from \"moment\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AddIcon from '@material-ui/icons/Add';\nimport GetSubDepartment from \"../../GetData/GetSubDepartment\";\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n} from \"@material-ui/core\";\n\nconst filter = createFilterOptions();\nfunction DepartmentManagerment() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [listDepartment, setListDepartment] = useState([]);\n  const [value, setValue] = useState(null);\n  const [sub_department, setSubDepartment] = useState(null);\n  const [checkDepart, setCheckDepart] = useState({\n    error: false,\n    message: \"\",\n  });\n  const [checkSubDepart, setSubCheckDepart] = useState({\n    error: false,\n    message: \"\",\n  });\n\n  function toogle() {\n    setIsOpen(!isOpen);\n  }\n  useEffect(() => {\n    async function getDepartment() {\n      const id = getUser().CompanyId;\n      try {\n        const response = await departmentAPI.getDepartmentByCompanyId(id);\n        setListDepartment(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getDepartment();\n  }, [isOpen]);\n\n  function addDepartment(e) {\n    e.preventDefault();\n    if (value === null) {\n      setCheckDepart({\n        error: true,\n        message: \"choose one department or input new\",\n      });\n    } else if (value !== Object && value.name.length > 255) {\n      setCheckDepart({\n        error: true,\n        message: \"Department name max length 255 characters\",\n      });\n    } else if (sub_department === null) {\n      setSubCheckDepart({\n        error: true,\n        message: \"Please input subdepartment\",\n      });\n    } else if (sub_department.length > 255) {\n      setSubCheckDepart({\n        error: true,\n        message: \"Subdepartment name max length 255 characters\",\n      });\n    } else if (value !== Object) {\n      const params = {\n        name: value.name,\n        companyId: getUser().CompanyId,\n        creatorId: getUser().Id,\n        dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\n      };\n      departmentAPI\n        .addDepartment(params)\n        .then(function (res) {\n          const params = {\n            name: sub_department,\n            departmentId: res.data.id,\n            companyId: getUser().CompanyId,\n            creatorId: getUser().Id,\n            dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\n          };\n          departmentAPI\n            .addSubDepartment(params)\n            .then(function (res) {\n              toast.success(\"Add department successfully\", {\n                position: toast.POSITION.TOP_CENTER,\n              });\n              setIsOpen(false)\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    } else {\n      const params = {\n        name: sub_department,\n        departmentId: value.id,\n        companyId: getUser().CompanyId,\n        creatorId: getUser().Id,\n        dateCreate: Moment(new Date()).format('yyyy-MM-DD'+'T'+'HH:mm:ss.SSS'+'Z'),\n      };\n      departmentAPI\n        .addSubDepartment(params)\n        .then(function (res) {\n          toast.success(\"Add department successfully\", {\n            position: toast.POSITION.TOP_CENTER,\n          });\n          setIsOpen(false);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }\n  return (\n    <div>\n      <Sidebar />\n      <div className=\"main-panel\">\n        <Header />\n        <Container fluid={true}>\n          <div className=\"add\">\n            <FormGroup row>\n              <Button variant=\"contained\" onClick={toogle} color=\"primary\">\n                Add department\n              </Button>\n            </FormGroup>\n          </div>\n          <div>\n            <TreeView\n              className=\"tree\"\n              defaultCollapseIcon={<ExpandMoreIcon />}\n              defaultExpandIcon={<ChevronRightIcon />}\n            >\n              {listDepartment.map((department) => (\n                <TreeItem\n                  key={department.id}\n                  nodeId={department.id}\n                  label={department.name}\n                >\n                  <GetSubDepartment id={department.id}/>\n                </TreeItem>\n              ))}\n            </TreeView>\n          </div>\n        </Container>\n        <Dialog\n          onClose={toogle}\n          open={isOpen}\n          fullWidth\n          disableBackdropClick\n          disableEscapeKeyDown\n        >\n          <DialogTitle>Add Department</DialogTitle>\n          <DialogContent>\n            <Row>\n              <Col sm={6}>\n                <Autocomplete\n                  value={value}\n                  onChange={(event, newValue) => {\n                    if (typeof newValue === \"string\") {\n                      setValue({\n                        name: newValue,\n                      });\n                    } else if (newValue && newValue.inputValue) {\n                      setValue({\n                        name: newValue.inputValue,\n                      });\n                    } else {\n                      setValue(newValue);\n                    }\n                  }}\n                  filterOptions={(options, params) => {\n                    const filtered = filter(options, params);\n                    if (params.inputValue !== \"\") {\n                      filtered.push({\n                        inputValue: params.inputValue,\n                        name: `Add \"${params.inputValue}\"`,\n                      });\n                    }\n\n                    return filtered;\n                  }}\n                  selectOnFocus\n                  clearOnBlur\n                  handleHomeEndKeys\n                  id=\"free-solo-with-text-demo\"\n                  options={listDepartment}\n                  getOptionLabel={(option) => {\n                    if (typeof option === \"string\") {\n                      return option;\n                    }\n                    if (option.inputValue) {\n                      return option.inputValue;\n                    }\n                    return option.name;\n                  }}\n                  renderOption={(option) => option.name}\n                  style={{ width: 260 }}\n                  freeSolo\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Department\"\n                      variant=\"outlined\"\n                      error={checkDepart.error}\n                      helperText={checkDepart.message}\n                    />\n                  )}\n                />\n              </Col>\n              <Col sm={5}>\n                <TextField\n                  style={{ width: \"250px\" }}\n                  error={checkSubDepart.error}\n                  helperText={checkSubDepart.message}\n                  label=\"Sub Department\"\n                  name=\"sub_department\"\n                  variant=\"outlined\"\n                  required\n                  onChange={(e) => setSubDepartment(e.target.value)}\n                />\n              </Col>\n            </Row>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => setIsOpen(!isOpen)}\n            >\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              style={{ marginRight: \"29px\" }}\n              onClick={addDepartment}\n            >\n              Create\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </div>\n  );\n}\nexport default DepartmentManagerment;\n","/Users/macos/Desktop/EOfficeWeb/src/components/App/firebase.js",[],"/Users/macos/Desktop/EOfficeWeb/src/api/companyListAPI.js",[],"/Users/macos/Desktop/EOfficeWeb/src/api/loginAPI.js",[],"/Users/macos/Desktop/EOfficeWeb/src/api/userListAPI.js",[],"/Users/macos/Desktop/EOfficeWeb/src/api/contractAPI.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/StepInvoice.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/SidebarAdmin.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/StepDetailContract.js",["344","345","346","347","348"],"import Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport '../../css/Stepper.css';\nimport '../../css/StepDetail.css';\nimport signercontract from '../../images/sign1contract.png';\nimport showall from '../../images/showall.png';\nimport completed from '../../images/completeInvoice.png';\nimport completed1 from '../../images/complete.png';\nimport logo from '../../images/eoffice.png';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport userListAPI from '../../api/userListAPI';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport companyListAPI from '../../api/companyListAPI';\nimport contractAPI from '../../api/contractAPI';\nimport moment from 'moment';\n\nfunction StepDetailContract({activeStep}) {\n    function getStep(){\n        return ['Create contract', 'Person 1 sign','Person 2 sign','Contract completed'];\n    }\n    const [signerA, setSignerA] = useState([]);\n    const [signerB, setSignerB] = useState([]);\n    const [companyA, setCompanyA] = useState([]);\n    const [companyB, setCompanyB] = useState([]);\n    const [document, setDocument] = useState([]);\n    const steps = getStep();\n    const history = useHistory();\n    const param = useParams();\n    useEffect(()=>{\n        async function getDocument(){\n            try {\n                const res = await contractAPI.getContractById(param.id);\n                setDocument(res.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getDocument();\n    },[]);\n    useEffect(()=>{\n        async function getSigner() {\n            try {\n                const res = await userListAPI.getUserById(document.contractSigners[0].signerId);\n                setSignerA(res.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getSigner();\n    },[])\n\n    useEffect(()=>{\n        async function getSigner() {\n            try {\n                const res = await userListAPI.getUserById(document.contractSigners[1].signerId);\n                setSignerB(res.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getSigner();\n    },[])\n\n    useEffect(()=>{\n        async function getCompany() {\n            try {\n                const res = await companyListAPI.getCompanyById(signerA.companyId);\n                setCompanyA(res.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getCompany();\n    },[])\n    useEffect(()=>{\n        async function getCompany() {\n            try {\n                const res = await companyListAPI.getCompanyById(signerB.companyId);\n                setCompanyB(res.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getCompany();\n    },[])\n    return(\n        <div className=\"root\">\n            <div className=\"logo\">\n                <img src={logo} alt=\"\" onClick={()=> history.push('/dashboard')} />\n            </div>\n            <Stepper activeStep={activeStep} orientation=\"vertical\" style={{textAlign:'left'}}>\n                {steps.map((label) => (\n                <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                </Step>\n                ))}\n            </Stepper>\n            <div hidden={activeStep<3 ? true : false}>\n                <img style={{marginTop:'10px'}} src={completed1} alt=\"\"/>\n                <Tooltip  placement=\"right\" title={'Company name:'+ companyA.name + 'Signer '+ signerA.name}>\n                    <img style={{marginTop:'10px'}} src={signercontract} alt=\"\"/>\n                </Tooltip>\n                <Tooltip  placement=\"right\" title={'Company name:'+ companyB.name + 'Signer '+ signerB.name}>\n                    <img style={{marginTop:'10px'}} src={signercontract} alt=\"\"/>\n                </Tooltip> \n                <Tooltip  placement=\"right\" title={'Contract completed:' + moment(document.dateSign).format('DD/MM/YYYY hh:mm:ss')}>\n                    <img style={{marginTop:'10px'}} src={completed} alt=\"\"/>\n                </Tooltip>\n                <img style={{marginTop:'10px'}} src={showall} alt=\"\"/>\n            </div>\n            <div className=\"bot\">\n                <p>Requirements | Terms of Service</p>\n                <p>@2021 EOffice inc.</p>\n            </div>\n        </div>\n    )\n}\nexport default StepDetailContract;","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateCompany.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Nav/Header.js",["349"],"import { useState, useEffect } from \"react\";\nimport {\n  Navbar,\n  Nav,\n  NavItem,\n  UncontrolledButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport \"../../css/Nav.css\";\nimport { getUser, removeUserSession } from \"../../utils/Common\";\nimport companyListAPI from \"../../api/companyListAPI\";\nimport Badge from \"@material-ui/core/Badge\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Header() {\n  const history = useHistory();\n  const [company, setCompany] = useState([]);\n  useEffect(() => {\n    async function fetCompany() {\n      const companyId = getUser().CompanyId;\n      try {\n        const response = await companyListAPI.getCompanyById(companyId);\n        setCompany(response.data);\n      } catch (error) {\n        if (error.response.status === 401) {\n          removeUserSession();\n          history.push(\"/\");\n        }\n        console.log(error.response.status);\n      }\n    }\n    fetCompany();\n  }, []);\n  function Logout() {\n    removeUserSession();\n    history.push(\"/\");\n  }\n  return (\n    <Navbar>\n      <Nav>\n        <UncontrolledButtonDropdown nav inNavbar>\n          <DropdownToggle nav caret>\n            <Badge badgeContent={4} color=\"error\" style={{ marginTop: \"19px\" }}>\n              <NotificationsIcon color=\"action\" fontSize=\"large\" />\n            </Badge>\n          </DropdownToggle>\n          <DropdownMenu right>\n            <DropdownItem>B created document</DropdownItem>\n            <DropdownItem>A created document</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledButtonDropdown>\n\n        <UncontrolledButtonDropdown nav inNavbar>\n          <DropdownToggle nav caret>\n            <img\n              style={{ borderRadius: \"50%\" }}\n              src={getUser().Avatar}\n              alt=\"avatar\"\n              width=\"70px\"\n              height=\"70px\"\n            />\n          </DropdownToggle>\n          <DropdownMenu right>\n            <DropdownItem onClick={() => history.push(\"/profile\")}>\n              View Profile\n            </DropdownItem>\n            <DropdownItem onClick={Logout}>Logout</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledButtonDropdown>\n        <NavItem>\n          <p\n            style={{\n              fontSize: \"20px\",\n              fontWeight: \"bold\",\n              color: \"black\",\n              textAlign: \"left\",\n            }}\n          >\n            {getUser().Name}\n          </p>\n          <p style={{ color: \"black\", marginBottom: \"5px\", textAlign: \"left\" }}>\n            {company.name}\n          </p>\n        </NavItem>\n      </Nav>\n    </Navbar>\n  );\n}\nexport default Header;\n","/Users/macos/Desktop/EOfficeWeb/src/components/GetAdminCompany/GetAdminCompany.js",["350"],"import { useEffect, useState } from \"react\";\nimport userListAPI from \"../../api/userListAPI\";\n\nfunction GetAdminCompany({id}){\n    const [admin, setAdmin] = useState('');\n    useEffect(() =>{\n        async function getAdmin(){\n            try {\n                const response = await userListAPI.getUserById(id);\n                setAdmin(response.data.name);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getAdmin();\n    },[]);\n    return(\n        <div>\n            <p>{admin}</p>\n        </div>\n    );\n}\nexport default GetAdminCompany;","/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateAddress.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidatePhone.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateEmail.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Validation/ValidateName.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/GetData/GetCreater.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/GetData/GetPhone.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/GetData/GetEmail.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/GetData/GetSubDepartment.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/PDF/PDF.js",[],"/Users/macos/Desktop/EOfficeWeb/src/api/departmentAPI.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/Sidebar.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/GetData/GetDepartment.js",["351"],"import { useEffect, useState } from \"react\";\nimport departmentAPI from \"../../api/departmentAPI\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nfunction GetDepartment({ id }) {\n  const [department, setDepartment] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchDeparment() {\n      try {\n        const response = await departmentAPI.getDepartmentById(id);\n        setDepartment(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchDeparment();\n  }, []);\n  return (\n    <div>\n      {loading ? (\n        <BeatLoader color={\"#2512DF\"} loading={loading} size={5} />\n      ) : (\n        <div>{department.name}</div>\n      )}\n    </div>\n  );\n}\nexport default GetDepartment;\n","/Users/macos/Desktop/EOfficeWeb/src/api/axiosClient.js",[],"/Users/macos/Desktop/EOfficeWeb/src/api/invoiceAPI.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/StepDetail.js",["352","353"],"import Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport '../../css/Stepper.css';\nimport '../../css/StepDetail.css';\nimport signerinvoice from '../../images/signinvoice.png';\nimport showall from '../../images/showall.png';\nimport completed from '../../images/completeInvoice.png';\nimport completed1 from '../../images/complete.png';\nimport logo from '../../images/eoffice.png';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport userListAPI from '../../api/userListAPI';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getUser } from '../../utils/Common';\nimport companyListAPI from '../../api/companyListAPI';\nimport invoiceAPI from '../../api/invoiceAPI';\n\nfunction StepDetail({activeStep}) {\n    function getStep(){\n        return ['Create Invoice', 'Person sign','Invoice Completed'];\n    }\n    const [signer, setSigner] = useState([]);\n    const [company, setCompany] = useState([]);\n    const steps = getStep();\n    const history = useHistory();\n    const [signerId, setSignerId] = useState();\n    const [document, setDocument] = useState([]);\n    const param = useParams();\n    useEffect(()=>{\n        async function getInvoiceById() {\n            try {\n                const res = await invoiceAPI.getInvoiceById(param.id);\n                setDocument(res.data)\n                setSignerId(res.data.signerId);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getInvoiceById();\n    },[])\n    useEffect(()=>{\n        async function getSigner() {\n            try {\n                const res = await userListAPI.getUserById(signerId);\n                setSigner(res.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getSigner();\n    },[signerId])\n\n    useEffect(()=>{\n        async function getCompany() {\n            const id = getUser().CompanyId;\n            try {\n                const res = await companyListAPI.getCompanyById(id);\n                setCompany(res.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getCompany();\n    },[])\n    \n    return(\n        <div className=\"root\">\n            <div className=\"logo\">\n                <img src={logo} alt=\"\" onClick={()=> history.push('/dashboard')} />\n            </div>\n            <Stepper activeStep={activeStep} orientation=\"vertical\" style={{textAlign:'left'}}>\n                {steps.map((label) => (\n                <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                </Step>\n                ))}\n            </Stepper>\n            <div hidden={activeStep<3 ? true : false}>\n                <img style={{marginTop:'10px'}} src={completed1} alt=\"\"/>\n                <Tooltip title={'Company name: '+ company.name+ '. Sign '+ document.dateSign+ ' Signer Name: '+signer.name} placement=\"right\">\n                    <img style={{marginTop:'10px'}} src={signerinvoice} alt=\"\"/>\n                </Tooltip>\n                <Tooltip title={'Invoice status: Completed  '+ document.dateSign} placement=\"right\">\n                    <img style={{marginTop:'10px'}} src={completed} alt=\"\"/>\n                </Tooltip>\n                <img style={{marginTop:'10px'}} src={showall} alt=\"\"/>\n            </div>\n            <div className=\"bot\">\n                <p>Requirements | Terms of Service</p>\n                <p>@2021 EOffice inc.</p>\n            </div>\n        </div>\n    )\n}\nexport default StepDetail;","/Users/macos/Desktop/EOfficeWeb/src/api/notiAPI.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/Stepper.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/StepDoc2.js",[],"/Users/macos/Desktop/EOfficeWeb/src/components/Sidebar/StepDoc.js",[],{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","severity":1,"message":"359","line":1,"column":27,"nodeType":"360","messageId":"361","endLine":1,"endColumn":33},{"ruleId":"358","severity":1,"message":"362","line":24,"column":10,"nodeType":"360","messageId":"361","endLine":24,"endColumn":19},{"ruleId":"358","severity":1,"message":"363","line":24,"column":21,"nodeType":"360","messageId":"361","endLine":24,"endColumn":29},{"ruleId":"364","severity":1,"message":"365","line":65,"column":57,"nodeType":"366","messageId":"367","endLine":65,"endColumn":58},{"ruleId":"364","severity":1,"message":"365","line":65,"column":61,"nodeType":"366","messageId":"367","endLine":65,"endColumn":62},{"ruleId":"364","severity":1,"message":"365","line":65,"column":76,"nodeType":"366","messageId":"367","endLine":65,"endColumn":77},{"ruleId":"364","severity":1,"message":"365","line":74,"column":59,"nodeType":"366","messageId":"367","endLine":74,"endColumn":60},{"ruleId":"364","severity":1,"message":"365","line":74,"column":63,"nodeType":"366","messageId":"367","endLine":74,"endColumn":64},{"ruleId":"364","severity":1,"message":"365","line":74,"column":78,"nodeType":"366","messageId":"367","endLine":74,"endColumn":79},{"ruleId":"364","severity":1,"message":"365","line":82,"column":61,"nodeType":"366","messageId":"367","endLine":82,"endColumn":62},{"ruleId":"364","severity":1,"message":"365","line":82,"column":65,"nodeType":"366","messageId":"367","endLine":82,"endColumn":66},{"ruleId":"364","severity":1,"message":"365","line":82,"column":80,"nodeType":"366","messageId":"367","endLine":82,"endColumn":81},{"ruleId":"364","severity":1,"message":"365","line":93,"column":28,"nodeType":"366","messageId":"367","endLine":93,"endColumn":29},{"ruleId":"364","severity":1,"message":"365","line":93,"column":34,"nodeType":"366","messageId":"367","endLine":93,"endColumn":35},{"ruleId":"364","severity":1,"message":"365","line":93,"column":51,"nodeType":"366","messageId":"367","endLine":93,"endColumn":52},{"ruleId":"364","severity":1,"message":"365","line":107,"column":65,"nodeType":"366","messageId":"367","endLine":107,"endColumn":66},{"ruleId":"364","severity":1,"message":"365","line":107,"column":69,"nodeType":"366","messageId":"367","endLine":107,"endColumn":70},{"ruleId":"364","severity":1,"message":"365","line":107,"column":84,"nodeType":"366","messageId":"367","endLine":107,"endColumn":85},{"ruleId":"368","severity":1,"message":"369","line":40,"column":30,"nodeType":"370","messageId":"371","endLine":40,"endColumn":32},{"ruleId":"368","severity":1,"message":"369","line":49,"column":30,"nodeType":"370","messageId":"371","endLine":49,"endColumn":32},{"ruleId":"368","severity":1,"message":"369","line":144,"column":45,"nodeType":"370","messageId":"371","endLine":144,"endColumn":47},{"ruleId":"368","severity":1,"message":"372","line":98,"column":23,"nodeType":"370","messageId":"373","endLine":98,"endColumn":25},{"ruleId":"364","severity":1,"message":"365","line":115,"column":47,"nodeType":"366","messageId":"367","endLine":115,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":115,"column":51,"nodeType":"366","messageId":"367","endLine":115,"endColumn":52},{"ruleId":"364","severity":1,"message":"365","line":115,"column":66,"nodeType":"366","messageId":"367","endLine":115,"endColumn":67},{"ruleId":"364","severity":1,"message":"365","line":116,"column":45,"nodeType":"366","messageId":"367","endLine":116,"endColumn":46},{"ruleId":"364","severity":1,"message":"365","line":116,"column":49,"nodeType":"366","messageId":"367","endLine":116,"endColumn":50},{"ruleId":"364","severity":1,"message":"365","line":116,"column":64,"nodeType":"366","messageId":"367","endLine":116,"endColumn":65},{"ruleId":"364","severity":1,"message":"365","line":147,"column":57,"nodeType":"366","messageId":"367","endLine":147,"endColumn":58},{"ruleId":"364","severity":1,"message":"365","line":147,"column":61,"nodeType":"366","messageId":"367","endLine":147,"endColumn":62},{"ruleId":"364","severity":1,"message":"365","line":147,"column":76,"nodeType":"366","messageId":"367","endLine":147,"endColumn":77},{"ruleId":"374","severity":1,"message":"375","line":186,"column":6,"nodeType":"376","endLine":186,"endColumn":8,"suggestions":"377"},{"ruleId":"358","severity":1,"message":"378","line":3,"column":31,"nodeType":"360","messageId":"361","endLine":3,"endColumn":38},{"ruleId":"364","severity":1,"message":"365","line":165,"column":47,"nodeType":"366","messageId":"367","endLine":165,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":165,"column":51,"nodeType":"366","messageId":"367","endLine":165,"endColumn":52},{"ruleId":"364","severity":1,"message":"365","line":165,"column":66,"nodeType":"366","messageId":"367","endLine":165,"endColumn":67},{"ruleId":"364","severity":1,"message":"365","line":166,"column":45,"nodeType":"366","messageId":"367","endLine":166,"endColumn":46},{"ruleId":"364","severity":1,"message":"365","line":166,"column":49,"nodeType":"366","messageId":"367","endLine":166,"endColumn":50},{"ruleId":"364","severity":1,"message":"365","line":166,"column":64,"nodeType":"366","messageId":"367","endLine":166,"endColumn":65},{"ruleId":"364","severity":1,"message":"365","line":220,"column":57,"nodeType":"366","messageId":"367","endLine":220,"endColumn":58},{"ruleId":"364","severity":1,"message":"365","line":220,"column":61,"nodeType":"366","messageId":"367","endLine":220,"endColumn":62},{"ruleId":"364","severity":1,"message":"365","line":220,"column":76,"nodeType":"366","messageId":"367","endLine":220,"endColumn":77},{"ruleId":"374","severity":1,"message":"375","line":257,"column":6,"nodeType":"376","endLine":257,"endColumn":8,"suggestions":"379"},{"ruleId":"358","severity":1,"message":"380","line":16,"column":8,"nodeType":"360","messageId":"361","endLine":16,"endColumn":17},{"ruleId":"358","severity":1,"message":"381","line":20,"column":10,"nodeType":"360","messageId":"361","endLine":20,"endColumn":20},{"ruleId":"358","severity":1,"message":"382","line":80,"column":9,"nodeType":"360","messageId":"361","endLine":80,"endColumn":17},{"ruleId":"374","severity":1,"message":"383","line":131,"column":7,"nodeType":"384","endLine":131,"endColumn":19},{"ruleId":"368","severity":1,"message":"369","line":155,"column":39,"nodeType":"370","messageId":"371","endLine":155,"endColumn":41},{"ruleId":"368","severity":1,"message":"369","line":162,"column":39,"nodeType":"370","messageId":"371","endLine":162,"endColumn":41},{"ruleId":"368","severity":1,"message":"369","line":170,"column":40,"nodeType":"370","messageId":"371","endLine":170,"endColumn":42},{"ruleId":"368","severity":1,"message":"369","line":177,"column":40,"nodeType":"370","messageId":"371","endLine":177,"endColumn":42},{"ruleId":"368","severity":1,"message":"369","line":190,"column":39,"nodeType":"370","messageId":"371","endLine":190,"endColumn":41},{"ruleId":"368","severity":1,"message":"369","line":197,"column":39,"nodeType":"370","messageId":"371","endLine":197,"endColumn":41},{"ruleId":"368","severity":1,"message":"369","line":205,"column":40,"nodeType":"370","messageId":"371","endLine":205,"endColumn":42},{"ruleId":"368","severity":1,"message":"369","line":212,"column":40,"nodeType":"370","messageId":"371","endLine":212,"endColumn":42},{"ruleId":"368","severity":1,"message":"369","line":224,"column":26,"nodeType":"370","messageId":"371","endLine":224,"endColumn":28},{"ruleId":"368","severity":1,"message":"369","line":234,"column":26,"nodeType":"370","messageId":"371","endLine":234,"endColumn":28},{"ruleId":"368","severity":1,"message":"369","line":554,"column":32,"nodeType":"370","messageId":"371","endLine":554,"endColumn":34},{"ruleId":"374","severity":1,"message":"383","line":104,"column":7,"nodeType":"384","endLine":104,"endColumn":19},{"ruleId":"374","severity":1,"message":"383","line":124,"column":7,"nodeType":"384","endLine":124,"endColumn":19},{"ruleId":"385","severity":1,"message":"386","line":149,"column":9,"nodeType":"360","messageId":"387","endLine":149,"endColumn":21},{"ruleId":"385","severity":1,"message":"388","line":156,"column":9,"nodeType":"360","messageId":"387","endLine":156,"endColumn":20},{"ruleId":"374","severity":1,"message":"389","line":91,"column":6,"nodeType":"376","endLine":91,"endColumn":8,"suggestions":"390"},{"ruleId":"374","severity":1,"message":"391","line":115,"column":6,"nodeType":"376","endLine":115,"endColumn":8,"suggestions":"392"},{"ruleId":"364","severity":1,"message":"365","line":136,"column":57,"nodeType":"366","messageId":"367","endLine":136,"endColumn":58},{"ruleId":"364","severity":1,"message":"365","line":136,"column":61,"nodeType":"366","messageId":"367","endLine":136,"endColumn":62},{"ruleId":"364","severity":1,"message":"365","line":136,"column":76,"nodeType":"366","messageId":"367","endLine":136,"endColumn":77},{"ruleId":"368","severity":1,"message":"372","line":166,"column":43,"nodeType":"370","messageId":"373","endLine":166,"endColumn":45},{"ruleId":"374","severity":1,"message":"389","line":107,"column":6,"nodeType":"376","endLine":107,"endColumn":8,"suggestions":"393"},{"ruleId":"364","severity":1,"message":"365","line":123,"column":57,"nodeType":"366","messageId":"367","endLine":123,"endColumn":58},{"ruleId":"364","severity":1,"message":"365","line":123,"column":61,"nodeType":"366","messageId":"367","endLine":123,"endColumn":62},{"ruleId":"364","severity":1,"message":"365","line":123,"column":76,"nodeType":"366","messageId":"367","endLine":123,"endColumn":77},{"ruleId":"358","severity":1,"message":"394","line":18,"column":7,"nodeType":"360","messageId":"361","endLine":18,"endColumn":15},{"ruleId":"358","severity":1,"message":"395","line":25,"column":9,"nodeType":"360","messageId":"361","endLine":25,"endColumn":20},{"ruleId":"358","severity":1,"message":"396","line":14,"column":20,"nodeType":"360","messageId":"361","endLine":14,"endColumn":29},{"ruleId":"358","severity":1,"message":"397","line":18,"column":8,"nodeType":"360","messageId":"361","endLine":18,"endColumn":27},{"ruleId":"374","severity":1,"message":"398","line":82,"column":6,"nodeType":"376","endLine":82,"endColumn":8,"suggestions":"399"},{"ruleId":"358","severity":1,"message":"400","line":56,"column":9,"nodeType":"360","messageId":"361","endLine":56,"endColumn":17},{"ruleId":"374","severity":1,"message":"401","line":89,"column":6,"nodeType":"376","endLine":89,"endColumn":8,"suggestions":"402"},{"ruleId":"368","severity":1,"message":"369","line":122,"column":30,"nodeType":"370","messageId":"371","endLine":122,"endColumn":32},{"ruleId":"368","severity":1,"message":"369","line":129,"column":30,"nodeType":"370","messageId":"371","endLine":129,"endColumn":32},{"ruleId":"368","severity":1,"message":"369","line":136,"column":30,"nodeType":"370","messageId":"371","endLine":136,"endColumn":32},{"ruleId":"364","severity":1,"message":"365","line":300,"column":24,"nodeType":"366","messageId":"367","endLine":300,"endColumn":25},{"ruleId":"364","severity":1,"message":"365","line":300,"column":30,"nodeType":"366","messageId":"367","endLine":300,"endColumn":31},{"ruleId":"364","severity":1,"message":"365","line":300,"column":47,"nodeType":"366","messageId":"367","endLine":300,"endColumn":48},{"ruleId":"368","severity":1,"message":"369","line":825,"column":33,"nodeType":"370","messageId":"371","endLine":825,"endColumn":35},{"ruleId":"403","severity":1,"message":"404","line":1042,"column":19,"nodeType":"405","endLine":1042,"endColumn":49},{"ruleId":"403","severity":1,"message":"404","line":1044,"column":19,"nodeType":"405","endLine":1044,"endColumn":47},{"ruleId":"358","severity":1,"message":"406","line":22,"column":8,"nodeType":"360","messageId":"361","endLine":22,"endColumn":15},{"ruleId":"364","severity":1,"message":"365","line":89,"column":59,"nodeType":"366","messageId":"367","endLine":89,"endColumn":60},{"ruleId":"364","severity":1,"message":"365","line":89,"column":63,"nodeType":"366","messageId":"367","endLine":89,"endColumn":64},{"ruleId":"364","severity":1,"message":"365","line":89,"column":78,"nodeType":"366","messageId":"367","endLine":89,"endColumn":79},{"ruleId":"364","severity":1,"message":"365","line":99,"column":63,"nodeType":"366","messageId":"367","endLine":99,"endColumn":64},{"ruleId":"364","severity":1,"message":"365","line":99,"column":67,"nodeType":"366","messageId":"367","endLine":99,"endColumn":68},{"ruleId":"364","severity":1,"message":"365","line":99,"column":82,"nodeType":"366","messageId":"367","endLine":99,"endColumn":83},{"ruleId":"364","severity":1,"message":"365","line":122,"column":59,"nodeType":"366","messageId":"367","endLine":122,"endColumn":60},{"ruleId":"364","severity":1,"message":"365","line":122,"column":63,"nodeType":"366","messageId":"367","endLine":122,"endColumn":64},{"ruleId":"364","severity":1,"message":"365","line":122,"column":78,"nodeType":"366","messageId":"367","endLine":122,"endColumn":79},{"ruleId":"374","severity":1,"message":"398","line":41,"column":7,"nodeType":"376","endLine":41,"endColumn":9,"suggestions":"407"},{"ruleId":"374","severity":1,"message":"408","line":52,"column":7,"nodeType":"376","endLine":52,"endColumn":9,"suggestions":"409"},{"ruleId":"374","severity":1,"message":"408","line":64,"column":7,"nodeType":"376","endLine":64,"endColumn":9,"suggestions":"410"},{"ruleId":"374","severity":1,"message":"411","line":76,"column":7,"nodeType":"376","endLine":76,"endColumn":9,"suggestions":"412"},{"ruleId":"374","severity":1,"message":"413","line":87,"column":7,"nodeType":"376","endLine":87,"endColumn":9,"suggestions":"414"},{"ruleId":"374","severity":1,"message":"415","line":36,"column":6,"nodeType":"376","endLine":36,"endColumn":8,"suggestions":"416"},{"ruleId":"374","severity":1,"message":"417","line":16,"column":7,"nodeType":"376","endLine":16,"endColumn":9,"suggestions":"418"},{"ruleId":"374","severity":1,"message":"417","line":19,"column":6,"nodeType":"376","endLine":19,"endColumn":8,"suggestions":"419"},{"ruleId":"358","severity":1,"message":"420","line":11,"column":22,"nodeType":"360","messageId":"361","endLine":11,"endColumn":33},{"ruleId":"374","severity":1,"message":"398","line":41,"column":7,"nodeType":"376","endLine":41,"endColumn":9,"suggestions":"421"},"no-native-reassign",["422"],"no-negated-in-lhs",["423"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addEventListeners' and 'removeEventListeners'. Either include them or remove the dependency array.","ArrayExpression",["424"],"'useMemo' is defined but never used.",["425"],"'CountDown' is defined but never used.","'useHistory' is defined but never used.","'renderer' is assigned a value but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","no-redeclare","'postContract' is already defined.","redeclared","'postInvoice' is already defined.","React Hook useEffect has a missing dependency: 'location.state.data.signer.id'. Either include it or remove the dependency array.",["426"],"React Hook useEffect has a missing dependency: 'location.state.data.signer_guest.id'. Either include it or remove the dependency array.",["427"],["428"],"'listNoti' is assigned a value but never used.","'currentPost' is assigned a value but never used.","'setAvatar' is assigned a value but never used.","'InsertDriveFileIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'param.id'. Either include it or remove the dependency array.",["429"],"'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'par.id'. Either include it or remove the dependency array.",["430"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'AddIcon' is defined but never used.",["431"],"React Hook useEffect has a missing dependency: 'document.contractSigners'. Either include it or remove the dependency array.",["432"],["433"],"React Hook useEffect has a missing dependency: 'signerA.companyId'. Either include it or remove the dependency array.",["434"],"React Hook useEffect has a missing dependency: 'signerB.companyId'. Either include it or remove the dependency array.",["435"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["436"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["437"],["438"],"'useLocation' is defined but never used.",["439"],"no-global-assign","no-unsafe-negation",{"desc":"440","fix":"441"},{"desc":"440","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"443","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"448","fix":"452"},{"desc":"453","fix":"454"},{"desc":"453","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"462","fix":"464"},{"desc":"448","fix":"465"},"Update the dependencies array to be: [addEventListeners, removeEventListeners]",{"range":"466","text":"467"},{"range":"468","text":"467"},"Update the dependencies array to be: [location.state.data.signer.id]",{"range":"469","text":"470"},"Update the dependencies array to be: [location.state.data.signer_guest.id]",{"range":"471","text":"472"},{"range":"473","text":"470"},"Update the dependencies array to be: [param.id]",{"range":"474","text":"475"},"Update the dependencies array to be: [par.id]",{"range":"476","text":"477"},{"range":"478","text":"475"},"Update the dependencies array to be: [document.contractSigners]",{"range":"479","text":"480"},{"range":"481","text":"480"},"Update the dependencies array to be: [signerA.companyId]",{"range":"482","text":"483"},"Update the dependencies array to be: [signerB.companyId]",{"range":"484","text":"485"},"Update the dependencies array to be: [history]",{"range":"486","text":"487"},"Update the dependencies array to be: [id]",{"range":"488","text":"489"},{"range":"490","text":"489"},{"range":"491","text":"475"},[5321,5323],"[addEventListeners, removeEventListeners]",[7123,7125],[2707,2709],"[location.state.data.signer.id]",[3267,3269],"[location.state.data.signer_guest.id]",[3262,3264],[3036,3038],"[param.id]",[2994,2996],"[par.id]",[1622,1624],[1954,1956],"[document.contractSigners]",[2286,2288],[2608,2610],"[signerA.companyId]",[2929,2931],"[signerB.companyId]",[1027,1029],"[history]",[475,477],"[id]",[580,582],[1617,1619]]