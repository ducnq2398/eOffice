[{"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\App\\App.js":"2","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\RouterURL\\RouterURL.js":"3","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminLogin\\AdminLogin.js":"4","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Login\\Login.js":"5","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\utils\\Common.js":"6","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminManager\\AdminManager.js":"7","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\ForgotPassword\\ResetPassword.js":"8","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CompanyList\\CompanyList.js":"9","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\EditCompany\\EditCompany.js":"10","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Dashboard\\Dashboard.js":"11","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Error\\Error.js":"12","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\InvoiceContent.js":"13","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\ForgotPassword\\ForgotPassword.js":"14","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\ContractContent.js":"15","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\CreateContract.js":"16","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Notification\\Notification.js":"17","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\CreateInvoice.js":"18","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Document\\Document.js":"19","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\DetailDocument\\ContractDetail.js":"20","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\DetailDocument\\InvoiceDetail.js":"21","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminCompany\\DepartmentManagement\\DepartmentManagement.js":"22","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminCompany\\UserManagement\\UserManagement.js":"23","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CompanyRegister\\CompanyRegister.js":"24","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Profile\\Profile.js":"25","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\App\\firebase.js":"26","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\loginAPI.js":"27","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\companyListAPI.js":"28","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\userListAPI.js":"29","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\Sidebar.js":"30","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetAdminCompany\\GetAdminCompany.js":"31","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\SidebarAdmin.js":"32","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Nav\\Header.js":"33","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Navbar\\Navbar.js":"34","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Stepper\\ContractStepper.js":"35","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Stepper\\InvoiceStepper.js":"36","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\departmentAPI.js":"37","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\validateAPI.js":"38","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\axiosClient.js":"39","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\notiAPI.js":"40","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetDepartment.js":"41","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetPhone.js":"42","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetEmail.js":"43","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetCreater.js":"44","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\invoiceAPI.js":"45","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepDetail.js":"46","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\contractAPI.js":"47","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\PDF\\PDF.js":"48","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepDetailContract.js":"49","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepInvoice.js":"50","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\Stepper.js":"51"},{"size":266,"mtime":1616501057572,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":1616501057498,"results":"54","hashOfConfig":"53"},{"size":4190,"mtime":1616501057509,"results":"55","hashOfConfig":"53"},{"size":3032,"mtime":1616501057497,"results":"56","hashOfConfig":"53"},{"size":5260,"mtime":1616501057506,"results":"57","hashOfConfig":"53"},{"size":545,"mtime":1616501057573,"results":"58","hashOfConfig":"53"},{"size":456,"mtime":1616501057497,"results":"59","hashOfConfig":"53"},{"size":2856,"mtime":1616501057503,"results":"60","hashOfConfig":"53"},{"size":7407,"mtime":1616501057498,"results":"61","hashOfConfig":"53"},{"size":8108,"mtime":1616682574422,"results":"62","hashOfConfig":"53"},{"size":11409,"mtime":1616740779507,"results":"63","hashOfConfig":"53"},{"size":691,"mtime":1616501057503,"results":"64","hashOfConfig":"53"},{"size":11188,"mtime":1616501057500,"results":"65","hashOfConfig":"53"},{"size":4798,"mtime":1616685953699,"results":"66","hashOfConfig":"53"},{"size":13892,"mtime":1616501057499,"results":"67","hashOfConfig":"53"},{"size":31297,"mtime":1616743381565,"results":"68","hashOfConfig":"53"},{"size":6386,"mtime":1616745229699,"results":"69","hashOfConfig":"53"},{"size":22573,"mtime":1616743661400,"results":"70","hashOfConfig":"53"},{"size":25884,"mtime":1616689017232,"results":"71","hashOfConfig":"53"},{"size":11977,"mtime":1616501057501,"results":"72","hashOfConfig":"53"},{"size":9488,"mtime":1616596398661,"results":"73","hashOfConfig":"53"},{"size":18448,"mtime":1616744101288,"results":"74","hashOfConfig":"53"},{"size":37747,"mtime":1616743892410,"results":"75","hashOfConfig":"53"},{"size":16984,"mtime":1616676740530,"results":"76","hashOfConfig":"53"},{"size":24074,"mtime":1616689754999,"results":"77","hashOfConfig":"53"},{"size":422,"mtime":1616501057498,"results":"78","hashOfConfig":"53"},{"size":341,"mtime":1616501057494,"results":"79","hashOfConfig":"53"},{"size":1425,"mtime":1616682523292,"results":"80","hashOfConfig":"53"},{"size":2052,"mtime":1616501057494,"results":"81","hashOfConfig":"53"},{"size":4666,"mtime":1616501057509,"results":"82","hashOfConfig":"53"},{"size":792,"mtime":1616501057504,"results":"83","hashOfConfig":"53"},{"size":2579,"mtime":1616501057509,"results":"84","hashOfConfig":"53"},{"size":2788,"mtime":1616501057506,"results":"85","hashOfConfig":"53"},{"size":7522,"mtime":1616744533032,"results":"86","hashOfConfig":"53"},{"size":362,"mtime":1616501057511,"results":"87","hashOfConfig":"53"},{"size":300,"mtime":1616501057511,"results":"88","hashOfConfig":"53"},{"size":1708,"mtime":1616677748542,"results":"89","hashOfConfig":"53"},{"size":589,"mtime":1616501057495,"results":"90","hashOfConfig":"53"},{"size":158,"mtime":1616501057492,"results":"91","hashOfConfig":"53"},{"size":332,"mtime":1616501057494,"results":"92","hashOfConfig":"53"},{"size":831,"mtime":1616501057504,"results":"93","hashOfConfig":"53"},{"size":794,"mtime":1616501057505,"results":"94","hashOfConfig":"53"},{"size":794,"mtime":1616501057505,"results":"95","hashOfConfig":"53"},{"size":798,"mtime":1616501057504,"results":"96","hashOfConfig":"53"},{"size":1421,"mtime":1616501057494,"results":"97","hashOfConfig":"53"},{"size":3617,"mtime":1616742274394,"results":"98","hashOfConfig":"53"},{"size":1689,"mtime":1616501057493,"results":"99","hashOfConfig":"53"},{"size":1275,"mtime":1616501057508,"results":"100","hashOfConfig":"53"},{"size":5327,"mtime":1616741926597,"results":"101","hashOfConfig":"53"},{"size":956,"mtime":1616501057511,"results":"102","hashOfConfig":"53"},{"size":1024,"mtime":1616501057511,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"lohtio",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\index.js",[],["215","216"],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\App\\App.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\RouterURL\\RouterURL.js",["217"],"import {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport AdminLogin from \"../AdminLogin/AdminLogin\";\r\nimport AdminManager from \"../AdminManager/AdminManager\";\r\nimport Login from \"../Login/Login\";\r\nimport CompanyRegister from \"../CompanyRegister/CompanyRegister\";\r\nimport CompanyList from \"../CompanyList/CompanyList\";\r\nimport ForgotPassword from \"../ForgotPassword/ForgotPassword\";\r\nimport EditCompany from \"../EditCompany/EditCompany\";\r\nimport { getToken, getUser } from \"../../utils/Common\";\r\nimport ResetPassword from \"../ForgotPassword/ResetPassword\";\r\nimport UserManagement from \"../AdminCompany/UserManagement/UserManagement\";\r\nimport CreateContract from \"../CreateDocument/CreateContract\";\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\nimport Document from \"../Document/Document\";\r\nimport Error from \"../Error/Error\";\r\nimport DepartmentManagerment from \"../AdminCompany/DepartmentManagement/DepartmentManagement\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport CreateInvoice from \"../CreateDocument/CreateInvoice\";\r\nimport InvoiceContent from \"../CreateDocument/InvoiceContent\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport ContractContent from \"../CreateDocument/ContractContent\";\r\nimport InvoiceDetail from \"../DetailDocument/InvoiceDetail\";\r\nimport ContractDetail from \"../DetailDocument/ContractDetail\";\r\n\r\nfunction RouterURL() {\r\n  const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        getToken() && getUser().Role === \"3\" ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/error\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n\r\n  const AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        getToken() && getUser().Role === \"1\" ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/error\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n  const UserRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        getToken() && getUser().Role !== \"3\" ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/error\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path=\"/error\" component={Error} />\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/admin\" component={AdminLogin} />\r\n        <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n        <Route path=\"/reset-password\" component={ResetPassword} />\r\n        <Route path=\"/error\" component={Error} />\r\n        <UserRoute path=\"/contract\" component={CreateContract} />\r\n        <UserRoute path=\"/invoice\" component={CreateInvoice} />\r\n        <UserRoute path=\"/dashboard\" component={Dashboard} />\r\n        <UserRoute path=\"/invoice-confirm\" component={InvoiceContent} />\r\n        <UserRoute path=\"/contract-confirm\" component={ContractContent} />\r\n        <UserRoute path=\"/document\" component={Document} />\r\n        <UserRoute path=\"/detail/invoice/:id/:name\" component={InvoiceDetail} />\r\n        <UserRoute\r\n          path=\"/detail/contract/:id/:name\"\r\n          component={ContractDetail}\r\n        />\r\n        <UserRoute path=\"/notification\" component={Notification} />\r\n        <AdminRoute path=\"/department\" component={DepartmentManagerment} />\r\n        <AdminRoute path=\"/user-management\" component={UserManagement} />\r\n        <PrivateRoute path=\"/admin-manager\" component={AdminManager} />\r\n        <PrivateRoute path=\"/company-register\" component={CompanyRegister} />\r\n        <PrivateRoute path=\"/company-list\" component={CompanyList} />\r\n        <PrivateRoute path=\"/edit-company\" component={EditCompany} />\r\n        <UserRoute path=\"/profile\" component={Profile} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\nexport default RouterURL;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminLogin\\AdminLogin.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Login\\Login.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\utils\\Common.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminManager\\AdminManager.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\ForgotPassword\\ResetPassword.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CompanyList\\CompanyList.js",["218","219","220"],"import {\r\n  Container,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Table,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport companyListAPI from \"../../api/companyListAPI\";\r\nimport SidebarAdmin from \"../Sidebar/SidebarAdmin\";\r\nimport \"../../css/CompanyList.css\";\r\nimport GetAdminCompany from \"../GetAdminCompany/GetAdminCompany\";\r\nimport Moment from \"moment\";\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\r\n\r\nfunction CompanyList() {\r\n  const [filter, setFilter] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const toggle = () => setFilter((prevState) => !prevState);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [postList, setPostList] = useState([]);\r\n  const indexOfLastPost = (page + 1) * rowsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\r\n  const currentPosts = postList.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  function changePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  useEffect(() => {\r\n    async function fetListData() {\r\n      try {\r\n        const response = await companyListAPI.getAll();\r\n        setPostList(response.data);\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetListData();\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2000);\r\n  }, []);\r\n  function Active() {\r\n    setPostList(\r\n      data.filter((data) => {\r\n        if (data.status === 1) {\r\n          return data;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  function listDeactive() {\r\n    setPostList(\r\n      data.filter((data) => {\r\n        if (data.status !== 1) {\r\n          return data;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  function All() {\r\n    setPostList(data);\r\n  }\r\n  return (\r\n    <div>\r\n      <SidebarAdmin />\r\n      <div className=\"main-panel1\">\r\n        <Container fluid={true}>\r\n          <div className=\"search_form\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col xs={10}>\r\n                    <Input\r\n                      type=\"search\"\r\n                      className=\"form-control rounded\"\r\n                      value={search}\r\n                      onChange={(event) => {\r\n                        setSearch(event.target.value);\r\n                      }}\r\n                      placeholder=\"Search by name company\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs={2}>\r\n                    <Dropdown isOpen={filter} toggle={toggle}>\r\n                      <DropdownToggle color=\"primary\" caret>\r\n                        Filter\r\n                      </DropdownToggle>\r\n                      <DropdownMenu>\r\n                        <DropdownItem onClick={All}>All</DropdownItem>\r\n                        <DropdownItem onClick={Active}>Active</DropdownItem>\r\n                        <DropdownItem onClick={listDeactive}>\r\n                          Deactive\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n          {loading ? (\r\n            <ScaleLoader color={\"#2512DF\"} loading={loading} size={35} />\r\n          ) : (\r\n            <div hidden={search !== \"\" ? true : false}>\r\n              <TablePagination\r\n                component=\"div\"\r\n                count={postList.length}\r\n                page={page}\r\n                onChangePage={changePage}\r\n                rowsPerPage={rowsPerPage}\r\n                labelRowsPerPage=\"\"\r\n                rowsPerPageOptions={[]}\r\n              />\r\n              <Table hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>No</th>\r\n                    <th>Company Name</th>\r\n                    <th>Manager Name</th>\r\n                    <th>Date Created</th>\r\n                    <th>Status</th>\r\n                    <th>Phone Number</th>\r\n                    <th>Edits/Details</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentPosts.map((data, key) => (\r\n                    <tr key={key}>\r\n                      <th>{data.id}</th>\r\n                      <td>{data.name}</td>\r\n                      <td>\r\n                        <GetAdminCompany id={data.adminId} />\r\n                      </td>\r\n                      <td>\r\n                        {Moment(data.dateCreate).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                      </td>\r\n                      <td>\r\n                        {data.status === 1 ? (\r\n                          <p style={{ color: \"green\" }}>Active</p>\r\n                        ) : (\r\n                          <p style={{ color: \"red\" }}>Deactive</p>\r\n                        )}\r\n                      </td>\r\n                      <td>{data.phone}</td>\r\n                      <td>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/edit-company\",\r\n                            state: data,\r\n                          }}\r\n                        >\r\n                          Edit/Detail\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n          <Table hidden={search === \"\" ? true : false}>\r\n            <thead>\r\n              <tr>\r\n                <th>No</th>\r\n                <th>Company Name</th>\r\n                <th>Manager Name</th>\r\n                <th>Date Created</th>\r\n                <th>Status</th>\r\n                <th>Phone Number</th>\r\n                <th>Edits/Details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data\r\n                .filter((data) => {\r\n                  if (data.name.toLowerCase().includes(search.toLowerCase())) {\r\n                    return data;\r\n                  }\r\n                })\r\n                .map((data) => (\r\n                  <tr key={data.id}>\r\n                    <th>{data.id}</th>\r\n                    <td>{data.name}</td>\r\n                    <td>\r\n                      <GetAdminCompany id={data.adminId} />\r\n                    </td>\r\n                    <td>{data.dateCreate}</td>\r\n                    <td>\r\n                      {data.status === 1 ? (\r\n                        <p style={{ color: \"green\" }}>Active</p>\r\n                      ) : (\r\n                        <p style={{ color: \"red\" }}>Deactive</p>\r\n                      )}\r\n                    </td>\r\n                    <td>{data.phone}</td>\r\n                    <td>\r\n                      <Link\r\n                        to={{\r\n                          pathname: \"/edit-company\",\r\n                          state: data,\r\n                        }}\r\n                      >\r\n                        Edit/Detail\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CompanyList;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\EditCompany\\EditCompany.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Dashboard\\Dashboard.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Error\\Error.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\InvoiceContent.js",["221","222","223","224"],"import { Container, Form, FormGroup, Row, Col, Label } from \"reactstrap\";\r\nimport Header from \"../Nav/Header\";\r\nimport StepInvoice from \"../Sidebar/StepInvoice\";\r\nimport PDF from \"../PDF/PDF\";\r\nimport \"../../css/CreateDoc.css\";\r\nimport userListAPI from \"../../api/userListAPI\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { forwardRef, useEffect, useState } from \"react\";\r\nimport { getUser } from \"../../utils/Common\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport invoiceAPI from \"../../api/invoiceAPI\";\r\nimport axios from \"axios\";\r\nimport Moment from \"moment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  InputAdornment,\r\n  Slide,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport TitleIcon from \"@material-ui/icons/Title\";\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport \"date-fns\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\ntoast.configure();\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: theme.palette.common.black,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\nfunction InvoiceContent() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [create, setCreate] = useState(false);\r\n  function toogle() {\r\n    setCreate(!create);\r\n  }\r\n  const [loading, setLoading] = useState(false);\r\n  const [signer, setSigner] = useState(\"\");\r\n  const viewer = location.state.viewer;\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage] = useState(4);\r\n  const indexOfLastPost = (page + 1) * rowsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\r\n  const currentPosts = viewer.slice(indexOfFirstPost, indexOfLastPost);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  useEffect(() => {\r\n    async function getSigner() {\r\n      try {\r\n        const res = await userListAPI.getUserById(\r\n          location.state.data.signer.id\r\n        );\r\n        setSigner(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getSigner();\r\n  }, [location.state.data.signer.id]);\r\n\r\n  async function handleCreated(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const file = location.state.file[0];\r\n    const convertBase64 = await base64(file);\r\n    const url = convertBase64.slice(28);\r\n    const position =\r\n      \"page=\" +\r\n      location.state.numberPage +\r\n      \",x=\" +\r\n      location.state.signLocation.x +\r\n      \",y=\" +\r\n      location.state.signLocation.y;\r\n    const params = {\r\n      dateCreate: Moment(new Date()).format(\r\n        \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\r\n      ),\r\n      creatorId: getUser().Id,\r\n      dateExpire: location.state.date,\r\n      title: location.state.data.title,\r\n      signerId: location.state.data.signer.id,\r\n      signLocation: position,\r\n      invoiceURL: url,\r\n    };\r\n    invoiceAPI\r\n      .addInvoice(params)\r\n      .then(function (res) {\r\n        const invoiceId = res.data.id;\r\n        const viewer = {\r\n          invoiceId: invoiceId,\r\n          listViewersId: location.state.listViewerId,\r\n        };\r\n        axios\r\n          .put(\r\n            \"https://datnxeoffice.azurewebsites.net/api/invoices/addviewertoinvoice\",\r\n            viewer,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${getUser().IdToken}`,\r\n              },\r\n            }\r\n          )\r\n          .then(function (res) {\r\n            toast.success(\"You has created invoice successfully\", {\r\n              position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            history.push({\r\n              pathname:\r\n                \"/detail/invoice/\" +\r\n                invoiceId +\r\n                \"/\" +\r\n                location.state.data.title,\r\n            });\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n  function base64(file) {\r\n    return new Promise((resolve) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result);\r\n      };\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Navbar />\r\n      </header>\r\n      <StepInvoice activeStep={5} />\r\n      <main className=\"main-invoice\">\r\n        <Container fluid={true}>\r\n          <Row>\r\n            <Col>\r\n              <Paper style={{ marginTop: \"20px\" }} elevation={3}>\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                  }}\r\n                >\r\n                  Invoice Content\r\n                </Label>\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  value={location.state.data.title}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <TitleIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  value={signer.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BorderColorIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n\r\n                <TableContainer style={{ marginTop: \"20px\", padding: \"10px\" }}>\r\n                  <Table aria-label=\"customized table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell>Viewer name</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">Email</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">\r\n                          Phone number\r\n                        </StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {currentPosts.map((row) => (\r\n                        <StyledTableRow key={row.name}>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {row.name}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            {row.email}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            {row.phone}\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={viewer.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  labelRowsPerPage=\"\"\r\n                  onChangePage={handleChangePage}\r\n                  rowsPerPageOptions={[]}\r\n                />\r\n                <TextField\r\n                  label=\"Date expiration\"\r\n                  value={moment(location.state.date).format(\r\n                    \"DD/MM/YYYY HH:mm:ss\"\r\n                  )}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <EventAvailableIcon color=\"primary\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </Paper>\r\n              <Button\r\n                style={{ marginTop: \"20px\", marginRight: \"10px\" }}\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={() => history.push(\"/document\")}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                style={{ marginTop: \"20px\" }}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={toogle}\r\n              >\r\n                Create\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Form className=\"form-doc\">\r\n                <FormGroup row>\r\n                  <div>\r\n                    <PDF pdf={location.state.file[0]} />\r\n                  </div>\r\n                </FormGroup>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Dialog\r\n          open={create}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={toogle}\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          fullWidth\r\n        >\r\n          <DialogTitle>{\"Do you want create Invoice?\"}</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={toogle} color=\"secondary\" variant=\"contained\">\r\n              No\r\n            </Button>\r\n            <Button onClick={handleCreated} color=\"primary\" variant=\"contained\">\r\n              Yes\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Backdrop className={useStyles().backdrop} open={loading}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default InvoiceContent;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\ForgotPassword\\ForgotPassword.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\ContractContent.js",["225","226","227","228"],"import { Container, Form, FormGroup, Row, Col, Label } from \"reactstrap\";\r\nimport StepContract from \"../Sidebar/Stepper\";\r\nimport PDF from \"../PDF/PDF\";\r\nimport \"../../css/CreateDoc.css\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { forwardRef, useEffect, useState } from \"react\";\r\nimport userListAPI from \"../../api/userListAPI\";\r\nimport companyListAPI from \"../../api/companyListAPI\";\r\nimport { getUser } from \"../../utils/Common\";\r\nimport contractAPI from \"../../api/contractAPI\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TitleIcon from \"@material-ui/icons/Title\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\nimport {\r\n  InputAdornment,\r\n  Paper,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  Table,\r\n  TextField,\r\n  withStyles,\r\n  TablePagination,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: theme.palette.common.black,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction ContractContent() {\r\n  const location = useLocation();\r\n  console.log(location)\r\n  const history = useHistory();\r\n  const [create, setCreate] = useState(false);\r\n  const [signer, setSigner] = useState(\"\");\r\n  const [guest, setGuest] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage] = useState(2);\r\n  const indexOfLastPost = (page + 1) * rowsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\r\n  const viewer = location.state.viewer;\r\n  const currentPosts = viewer.slice(indexOfFirstPost, indexOfLastPost);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  function toogle() {\r\n    setCreate(!create);\r\n  }\r\n  useEffect(() => {\r\n    async function getSigner() {\r\n      try {\r\n        const res = await userListAPI.getUserById(\r\n          location.state.data.signer.id\r\n        );\r\n        setSigner(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getSigner();\r\n  }, [location.state.data.signer.id]);\r\n  useEffect(() => {\r\n    async function getCompany() {\r\n      try {\r\n        const res = await companyListAPI.getCompanyById(getUser().CompanyId);\r\n        setCompany(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getCompany();\r\n  }, []);\r\n  useEffect(() => {\r\n    async function getGuest() {\r\n      try {\r\n        const res = await userListAPI.getUserById(\r\n          location.state.data.signer_guest.id\r\n        );\r\n        setGuest(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getGuest();\r\n  }, [location.state.data.signer_guest.id]);\r\n\r\n  async function handleCreated(e) {\r\n    e.preventDefault();\r\n    const file = location.state.file[0];\r\n    const convertBase64 = await base64(file);\r\n    const url = convertBase64.slice(28);\r\n    const position =\r\n      \"page=\" +\r\n      location.state.numberPage +\r\n      \",x=\" +\r\n      location.state.signLocationA.x +\r\n      \",y=\" +\r\n      location.state.signLocationA.y +\r\n      \"|page=\" +\r\n      location.state.numberPage +\r\n      \",x=\" +\r\n      location.state.signLocationB.x +\r\n      \",y=\" +\r\n      location.state.signLocationB.y;\r\n    const params = {\r\n      dateCreate: Moment(new Date()).format(\r\n        \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\r\n      ),\r\n      creatorId: getUser().Id,\r\n      dateExpire: location.state.date,\r\n      title: location.state.data.title,\r\n      contractURL: url,\r\n      signLocation: position,\r\n    };\r\n    contractAPI\r\n      .addContract(params)\r\n      .then(function (res) {\r\n        const contractId = res.data.id;\r\n        const listSigner = [];\r\n        listSigner.push(location.state.data.signer.id);\r\n        listSigner.push(location.state.data.signer_guest.id);\r\n        const data = {\r\n          contractId: contractId,\r\n          listSignersId: listSigner,\r\n        };\r\n        axios\r\n          .put(\r\n            \"https://datnxeoffice.azurewebsites.net/api/contracts/addsignertocontract\",\r\n            data,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${getUser().IdToken}`,\r\n              },\r\n            }\r\n          )\r\n          .then(function (res) {\r\n            const listViewerId = [];\r\n            location.state.viewer.map((v) => {\r\n              listViewerId.push(v.id);\r\n            });\r\n            listViewerId.push(getUser().Id);\r\n            const viewer = {\r\n              contractId: contractId,\r\n              listViewersId: listViewerId,\r\n            };\r\n            axios\r\n              .put(\r\n                \"https://datnxeoffice.azurewebsites.net/api/contracts/addviewertocontract\",\r\n                viewer,\r\n                {\r\n                  headers: {\r\n                    Authorization: `Bearer ${getUser().IdToken}`,\r\n                  },\r\n                }\r\n              )\r\n              .then(function (res) {\r\n                toast.success(\"You has created contract successfully\", {\r\n                  position: toast.POSITION.TOP_CENTER,\r\n                });\r\n                history.push({\r\n                  pathname:\r\n                    \"/detail/contract/\" +\r\n                    contractId +\r\n                    \"/\" +\r\n                    location.state.data.title,\r\n                });\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function base64(file) {\r\n    return new Promise((resolve) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result);\r\n      };\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Navbar />\r\n      </header>\r\n      <StepContract activeStep={7} />\r\n      <main className=\"main-contract\">\r\n        <Container fluid>\r\n          <Row>\r\n            <Col>\r\n              <Paper style={{ marginTop: \"20px\" }} elevation={3}>\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                  }}\r\n                >\r\n                  Contract Content\r\n                </Label>\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  value={location.state.data.title}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <TitleIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  value={company.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BusinessIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  value={signer.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BorderColorIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  value={location.state.data.company_guest.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BusinessIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  value={guest.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BorderColorIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TableContainer>\r\n                  <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell>Viewer name</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">Email</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">\r\n                          Phone number\r\n                        </StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {currentPosts.map((row) => (\r\n                        <StyledTableRow key={row.name}>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {row.name}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            {row.email}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            {row.phone}\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={viewer.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  labelRowsPerPage=\"\"\r\n                  onChangePage={handleChangePage}\r\n                  rowsPerPageOptions={[]}\r\n                />\r\n\r\n                <TextField\r\n                  label=\"Date expiration\"\r\n                  value={moment(location.state.date).format(\r\n                    \"DD/MM/YYYY HH:mm:ss\"\r\n                  )}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <EventAvailableIcon color=\"primary\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </Paper>\r\n              <Button\r\n                style={{ marginTop: \"20px\", marginRight: \"10px\" }}\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={() => history.push(\"/document\")}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                style={{ marginTop: \"20px\" }}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={toogle}\r\n              >\r\n                Create\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Form className=\"form-doc\">\r\n                <FormGroup row>\r\n                  <div>\r\n                    <PDF pdf={location.state.file[0]} />\r\n                  </div>\r\n                </FormGroup>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Dialog\r\n          open={create}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={toogle}\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          fullWidth\r\n        >\r\n          <DialogTitle>{\"Do you want create Contract?\"}</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={toogle} color=\"secondary\" variant=\"contained\">\r\n              No\r\n            </Button>\r\n            <Button onClick={handleCreated} color=\"primary\" variant=\"contained\">\r\n              Yes\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default ContractContent;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\CreateContract.js",["229","230","231","232","233","234","235","236","237","238","239"],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Notification\\Notification.js",["240","241"],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CreateDocument\\CreateInvoice.js",["242","243","244","245","246","247","248","249","250","251","252"],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Document\\Document.js",["253","254","255","256","257","258","259","260","261"],"import {\r\n  Container,\r\n  Row,\r\n  FormGroup,\r\n  Col,\r\n  Table,\r\n  Label,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nimport \"../../css/Document.css\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport { forwardRef, useEffect, useState } from \"react\";\r\nimport notsigned from \"../../images/status.png\";\r\nimport done from \"../../images/true.png\";\r\nimport invoicecompleted from \"../../images/invoicecompleted.png\";\r\nimport choo from \"../../images/choo.png\";\r\nimport invoiceAPI from \"../../api/invoiceAPI\";\r\nimport GetCreater from \"../GetData/GetCreater\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport contractAPI from \"../../api/contractAPI\";\r\nimport { getUser } from \"../../utils/Common\";\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Moment from \"moment\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { InputAdornment } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport InvoiceStepper from \"../Stepper/InvoiceStepper\";\r\nimport ContractStepper from \"../Stepper/ContractStepper\";\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\nfunction Document() {\r\n  const history = useHistory();\r\n  let [loading, setLoading] = useState(true);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [dele, setDel] = useState(false);\r\n  const toogle = () => setIsOpen(!isOpen);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [postList, setPostList] = useState([]);\r\n  const [listAllDocument, setListAllDocument] = useState([]);\r\n  const [listInvoice, setListInvoice] = useState([]);\r\n  const [listContract, setListContract] = useState([]);\r\n  const [find, setFind] = useState(\"\");\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage] = useState(10);\r\n  const indexOfLastPost = (page + 1) * rowsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\r\n\r\n  var post = postList\r\n    .sort((a, b) => {\r\n      return (\r\n        new Date(a.dateCreate).getTime() - new Date(b.dateCreate).getTime()\r\n      );\r\n    })\r\n    .reverse();\r\n  const currentPosts = post.slice(indexOfFirstPost, indexOfLastPost);\r\n  function changePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const [value, setValue] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getListDocument() {\r\n      try {\r\n        if (getUser().Role === \"1\") {\r\n          await contractAPI\r\n            .getContractByCompanyId(getUser().CompanyId)\r\n            .then(function (contract) {\r\n              invoiceAPI\r\n                .getInvoiceByCompanyId(getUser().CompanyId)\r\n                .then(function (invoice) {\r\n                  const list = [...contract.data, ...invoice.data];\r\n                  setListAllDocument(list);\r\n                  setPostList(list);\r\n                  setListInvoice(invoice.data);\r\n                  setListContract(contract.data);\r\n                  setTimeout(() => {\r\n                    setLoading(false);\r\n                  }, 2000);\r\n                })\r\n                .catch(function (error) {\r\n                  console.log(error);\r\n                });\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else {\r\n          await invoiceAPI\r\n            .getInvoiceByViewerId(getUser().Id)\r\n            .then(function (res1) {\r\n              invoiceAPI\r\n                .getInvoiceBySignerId(getUser().Id)\r\n                .then(function (res2) {\r\n                  contractAPI\r\n                    .getContractByViewerId(getUser().Id)\r\n                    .then(function (res3) {\r\n                      contractAPI\r\n                        .getContractBySignerId(getUser().Id)\r\n                        .then(function (res4) {\r\n                          const list = [\r\n                            ...res1.data,\r\n                            ...res2.data,\r\n                            ...res3.data,\r\n                            ...res4.data,\r\n                          ];\r\n                          const listInvoice1 = [...res1.data, ...res2.data];\r\n                          const listContract1 = [...res3.data, ...res4.data];\r\n                          setListAllDocument(list);\r\n                          setPostList(list);\r\n                          setListInvoice(listInvoice1);\r\n                          setListContract(listContract1);\r\n                          setTimeout(() => {\r\n                            setLoading(false);\r\n                          }, 2000);\r\n                        })\r\n                        .catch(function (error) {\r\n                          console.log(error);\r\n                        });\r\n                    })\r\n                    .catch(function (error) {\r\n                      console.log(error);\r\n                    });\r\n                })\r\n                .catch(function (error) {\r\n                  console.log(error);\r\n                });\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getListDocument();\r\n  }, []);\r\n\r\n  function AddContract() {\r\n    history.push(\"/contract\");\r\n  }\r\n  function AddInvoice() {\r\n    history.push(\"/invoice\");\r\n  }\r\n\r\n  function All() {\r\n    setPage(0);\r\n    setPostList(listAllDocument);\r\n    setValue(0);\r\n  }\r\n  function Invoice() {\r\n    setPage(0);\r\n    setPostList(\r\n      listAllDocument.filter((data) => {\r\n        if (data.invoiceURL) {\r\n          return data;\r\n        }\r\n      })\r\n    );\r\n    setValue(0);\r\n  }\r\n  function Contract() {\r\n    setPage(0);\r\n    setPostList(\r\n      listAllDocument.filter((data) => {\r\n        if (data.contractUrl) {\r\n          return data;\r\n        }\r\n      })\r\n    );\r\n\r\n    setValue(0);\r\n  }\r\n  function Signed() {\r\n    setPage(0);\r\n    if (filter === \"1\") {\r\n      setPostList(\r\n        listAllDocument.filter((data) => {\r\n          if (data.status === 3) {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n    } else if (filter === \"2\") {\r\n      setPostList(\r\n        listContract.filter((data) => {\r\n          if (data.status === 3) {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      setPostList(\r\n        listInvoice.filter((data) => {\r\n          if (data.status === 3) {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n  function NotSigned() {\r\n    setPage(0);\r\n    if (filter === \"1\") {\r\n      setPostList(\r\n        listAllDocument.filter((data) => {\r\n          if (data.status < 3) {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n    } else if (filter === \"2\") {\r\n      setPostList(\r\n        listContract.filter((data) => {\r\n          if (data.status < 3) {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      setPostList(\r\n        listInvoice.filter((data) => {\r\n          if (data.status < 3) {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Navbar />\r\n      </header>\r\n      <main className=\"main-panel\">\r\n        <Dialog open={isOpen} onClose={toogle} TransitionComponent={Transition}>\r\n          <DialogContent>\r\n            <img\r\n              style={{ marginLeft: \"20%\" }}\r\n              src={choo}\r\n              alt=\"\"\r\n              width=\"280px\"\r\n              height=\"280px\"\r\n            />\r\n          </DialogContent>\r\n          <DialogTitle>\r\n            Please select the type of document you want create?\r\n          </DialogTitle>\r\n          <DialogActions style={{ paddingBottom: \"30px\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginRight: \"15%\" }}\r\n              onClick={AddContract}\r\n            >\r\n              Contract\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginRight: \"20%\", width: \"104px\" }}\r\n              onClick={AddInvoice}\r\n            >\r\n              Invoice\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Container fluid={true}>\r\n          <div className=\"form-create\">\r\n            <FormGroup row>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                onClick={toogle}\r\n              >\r\n                +Create\r\n              </Button>\r\n              <Col>\r\n                <Row>\r\n                  <TextField\r\n                    name=\"search\"\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    value={find}\r\n                    placeholder=\"Search by name document\"\r\n                    onChange={(event) => {\r\n                      setFind(event.target.value);\r\n                    }}\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    style={{ marginLeft: 20 }}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <SearchIcon color=\"primary\" />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                </Row>\r\n              </Col>\r\n\r\n              <FormControl\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                style={{ marginLeft: 20 }}\r\n              >\r\n                <Select\r\n                  defaultValue={1}\r\n                  onChange={(e) => setFilter(e.target.value)}\r\n                >\r\n                  <MenuItem onClick={All} value=\"1\">\r\n                    All\r\n                  </MenuItem>\r\n                  <MenuItem onClick={Contract} value=\"2\">\r\n                    Contract\r\n                  </MenuItem>\r\n                  <MenuItem onClick={Invoice} value=\"3\">\r\n                    Invoice\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <Col>\r\n                <Row>\r\n                  <Paper\r\n                    square\r\n                    elevation={0}\r\n                    style={{ position: \"absolute\", right: 0, height: 40 }}\r\n                  >\r\n                    <Tabs\r\n                      value={value}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      onChange={handleChange}\r\n                    >\r\n                      <Tab\r\n                        style={{ fontWeight: \"bold\" }}\r\n                        value={3}\r\n                        onClick={Signed}\r\n                        label=\"Signed\"\r\n                      />\r\n                      <Tab\r\n                        style={{ fontWeight: \"bold\" }}\r\n                        value={2}\r\n                        onClick={NotSigned}\r\n                        label=\"Not signed\"\r\n                      />\r\n                    </Tabs>\r\n                  </Paper>\r\n                </Row>\r\n              </Col>\r\n            </FormGroup>\r\n            <TablePagination\r\n              hidden={find !== \"\" ? true : false}\r\n              component=\"div\"\r\n              count={postList.length}\r\n              page={page}\r\n              onChangePage={changePage}\r\n              rowsPerPage={rowsPerPage}\r\n              labelRowsPerPage=\"\"\r\n              rowsPerPageOptions={[]}\r\n            />\r\n          </div>\r\n          {loading ? (\r\n            <ScaleLoader color={\"#2512DF\"} loading={loading} size={40} />\r\n          ) : (\r\n            <Table hidden={find !== \"\" ? true : false} hover>\r\n              <tbody>\r\n                {currentPosts.map((doc, key) => (\r\n                  <tr key={key}>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (doc.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        } else if (doc.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}>Creator name</Label>\r\n                      <br />\r\n                      <Label>\r\n                        <GetCreater id={doc.creatorId} />\r\n                      </Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (doc.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        } else if (doc.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}>\r\n                        Title document\r\n                      </Label>\r\n                      <br />\r\n                      <Label className=\"demo demo-2\">{doc.title}</Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (doc.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        } else if (doc.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}>Status</Label>\r\n                      <br />\r\n                      <Label className=\"step\">\r\n                        {doc.contractUrl ? (\r\n                          <ContractStepper value={doc.status} />\r\n                        ) : (\r\n                          <div style={{ marginRight: 80 }}>\r\n                            <InvoiceStepper value={doc.status} />\r\n                          </div>\r\n                        )}\r\n                      </Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (doc.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        } else if (doc.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label></Label>\r\n                      <br />\r\n                      <Label>\r\n                        {doc.invoiceURL ? (\r\n                          <img\r\n                            hidden={doc.status >= 3 ? false : true}\r\n                            src={invoicecompleted}\r\n                            alt=\"\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            hidden={doc.status >= 3 ? false : true}\r\n                            src={done}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        <img\r\n                          hidden={doc.status < 3 ? false : true}\r\n                          src={notsigned}\r\n                          alt=\"\"\r\n                        />\r\n                      </Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (doc.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        } else if (doc.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + doc.id + \"/\" + doc.title,\r\n                            state: doc,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}></Label>\r\n                      <br />\r\n                      <Label>\r\n                        {Moment(doc.dateCreate).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                      </Label>\r\n                    </td>\r\n                    <td>\r\n                      <Label></Label>\r\n                      <br />\r\n                      <Label hidden={doc.status < 3 ? false : true}>\r\n                        <DeleteIcon\r\n                          onClick={() => setDel(true)}\r\n                          fontSize=\"default\"\r\n                          style={{cursor:'pointer'}}\r\n                        />\r\n                      </Label>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n          <Table hover hidden={find === \"\" ? true : false}>\r\n            <tbody>\r\n              {postList\r\n                .filter((data) => {\r\n                  if (data.title.toLowerCase().includes(find.toLowerCase())) {\r\n                    return data;\r\n                  }\r\n                })\r\n                .map((data, key) => (\r\n                  <tr key={key}>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (data.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        } else if (data.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}>Creator name</Label>\r\n                      <br />\r\n                      <Label>\r\n                        <GetCreater id={data.creatorId} />\r\n                      </Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (data.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        } else if (data.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}>\r\n                        Title document\r\n                      </Label>\r\n                      <br />\r\n                      <Label className=\"demo\">{data.title}</Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (data.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        } else if (data.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}>Status</Label>\r\n                      <br />\r\n                      <Label className=\"step\">\r\n                        {data.contractUrl ? (\r\n                          <ContractStepper value={data.status} />\r\n                        ) : (\r\n                          <div style={{ marginRight: 80 }}>\r\n                            <InvoiceStepper value={data.status} />\r\n                          </div>\r\n                        )}\r\n                      </Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (data.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        } else if (data.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label></Label>\r\n                      <br />\r\n                      <Label>\r\n                        <img\r\n                          hidden={data.status >= 3 ? false : true}\r\n                          src={done}\r\n                          alt=\"\"\r\n                        />\r\n                        <img\r\n                          hidden={data.status < 3 ? false : true}\r\n                          src={notsigned}\r\n                          alt=\"\"\r\n                        />\r\n                      </Label>\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        if (data.contractUrl) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/contract/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        } else if (data.invoiceURL) {\r\n                          history.push({\r\n                            pathname:\r\n                              \"/detail/invoice/\" + data.id + \"/\" + data.title,\r\n                            state: data,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Label style={{ fontWeight: \"bold\" }}></Label>\r\n                      <br />\r\n                      <Label>\r\n                        {Moment(data.dateCreate).format(\"DD/MM/YYYY\")}\r\n                      </Label>\r\n                    </td>\r\n                    <td>\r\n                      <Label></Label>\r\n                      <br />\r\n                      <Label hidden={data.status < 3 ? false : true}>\r\n                        <DeleteIcon\r\n                          onClick={() => setDel(true)}\r\n                          fontSize=\"default\"\r\n                          style={{cursor:'pointer'}}\r\n                        />\r\n                      </Label>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n          <Modal isOpen={dele}>\r\n            <ModalHeader>Are you sure delete document?</ModalHeader>\r\n            <ModalFooter>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                style={{ marginRight: \"5px\" }}\r\n                onClick={() => setDel(!dele)}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button color=\"primary\" variant=\"contained\">\r\n                Yes\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default Document;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\DetailDocument\\ContractDetail.js",["262"],"import { Container, Form, FormGroup, Row, Col, Label } from \"reactstrap\";\r\nimport Header from \"../Nav/Header\";\r\nimport PDF from \"../PDF/PDF\";\r\nimport notsigned from \"../../images/status.png\";\r\nimport done from \"../../images/true.png\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport userListAPI from \"../../api/userListAPI\";\r\nimport GetCreater from \"../GetData/GetCreater\";\r\nimport fileDownload from \"js-file-download\";\r\nimport contractAPI from \"../../api/contractAPI\";\r\nimport StepDetailContract from \"../Sidebar/StepDetailContract\";\r\nimport companyListAPI from \"../../api/companyListAPI\";\r\nimport axios from \"axios\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TitleIcon from \"@material-ui/icons/Title\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\nimport {\r\n  InputAdornment,\r\n  Paper,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  Table,\r\n  TextField,\r\n  withStyles,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport GetEmail from \"../GetData/GetEmail\";\r\nimport GetPhone from \"../GetData/GetPhone\";\r\nimport moment from \"moment\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: theme.palette.common.black,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction ContractDetail() {\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const [signer1, setSigner1] = useState([]);\r\n  const [signer2, setSigner2] = useState([]);\r\n  const [company1, setCompany1] = useState([]);\r\n  const [company2, setCompany2] = useState([]);\r\n  const [document, setDocument] = useState([]);\r\n  const [viewer, setViewer] = useState([]);\r\n  const [id1, setId1] = useState();\r\n  const [id2, setId2] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage] = useState(2);\r\n  const indexOfLastPost = (page + 1) * rowsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\r\n  const currentPosts = viewer.slice(indexOfFirstPost, indexOfLastPost);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const par = useParams();\r\n  useEffect(() => {\r\n    async function getDocument() {\r\n      try {\r\n        const res = await contractAPI.getContractById(par.id);\r\n        setDocument(res.data);\r\n        setViewer(res.data.contractViewers);\r\n        setId1(res.data.contractSigners[0].signerId);\r\n        setId2(res.data.contractSigners[1].signerId);\r\n        setActiveStep(res.data.status);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getDocument();\r\n  }, [par.id]);\r\n\r\n  useEffect(() => {\r\n    async function getSigner1() {\r\n      try {\r\n        const res = await userListAPI.getUserById(id1);\r\n        setSigner1(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getSigner1();\r\n  }, [id1]);\r\n  useEffect(() => {\r\n    async function getSigner2() {\r\n      try {\r\n        const res = await userListAPI.getUserById(id2);\r\n        setSigner2(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getSigner2();\r\n  }, [id2]);\r\n  useEffect(() => {\r\n    async function getCompany1() {\r\n      try {\r\n        const res = await companyListAPI.getCompanyById(signer1.companyId);\r\n        setCompany1(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getCompany1();\r\n  }, [signer1.companyId]);\r\n  useEffect(() => {\r\n    async function getCompany2() {\r\n      try {\r\n        const res = await companyListAPI.getCompanyById(signer2.companyId);\r\n        setCompany2(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getCompany2();\r\n  }, [signer2.companyId]);\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Navbar />\r\n      </header>\r\n      <StepDetailContract activeStep={activeStep} />\r\n      <main className=\"main-contract\">\r\n        <Container fluid>\r\n          <Row>\r\n            <Col>\r\n              <Paper style={{ marginTop: \"20px\" }} elevation={3}>\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                  }}\r\n                >\r\n                  Contract Content\r\n                </Label>\r\n                <br />\r\n                <Label style={{ marginTop: \"10px\" }}>\r\n                  <img\r\n                    hidden={document.status === 3 ? false : true}\r\n                    src={done}\r\n                    alt=\"\"\r\n                  />\r\n                  <img\r\n                    hidden={document.status !== 3 ? false : true}\r\n                    src={notsigned}\r\n                    alt=\"\"\r\n                  />\r\n                </Label>\r\n\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  value={document.title}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <TitleIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  value={company1.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BusinessIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  value={signer1.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BorderColorIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  value={company2.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BusinessIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  value={signer2.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BorderColorIcon color=\"primary\" fontSize=\"large\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TableContainer>\r\n                  <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell>Viewer name</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">Email</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">\r\n                          Phone number\r\n                        </StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {currentPosts.map((row) => (\r\n                        <StyledTableRow key={row.name}>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            <GetCreater id={row.viewerId} />\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            <GetEmail id={row.viewerId} />\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            <GetPhone id={row.viewerId} />\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={viewer.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  labelRowsPerPage=\"\"\r\n                  onChangePage={handleChangePage}\r\n                  rowsPerPageOptions={[]}\r\n                />\r\n\r\n                <TextField\r\n                  label=\"Date expiration\"\r\n                  value={moment(document.dateExpire).format(\r\n                    \"DD/MM/YYYY HH:mm:ss\"\r\n                  )}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <EventAvailableIcon color=\"primary\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </Paper>\r\n              <Button\r\n                hidden={activeStep >= 3 ? false : true}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                style={{ marginTop: \"20px\", marginRight: \"10px\" }}\r\n                startIcon={<SaveIcon />}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  axios\r\n                    .get(document.contractUrl, {\r\n                      responseType: \"blob\",\r\n                    })\r\n                    .then(function (res) {\r\n                      fileDownload(res.data, document.title + \".pdf\");\r\n                    })\r\n                    .catch(function (error) {\r\n                      console.log(error);\r\n                    });\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button\r\n                hidden={activeStep >= 3 ? false : true}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                style={{ marginTop: \"20px\" }}\r\n                startIcon={<PrintIcon />}\r\n              >\r\n                Print\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Form className=\"form-doc\">\r\n                <FormGroup row>\r\n                  <div>\r\n                    <PDF pdf={document.contractUrl} />\r\n                  </div>\r\n                </FormGroup>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default ContractDetail;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\DetailDocument\\InvoiceDetail.js",["263","264","265"],"import { Container, Form, FormGroup, Row, Col, Label } from \"reactstrap\";\r\nimport Header from \"../Nav/Header\";\r\nimport StepDetail from \"../Sidebar/StepDetail\";\r\nimport PDF from \"../PDF/PDF\";\r\nimport notsigned from \"../../images/status.png\";\r\nimport done from \"../../images/invoicecompleted.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport userListAPI from \"../../api/userListAPI\";\r\nimport invoiceAPI from \"../../api/invoiceAPI\";\r\nimport GetCreater from \"../GetData/GetCreater\";\r\nimport fileDownload from \"js-file-download\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport { InputAdornment, TablePagination } from \"@material-ui/core\";\r\nimport TitleIcon from \"@material-ui/icons/Title\";\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport \"date-fns\";\r\nimport Moment from \"moment\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport GetEmail from \"../GetData/GetEmail\";\r\nimport GetPhone from \"../GetData/GetPhone\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: theme.palette.common.black,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction InvoiceDetail() {\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const [document, setDocument] = useState([]);\r\n  const [signer, setSigner] = useState([]);\r\n  const [viewer, setViewer] = useState([]);\r\n  const [signerId, setSignerId] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage] = useState(2);\r\n  const indexOfLastPost = (page + 1) * rowsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - rowsPerPage;\r\n  const currentPosts = viewer.slice(indexOfFirstPost, indexOfLastPost);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const param = useParams();\r\n  useEffect(() => {\r\n    async function getInvoiceById() {\r\n      try {\r\n        const res = await invoiceAPI.getInvoiceById(param.id);\r\n        setDocument(res.data);\r\n        setViewer(res.data.viewers);\r\n        setActiveStep(res.data.status + 1);\r\n        setSignerId(res.data.signerId);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getInvoiceById();\r\n  }, []);\r\n  useEffect(() => {\r\n    async function getSigner() {\r\n      try {\r\n        const res = await userListAPI.getUserById(signerId);\r\n        setSigner(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getSigner();\r\n  }, [signerId]);\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Navbar />\r\n      </header>\r\n      <StepDetail activeStep={activeStep} />\r\n      <main className=\"main-invoice\">\r\n        <Container fluid={true}>\r\n          <Row>\r\n            <Col>\r\n              <Paper style={{ marginTop: \"20px\" }} elevation={3}>\r\n                <Label\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                  }}\r\n                >\r\n                  Invoice Content\r\n                </Label>\r\n                <br />\r\n                <Label style={{ marginTop: \"10px\" }}>\r\n                  <img\r\n                    hidden={document.status === 3 ? false : true}\r\n                    src={done}\r\n                    alt=\"\"\r\n                  />\r\n                  <img\r\n                    hidden={document.status !== 3 ? false : true}\r\n                    src={notsigned}\r\n                    alt=\"\"\r\n                  />\r\n                </Label>\r\n\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  value={document.title}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <TitleIcon color=\"primary\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  value={signer.name}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BorderColorIcon color=\"primary\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n\r\n                <TableContainer style={{ marginTop: \"20px\", padding: \"10px\" }}>\r\n                  <Table aria-label=\"customized table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell>Viewer name</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">Email</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">\r\n                          Phone number\r\n                        </StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {currentPosts.map((row) => (\r\n                        <StyledTableRow key={row.viewerId}>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            <GetCreater id={row.viewerId} />\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            <GetEmail id={row.viewerId} />\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            <GetPhone id={row.viewerId} />\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={viewer.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  labelRowsPerPage=\"\"\r\n                  onChangePage={handleChangePage}\r\n                  rowsPerPageOptions={[]}\r\n                />\r\n                <TextField\r\n                  label=\"Date expiration\"\r\n                  value={Moment(document.dateSign).format(\r\n                    \"DD/MM/YYYY HH:mm:ss\"\r\n                  )}\r\n                  fullWidth\r\n                  style={{ marginTop: \"20px\", padding: \"10px 10px 10px\" }}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <EventAvailableIcon color=\"primary\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </Paper>\r\n              <Button\r\n                hidden={activeStep >= 3 ? false : true}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                style={{ marginTop: \"20px\", marginRight: \"10px\" }}\r\n                startIcon={<SaveIcon />}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  axios\r\n                    .get(document.invoiceURL, {\r\n                      responseType: \"blob\",\r\n                    })\r\n                    .then(function (res) {\r\n                      fileDownload(res.data, document.title + \".pdf\");\r\n                    })\r\n                    .catch(function (error) {\r\n                      console.log(error);\r\n                    });\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button\r\n                hidden={activeStep >= 3 ? false : true}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                style={{ marginTop: \"20px\" }}\r\n                startIcon={<PrintIcon />}\r\n              >\r\n                Print\r\n              </Button>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form className=\"form-doc\">\r\n                <FormGroup row>\r\n                  <div>\r\n                    <PDF pdf={document.invoiceURL} />\r\n                  </div>\r\n                </FormGroup>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default InvoiceDetail;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminCompany\\DepartmentManagement\\DepartmentManagement.js",["266","267","268","269","270","271","272","273","274"],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\AdminCompany\\UserManagement\\UserManagement.js",["275","276","277","278","279","280","281","282","283","284"],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\CompanyRegister\\CompanyRegister.js",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299"],"import React, { useState } from \"react\";\r\nimport \"../../css/CompanyRegister.css\";\r\nimport register from \"../../images/register.png\";\r\nimport { Col, Container, Form, Label, Row } from \"reactstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SidebarAdmin from \"../Sidebar/SidebarAdmin\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Slide,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport Moment from \"moment\";\r\nimport md5 from \"md5\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { getUser } from \"../../utils/Common\";\r\nimport companyListAPI from \"../../api/companyListAPI\";\r\nimport departmentAPI from \"../../api/departmentAPI\";\r\nimport userListAPI from \"../../api/userListAPI\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router\";\r\nimport validateAPI from \"../../api/validateAPI\";\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"right\" />;\r\n}\r\n\r\nfunction CompanyRegister() {\r\n  const [companyRegister, setCompanyRegister] = useState({\r\n    company_name: \"\",\r\n    address: \"\",\r\n    phone: null,\r\n    manager_name: \"\",\r\n    manager_email: \"\",\r\n  });\r\n  const history = useHistory();\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [error, setError] = useState({\r\n    company_name: false,\r\n    address: false,\r\n    phone: false,\r\n    manager_name: false,\r\n    email: false,\r\n    message: \"\",\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setCompanyRegister({\r\n      ...companyRegister,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const company = {\r\n      name: companyRegister.company_name,\r\n      phone: \"+84\" + companyRegister.phone.substring(1),\r\n      address: companyRegister.address,\r\n      dateCreate: Moment(new Date()).format(\r\n        \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\r\n      ),\r\n      creatorId: getUser().Id,\r\n      status: 1,\r\n    };\r\n    companyListAPI\r\n      .addCompany(company)\r\n      .then(function (res) {\r\n        const param = {\r\n          name: \"Manager\",\r\n          companyId: res.data.id,\r\n          creatorId: getUser().Id,\r\n          dateCreate: Moment(new Date()).format(\r\n            \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\r\n          ),\r\n        };\r\n        departmentAPI\r\n          .addDepartment(param)\r\n          .then(function (department) {\r\n            const sub = {\r\n              name: \"Admin\",\r\n              departmentId: department.data.id,\r\n              companyId: res.data.id,\r\n              creatorId: getUser().Id,\r\n              dateCreate: Moment(new Date()).format(\r\n                \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\r\n              ),\r\n            };\r\n            departmentAPI.addSubDepartment(sub).then(function (subdepartment) {\r\n              const user = {\r\n                name: companyRegister.manager_name,\r\n                avatar: \"\",\r\n                email: companyRegister.manager_email,\r\n                password: md5(\"123Aabc\").trim().toString(),\r\n                phone: \"+84\" + companyRegister.phone.substring(1),\r\n                address: companyRegister.address,\r\n                dateCreate: Moment(new Date()).format(\r\n                  \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\r\n                ),\r\n                creatorId: getUser().Id,\r\n                subDepartmentId: subdepartment.data.id,\r\n                departmentId: department.data.id,\r\n                companyId: res.data.id,\r\n                role: \"1\",\r\n                status: 1,\r\n              };\r\n              userListAPI\r\n                .addUser(user)\r\n                .then(function (newUser) {\r\n                  const data = {\r\n                    id: res.data.id,\r\n                    phone: \"+84\" + companyRegister.phone.substring(1),\r\n                    address: companyRegister.address,\r\n                    dateCreate: Moment(new Date()).format(\r\n                      \"yyyy-MM-DD\" + \"T\" + \"HH:mm:ss.SSS\" + \"Z\"\r\n                    ),\r\n                    adminId: newUser.data.id,\r\n                    status: 1,\r\n                  };\r\n                  companyListAPI.updateCompany(data).then(function () {\r\n                    toast.success(\"Add company successfully\", {\r\n                      position: toast.POSITION.TOP_CENTER,\r\n                    });\r\n                    history.push(\"/company-list\");\r\n                  });\r\n                })\r\n                .catch(function (error) {\r\n                  console.log(error);\r\n                });\r\n            });\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n  function handleConfirm(e) {\r\n    e.preventDefault();\r\n    var pattern = new RegExp(\r\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n    );\r\n    if (companyRegister.company_name.length > 255) {\r\n      setError({\r\n        ...error,\r\n        company_name: true,\r\n        message: \"Company name max length 255 characters\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          company_name: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (companyRegister.company_name === \"\") {\r\n      setError({\r\n        ...error,\r\n        company_name: true,\r\n        message: \"Company name must not empty\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          company_name: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (companyRegister.manager_name.length > 255) {\r\n      setError({\r\n        ...error,\r\n        manager_name: true,\r\n        message: \"Manager name max length 255 characters\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          manager_name: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (companyRegister.manager_name === \"\") {\r\n      setError({\r\n        ...error,\r\n        manager_name: true,\r\n        message: \"Manager name must not empty\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          manager_name: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (companyRegister.phone === null) {\r\n      setError({\r\n        ...error,\r\n        phone: true,\r\n        message: \"Phone number must not empty\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          phone: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (!companyRegister.phone.trim().match(\"^[0-9]{10}$\")) {\r\n      setError({\r\n        ...error,\r\n        phone: true,\r\n        message: \"Invalid phone number\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          phone: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (companyRegister.manager_email === \"\") {\r\n      setError({\r\n        ...error,\r\n        email: true,\r\n        message: \"Please enter email\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          email: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (!pattern.test(companyRegister.manager_email)) {\r\n      setError({\r\n        ...error,\r\n        email: true,\r\n        message: \"Invalid email\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          email: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else if (companyRegister.address.length > 255) {\r\n      setError({\r\n        ...error,\r\n        address: true,\r\n        message: \"Address max length 255 characters\",\r\n      });\r\n      setTimeout(() => {\r\n        setError({\r\n          ...error,\r\n          address: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    } else {\r\n      const phone = \"84\" + companyRegister.phone.substring(1);\r\n      validateAPI\r\n        .checkEmail(companyRegister.manager_email)\r\n        .then(function () {\r\n          validateAPI\r\n            .checkPhone(phone)\r\n            .then(function () {\r\n              setConfirm(true);\r\n            })\r\n            .catch(function () {\r\n              setError({\r\n                ...error,\r\n                phone: true,\r\n                message: \"Phone number is exist in system\",\r\n              });\r\n              setTimeout(() => {\r\n                setError({\r\n                  ...error,\r\n                  phone: false,\r\n                  message: \"\",\r\n                });\r\n              }, 3000);\r\n            });\r\n        })\r\n        .catch(function () {\r\n          setError({\r\n            ...error,\r\n            email: true,\r\n            message: \"Email is exist in system\",\r\n          });\r\n          setTimeout(() => {\r\n            setError({\r\n              ...error,\r\n              email: false,\r\n              message: \"\",\r\n            });\r\n          }, 3000);\r\n        });\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <SidebarAdmin />\r\n      <div className=\"main-panel\">\r\n        <Container fluid={true}>\r\n          <Snackbar\r\n            open={error.company_name}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            TransitionComponent={TransitionLeft}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error.message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <Snackbar\r\n            open={error.address}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            TransitionComponent={TransitionLeft}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error.message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <Snackbar\r\n            open={error.phone}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            TransitionComponent={TransitionLeft}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error.message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <Snackbar\r\n            open={error.manager_name}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            TransitionComponent={TransitionLeft}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error.message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <Snackbar\r\n            open={error.email}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            TransitionComponent={TransitionLeft}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error.message}\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          <div>\r\n            <img style={{ marginTop: \"20px\" }} src={register} alt=\"\" />\r\n          </div>\r\n          <Form\r\n            style={{\r\n              width: \"60%\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              marginTop: 50,\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            <Row>\r\n              <Col sm={3}>\r\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\r\n                  Company Name\r\n                </Label>\r\n              </Col>\r\n              <Col>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  name=\"company_name\"\r\n                  required\r\n                  size=\"small\"\r\n                  error={error.company_name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 20 }}>\r\n              <Col sm={3}>\r\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\r\n                  Manager Name\r\n                </Label>\r\n              </Col>\r\n              <Col>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  name=\"manager_name\"\r\n                  required\r\n                  error={error.manager_name}\r\n                  size=\"small\"\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 20 }}>\r\n              <Col sm={3}>\r\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\r\n                  Phone Number\r\n                </Label>\r\n              </Col>\r\n              <Col>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  type=\"phone\"\r\n                  name=\"phone\"\r\n                  required\r\n                  size=\"small\"\r\n                  error={error.phone}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 20 }}>\r\n              <Col sm={3}>\r\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\r\n                  Manager Email\r\n                </Label>\r\n              </Col>\r\n              <Col>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  type=\"email\"\r\n                  name=\"manager_email\"\r\n                  required\r\n                  error={error.email}\r\n                  size=\"small\"\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 20 }}>\r\n              <Col sm={3}>\r\n                <Label style={{ fontSize: 20, color: \"blue\" }}>\r\n                  Street Address\r\n                </Label>\r\n              </Col>\r\n              <Col>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  required\r\n                  error={error.address}\r\n                  size=\"small\"\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Button\r\n            style={{ marginTop: 20 }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={handleConfirm}\r\n          >\r\n            Verification\r\n          </Button>\r\n          <Dialog open={confirm} fullWidth>\r\n            <DialogTitle>Confirm Information</DialogTitle>\r\n            <DialogContent>\r\n              <Form style={{ textAlign: \"left\", fontSize: 18 }}>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <Label>Company Name:</Label>\r\n                  </Col>\r\n                  <Col>\r\n                    <Label>{companyRegister.company_name}</Label>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <Label>Manager Name:</Label>\r\n                  </Col>\r\n                  <Col>\r\n                    <Label>{companyRegister.manager_name}</Label>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <Label>Phone Number:</Label>\r\n                  </Col>\r\n                  <Col>\r\n                    <Label>{companyRegister.phone}</Label>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <Label>Manager Email:</Label>\r\n                  </Col>\r\n                  <Col>\r\n                    <Label>{companyRegister.manager_email}</Label>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <Label>Street Address:</Label>\r\n                  </Col>\r\n                  <Col>\r\n                    <Label>{companyRegister.address}</Label>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={() => setConfirm(false)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyRegister;\r\n","C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Profile\\Profile.js",["300"],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\App\\firebase.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\loginAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\companyListAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\userListAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetAdminCompany\\GetAdminCompany.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\SidebarAdmin.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Nav\\Header.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Navbar\\Navbar.js",["301","302"],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Stepper\\ContractStepper.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Stepper\\InvoiceStepper.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\departmentAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\validateAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\axiosClient.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\notiAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetDepartment.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetPhone.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetEmail.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\GetData\\GetCreater.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\invoiceAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepDetail.js",["303","304","305"],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\api\\contractAPI.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\PDF\\PDF.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepDetailContract.js",["306","307","308","309","310","311","312","313"],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\StepInvoice.js",[],"C:\\Users\\Admin\\Desktop\\EOfficeWeb\\src\\components\\Sidebar\\Stepper.js",[],{"ruleId":"314","replacedBy":"315"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","severity":1,"message":"319","line":2,"column":20,"nodeType":"320","messageId":"321","endLine":2,"endColumn":26},{"ruleId":"322","severity":1,"message":"323","line":57,"column":26,"nodeType":"324","messageId":"325","endLine":57,"endColumn":28},{"ruleId":"322","severity":1,"message":"323","line":66,"column":26,"nodeType":"324","messageId":"325","endLine":66,"endColumn":28},{"ruleId":"322","severity":1,"message":"323","line":188,"column":32,"nodeType":"324","messageId":"325","endLine":188,"endColumn":34},{"ruleId":"318","severity":1,"message":"326","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":118,"column":22,"nodeType":"329","messageId":"330","endLine":118,"endColumn":23},{"ruleId":"327","severity":1,"message":"328","line":118,"column":28,"nodeType":"329","messageId":"330","endLine":118,"endColumn":29},{"ruleId":"327","severity":1,"message":"328","line":118,"column":45,"nodeType":"329","messageId":"330","endLine":118,"endColumn":46},{"ruleId":"327","severity":1,"message":"328","line":138,"column":22,"nodeType":"329","messageId":"330","endLine":138,"endColumn":23},{"ruleId":"327","severity":1,"message":"328","line":138,"column":28,"nodeType":"329","messageId":"330","endLine":138,"endColumn":29},{"ruleId":"327","severity":1,"message":"328","line":138,"column":45,"nodeType":"329","messageId":"330","endLine":138,"endColumn":46},{"ruleId":"322","severity":1,"message":"331","line":169,"column":43,"nodeType":"324","messageId":"332","endLine":169,"endColumn":45},{"ruleId":"318","severity":1,"message":"333","line":30,"column":3,"nodeType":"320","messageId":"321","endLine":30,"endColumn":17},{"ruleId":"327","severity":1,"message":"328","line":171,"column":48,"nodeType":"329","messageId":"330","endLine":171,"endColumn":49},{"ruleId":"327","severity":1,"message":"328","line":171,"column":54,"nodeType":"329","messageId":"330","endLine":171,"endColumn":55},{"ruleId":"327","severity":1,"message":"328","line":171,"column":71,"nodeType":"329","messageId":"330","endLine":171,"endColumn":72},{"ruleId":"327","severity":1,"message":"328","line":172,"column":46,"nodeType":"329","messageId":"330","endLine":172,"endColumn":47},{"ruleId":"327","severity":1,"message":"328","line":172,"column":52,"nodeType":"329","messageId":"330","endLine":172,"endColumn":53},{"ruleId":"327","severity":1,"message":"328","line":172,"column":69,"nodeType":"329","messageId":"330","endLine":172,"endColumn":70},{"ruleId":"327","severity":1,"message":"328","line":220,"column":26,"nodeType":"329","messageId":"330","endLine":220,"endColumn":27},{"ruleId":"327","severity":1,"message":"328","line":220,"column":32,"nodeType":"329","messageId":"330","endLine":220,"endColumn":33},{"ruleId":"327","severity":1,"message":"328","line":220,"column":49,"nodeType":"329","messageId":"330","endLine":220,"endColumn":50},{"ruleId":"334","severity":1,"message":"335","line":258,"column":6,"nodeType":"336","endLine":258,"endColumn":8,"suggestions":"337"},{"ruleId":"322","severity":1,"message":"323","line":63,"column":24,"nodeType":"324","messageId":"325","endLine":63,"endColumn":26},{"ruleId":"322","severity":1,"message":"323","line":79,"column":24,"nodeType":"324","messageId":"325","endLine":79,"endColumn":26},{"ruleId":"322","severity":1,"message":"331","line":94,"column":23,"nodeType":"324","messageId":"332","endLine":94,"endColumn":25},{"ruleId":"327","severity":1,"message":"328","line":111,"column":48,"nodeType":"329","messageId":"330","endLine":111,"endColumn":49},{"ruleId":"327","severity":1,"message":"328","line":111,"column":54,"nodeType":"329","messageId":"330","endLine":111,"endColumn":55},{"ruleId":"327","severity":1,"message":"328","line":111,"column":71,"nodeType":"329","messageId":"330","endLine":111,"endColumn":72},{"ruleId":"327","severity":1,"message":"328","line":112,"column":46,"nodeType":"329","messageId":"330","endLine":112,"endColumn":47},{"ruleId":"327","severity":1,"message":"328","line":112,"column":52,"nodeType":"329","messageId":"330","endLine":112,"endColumn":53},{"ruleId":"327","severity":1,"message":"328","line":112,"column":69,"nodeType":"329","messageId":"330","endLine":112,"endColumn":70},{"ruleId":"327","severity":1,"message":"328","line":144,"column":26,"nodeType":"329","messageId":"330","endLine":144,"endColumn":27},{"ruleId":"327","severity":1,"message":"328","line":144,"column":32,"nodeType":"329","messageId":"330","endLine":144,"endColumn":33},{"ruleId":"327","severity":1,"message":"328","line":144,"column":49,"nodeType":"329","messageId":"330","endLine":144,"endColumn":50},{"ruleId":"334","severity":1,"message":"335","line":184,"column":6,"nodeType":"336","endLine":184,"endColumn":8,"suggestions":"338"},{"ruleId":"322","severity":1,"message":"323","line":176,"column":37,"nodeType":"324","messageId":"325","endLine":176,"endColumn":39},{"ruleId":"322","severity":1,"message":"323","line":187,"column":37,"nodeType":"324","messageId":"325","endLine":187,"endColumn":39},{"ruleId":"322","severity":1,"message":"323","line":200,"column":39,"nodeType":"324","messageId":"325","endLine":200,"endColumn":41},{"ruleId":"322","severity":1,"message":"323","line":208,"column":36,"nodeType":"324","messageId":"325","endLine":208,"endColumn":38},{"ruleId":"322","severity":1,"message":"323","line":216,"column":35,"nodeType":"324","messageId":"325","endLine":216,"endColumn":37},{"ruleId":"322","severity":1,"message":"323","line":228,"column":39,"nodeType":"324","messageId":"325","endLine":228,"endColumn":41},{"ruleId":"322","severity":1,"message":"323","line":236,"column":36,"nodeType":"324","messageId":"325","endLine":236,"endColumn":38},{"ruleId":"322","severity":1,"message":"323","line":244,"column":35,"nodeType":"324","messageId":"325","endLine":244,"endColumn":37},{"ruleId":"322","severity":1,"message":"323","line":551,"column":32,"nodeType":"324","messageId":"325","endLine":551,"endColumn":34},{"ruleId":"318","severity":1,"message":"326","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":14},{"ruleId":"318","severity":1,"message":"326","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":14},{"ruleId":"318","severity":1,"message":"339","line":18,"column":8,"nodeType":"320","messageId":"321","endLine":18,"endColumn":27},{"ruleId":"334","severity":1,"message":"340","line":83,"column":6,"nodeType":"336","endLine":83,"endColumn":8,"suggestions":"341"},{"ruleId":"327","severity":1,"message":"328","line":120,"column":24,"nodeType":"329","messageId":"330","endLine":120,"endColumn":25},{"ruleId":"327","severity":1,"message":"328","line":120,"column":30,"nodeType":"329","messageId":"330","endLine":120,"endColumn":31},{"ruleId":"327","severity":1,"message":"328","line":120,"column":47,"nodeType":"329","messageId":"330","endLine":120,"endColumn":48},{"ruleId":"327","severity":1,"message":"328","line":172,"column":24,"nodeType":"329","messageId":"330","endLine":172,"endColumn":25},{"ruleId":"327","severity":1,"message":"328","line":172,"column":30,"nodeType":"329","messageId":"330","endLine":172,"endColumn":31},{"ruleId":"327","severity":1,"message":"328","line":172,"column":47,"nodeType":"329","messageId":"330","endLine":172,"endColumn":48},{"ruleId":"327","severity":1,"message":"328","line":223,"column":24,"nodeType":"329","messageId":"330","endLine":223,"endColumn":25},{"ruleId":"327","severity":1,"message":"328","line":223,"column":30,"nodeType":"329","messageId":"330","endLine":223,"endColumn":31},{"ruleId":"327","severity":1,"message":"328","line":223,"column":47,"nodeType":"329","messageId":"330","endLine":223,"endColumn":48},{"ruleId":"318","severity":1,"message":"342","line":48,"column":10,"nodeType":"320","messageId":"321","endLine":48,"endColumn":24},{"ruleId":"322","severity":1,"message":"323","line":122,"column":30,"nodeType":"324","messageId":"325","endLine":122,"endColumn":32},{"ruleId":"322","severity":1,"message":"323","line":129,"column":30,"nodeType":"324","messageId":"325","endLine":129,"endColumn":32},{"ruleId":"322","severity":1,"message":"323","line":136,"column":30,"nodeType":"324","messageId":"325","endLine":136,"endColumn":32},{"ruleId":"327","severity":1,"message":"328","line":359,"column":24,"nodeType":"329","messageId":"330","endLine":359,"endColumn":25},{"ruleId":"327","severity":1,"message":"328","line":359,"column":30,"nodeType":"329","messageId":"330","endLine":359,"endColumn":31},{"ruleId":"327","severity":1,"message":"328","line":359,"column":47,"nodeType":"329","messageId":"330","endLine":359,"endColumn":48},{"ruleId":"322","severity":1,"message":"323","line":869,"column":33,"nodeType":"324","messageId":"325","endLine":869,"endColumn":35},{"ruleId":"343","severity":1,"message":"344","line":1079,"column":19,"nodeType":"345","endLine":1079,"endColumn":49},{"ruleId":"343","severity":1,"message":"344","line":1081,"column":19,"nodeType":"345","endLine":1081,"endColumn":47},{"ruleId":"327","severity":1,"message":"328","line":67,"column":22,"nodeType":"329","messageId":"330","endLine":67,"endColumn":23},{"ruleId":"327","severity":1,"message":"328","line":67,"column":28,"nodeType":"329","messageId":"330","endLine":67,"endColumn":29},{"ruleId":"327","severity":1,"message":"328","line":67,"column":45,"nodeType":"329","messageId":"330","endLine":67,"endColumn":46},{"ruleId":"327","severity":1,"message":"328","line":80,"column":26,"nodeType":"329","messageId":"330","endLine":80,"endColumn":27},{"ruleId":"327","severity":1,"message":"328","line":80,"column":32,"nodeType":"329","messageId":"330","endLine":80,"endColumn":33},{"ruleId":"327","severity":1,"message":"328","line":80,"column":49,"nodeType":"329","messageId":"330","endLine":80,"endColumn":50},{"ruleId":"327","severity":1,"message":"328","line":92,"column":30,"nodeType":"329","messageId":"330","endLine":92,"endColumn":31},{"ruleId":"327","severity":1,"message":"328","line":92,"column":36,"nodeType":"329","messageId":"330","endLine":92,"endColumn":37},{"ruleId":"327","severity":1,"message":"328","line":92,"column":53,"nodeType":"329","messageId":"330","endLine":92,"endColumn":54},{"ruleId":"327","severity":1,"message":"328","line":104,"column":32,"nodeType":"329","messageId":"330","endLine":104,"endColumn":33},{"ruleId":"327","severity":1,"message":"328","line":104,"column":38,"nodeType":"329","messageId":"330","endLine":104,"endColumn":39},{"ruleId":"327","severity":1,"message":"328","line":104,"column":55,"nodeType":"329","messageId":"330","endLine":104,"endColumn":56},{"ruleId":"327","severity":1,"message":"328","line":121,"column":36,"nodeType":"329","messageId":"330","endLine":121,"endColumn":37},{"ruleId":"327","severity":1,"message":"328","line":121,"column":42,"nodeType":"329","messageId":"330","endLine":121,"endColumn":43},{"ruleId":"327","severity":1,"message":"328","line":121,"column":59,"nodeType":"329","messageId":"330","endLine":121,"endColumn":60},{"ruleId":"346","severity":1,"message":"347","line":374,"column":25,"nodeType":"348","messageId":"349","endLine":374,"endColumn":29,"fix":"350"},{"ruleId":"322","severity":1,"message":"323","line":39,"column":34,"nodeType":"324","messageId":"325","endLine":39,"endColumn":36},{"ruleId":"334","severity":1,"message":"351","line":64,"column":6,"nodeType":"336","endLine":64,"endColumn":8,"suggestions":"352"},{"ruleId":"343","severity":1,"message":"344","line":69,"column":15,"nodeType":"345","endLine":69,"endColumn":18},{"ruleId":"343","severity":1,"message":"344","line":71,"column":15,"nodeType":"345","endLine":71,"endColumn":18},{"ruleId":"343","severity":1,"message":"344","line":95,"column":17,"nodeType":"345","endLine":95,"endColumn":20},{"ruleId":"343","severity":1,"message":"344","line":115,"column":15,"nodeType":"345","endLine":115,"endColumn":18},{"ruleId":"343","severity":1,"message":"344","line":117,"column":15,"nodeType":"345","endLine":117,"endColumn":18},{"ruleId":"343","severity":1,"message":"344","line":127,"column":15,"nodeType":"345","endLine":127,"endColumn":18},{"ruleId":"343","severity":1,"message":"344","line":129,"column":15,"nodeType":"345","endLine":129,"endColumn":18},{"ruleId":"343","severity":1,"message":"344","line":150,"column":17,"nodeType":"345","endLine":150,"endColumn":20},{"ruleId":"343","severity":1,"message":"344","line":152,"column":17,"nodeType":"345","endLine":152,"endColumn":20},{"ruleId":"343","severity":1,"message":"344","line":155,"column":17,"nodeType":"345","endLine":155,"endColumn":20},{"ruleId":"343","severity":1,"message":"344","line":157,"column":17,"nodeType":"345","endLine":157,"endColumn":20},"no-native-reassign",["353"],"no-negated-in-lhs",["354"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Header' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","Array.prototype.map() expects a return value from arrow function.","expectedInside","'FormHelperText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addEventListeners' and 'removeEventListeners'. Either include them or remove the dependency array.","ArrayExpression",["355"],["356"],"'InsertDriveFileIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'param.id'. Either include it or remove the dependency array.",["357"],"'TransitionLeft' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"358","text":"359"},"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["360"],"no-global-assign","no-unsafe-negation",{"desc":"361","fix":"362"},{"desc":"361","fix":"363"},{"desc":"364","fix":"365"},[10565,10576],"",{"desc":"366","fix":"367"},"Update the dependencies array to be: [addEventListeners, removeEventListeners]",{"range":"368","text":"369"},{"range":"370","text":"369"},"Update the dependencies array to be: [param.id]",{"range":"371","text":"372"},"Update the dependencies array to be: [history]",{"range":"373","text":"374"},[7260,7262],"[addEventListeners, removeEventListeners]",[5540,5542],[3159,3161],"[param.id]",[2165,2167],"[history]"]